[{"id":226816942,"issue_id":919,"user_id":10111,"body":"`^@` は vim では 0x00 なので(CTRL-V 000 すれば出ます)、受信バッファに対して受け取ったバイト数以上の物を結果に出してしまっています。","created_at":1466181077},{"id":226909118,"issue_id":919,"user_id":468368,"body":"つまりバッファーオーバーラン?","created_at":1466208944},{"id":226921658,"issue_id":919,"user_id":943423,"body":"```diff\r\ndiff --git a/src/channel.c b/src/channel.c\r\n--- a/src/channel.c\r\n+++ b/src/channel.c\r\n@@ -1612,7 +1612,7 @@ channel_get_all(channel_T *channel, int\r\n {\r\n     readq_T *head = &channel->ch_part[part].ch_head;\r\n     readq_T *node = head->rq_next;\r\n-    long_u  len = 1;\r\n+    long_u  len = 0;\r\n     char_u  *res;\r\n     char_u  *p;\r\n\r\n@@ -1623,7 +1623,7 @@ channel_get_all(channel_T *channel, int\r\n     /* Concatenate everything into one buffer. */\r\n     for (node = head->rq_next; node != NULL; node = node->rq_next)\r\n        len += node->rq_buflen;\r\n-    res = lalloc(len, TRUE);\r\n+    res = lalloc(len + 1, TRUE);\r\n     if (res == NULL)\r\n        return NULL;\r\n     p = res;\r\n```\r\n\r\n余計な文字はこれで消えました。","created_at":1466224951},{"id":226922142,"issue_id":919,"user_id":943423,"body":"初期値を `len = 1` にしているので、\r\nhttps://github.com/vim/vim/blob/678e480/src/channel.c#L1635\r\nここのNUL終端が\r\nhttps://github.com/vim/vim/blob/678e480/src/channel.c#L1645-L1650\r\nここでNLに書き換わっています。","created_at":1466225804},{"id":226930834,"issue_id":919,"user_id":518808,"body":"@ichizok :+1:\r\n\r\n> なぜかランダムに改行が入ってしまいます。\r\n\r\nこれはバッファへの書き込みに行指向で追加する関数を使用しているからですね。(`append_to_buffer()`→`ml_append()`)\r\nファイルに書き出すと改行は入りませんでした。\r\n\r\n`raw`モードの時は行指向じゃなくすればいいのかな？","created_at":1466240796},{"id":226949210,"issue_id":919,"user_id":518808,"body":"@ichizok ichizokさんのpatchだけで先にvim_devに投げてみません？\r\n改行の件は「`raw`モードの時、受信処理の度に改行されちゃっていいのかな？」みたいな感じでBram氏に伝えてもらえるとありがたいです。\r\nもちろんフォローはします:+1:","created_at":1466264785},{"id":226975896,"issue_id":919,"user_id":518808,"body":"@ichizok ついでにchannel.cのL1642辺りのコーディングスタイルミスもpatchに含めていただけるとありがたい。\r\n```patch\r\n-    } while (p != NULL);\r\n+    }\r\n+    while (p != NULL);\r\n```","created_at":1466303722},{"id":227432674,"issue_id":919,"user_id":518808,"body":"@ichizok :clap:リアクション下さーい","created_at":1466514217},{"id":227437372,"issue_id":919,"user_id":943423,"body":"@h-east すみません、あとテスト追加して投げます","created_at":1466515308},{"id":228712223,"issue_id":919,"user_id":943423,"body":"https://groups.google.com/forum/#!topic/vim_dev/CBNPy-ngFEA\r\n報告しました。","created_at":1467024228},{"id":228929479,"issue_id":919,"user_id":518808,"body":"buffer-overrunの件、修正されました:+1:\r\npatch 7.4.1965\r\nhttps://github.com/vim/vim/commit/adb78a77ebb47627bcf73bd16ac1119d970e17c8\r\n\r\n===\r\n↓せっかくichizokさんがpatchに含めてくれたんだけどBram氏がスルーしちゃった。涙\r\n`} while (p != NULL);`","created_at":1467079874},{"id":226672763,"issue_id":918,"user_id":468368,"body":"https://github.com/vim/vim/blob/1aa07bdead2e93501c54591e31fe73b9b09c58b5/src/Make_cyg_ming.mak#L161\r\n\r\n```make\r\nLUA_LIB = -L$(LUA)/lib -llua\r\n```\r\n\r\nhttps://github.com/vim/vim/blob/1aa07bdead2e93501c54591e31fe73b9b09c58b5/src/Make_cyg_ming.mak#L451\r\n\r\n```make\r\nCFLAGS += -I$(LUA)/include -I$(LUA) -DFEAT_LUA\r\n```\r\n\r\nのように `$LUA` は2 箇所で使われていて、msys2 パッケージ構成とは合わないよね、という話。\r\n\r\n互換性を保ちつつ対応するには `LUA_LIBDIR` と `LUA_INCDIR` みたいな中間変数を介するようにし、\r\nそれぞれはデフォルトで `LUA` から生成して、外部から直接指定もできるようにするのが良さそう。\r\nざっくりとはこんな感じ。\r\n\r\n```make\r\nLUA_INCDIR=$(LUA)/include\r\nLUA_LIBDIR=$(LUA)/lib\r\n\r\nLUA_LIB=-L$(LUA_LIBDIR) -llua\r\n\r\nCFLAGS += -I$(LUA_INCDIR) -I$(LUA) -DFEAT_LUA\r\n```\r\n\r\nCygwinも含めてアグレッシブに対応するなら、pkgconf で持ってくるように変更しちゃうとか。\r\n動作確認はややめんどうそうだけど。","created_at":1466134504},{"id":226677091,"issue_id":918,"user_id":840186,"body":"> Cygwinも含めてアグレッシブに対応するなら、pkgconf で持ってくるように変更しちゃうとか。\r\n\r\nCygwinの方は、Cygwinに入っているMinGWクロスコンパイラパッケージを使ってWin32向けにビルドするもので、しかもクロスコンパイル用lua(jit)パッケージは用意されてませんから、pkgconfのことは考えなくていいでしょう。","created_at":1466137177},{"id":224233673,"issue_id":915,"user_id":840186,"body":"channel.txt より、\r\n\r\n```\r\n                                                *job-term*\r\n\"term\": \"open\"          Start a terminal and connect the job\r\n                        stdin/stdout/stderr to it.\r\n                        NOTE: Not implemented yet!\r\n```\r\n\r\nこれは、neoとかVSCの端末機能と比べてどうなんでしょうか。\r\nともかく、期待!!!","created_at":1465293231},{"id":224237442,"issue_id":915,"user_id":10111,"body":"stdin/stdout/stderr を使った物なら、以前作った物が近いかもしれません。\r\n\r\nhttps://github.com/mattn/vim-terminal","created_at":1465294243},{"id":224244801,"issue_id":915,"user_id":468368,"body":"windows only?","created_at":1465296345},{"id":224244928,"issue_id":915,"user_id":10111,"body":"僕はそのつもりはないっす。出来れば分業したいけど。","created_at":1465296377},{"id":224245994,"issue_id":915,"user_id":468368,"body":"端末機能に求めること、挙げてみて共通のイメージを持つのが、先決な気がしてきました。","created_at":1465296692},{"id":224246801,"issue_id":915,"user_id":10111,"body":"あと個人的には、無駄作業にならないようにBramにも「やるよ」と音頭を取りたい。","created_at":1465296945},{"id":214970790,"issue_id":909,"user_id":468368,"body":"@momijiyama LICEcap などでスクリーンキャスト(GIFアニメなど)を取ってもらうことはできますかね?","created_at":1461733462},{"id":215032355,"issue_id":909,"user_id":8745771,"body":"![demo](https://cloud.githubusercontent.com/assets/8745771/14848403/6ed3042c-0ca8-11e6-8508-f8a6aa9801a3.gif)\r\n\r\n","created_at":1461750512},{"id":215033730,"issue_id":909,"user_id":10111,"body":"他のフォントでも同じでしょうか？","created_at":1461750725},{"id":215036546,"issue_id":909,"user_id":468368,"body":"手元のWin10 (64bit) + gvim 7.4.1161 (32bit) で\r\n`gvim -u NONE -N` から似たような操作をやってみましたが、再現せず。\r\n\r\nやっぱ Vista かなぁ?\r\n\r\nフォントがドレなのかは気になりますw","created_at":1461751225},{"id":215037018,"issue_id":909,"user_id":8745771,"body":"補足\r\n再現しない場合もありました\r\n\r\n・その行における初めてのIME使用だと起こらない場合がある\r\n（何回かIMEをオン・オフして「あ」「A」のチップを表示させると起こりやすい）\r\n\r\n・ 4文字以下の入力だと起こらない場合がある\r\n\r\nこれはgvim -u NONE -Nで試した場合です","created_at":1461751294},{"id":215038322,"issue_id":909,"user_id":8745771,"body":"@mattn @koron フォントは「S2Gつきフォント」というやつですが、\r\ngvim -u NONE -N で立ち上げた真っ白いgVim上の<strike>MSゴシック</strike>でも再現します\r\n修正\r\n失礼しました\r\nデフォルトのフォントはFixedSysでした","created_at":1461751528},{"id":215051944,"issue_id":909,"user_id":8745771,"body":"gvim -u NONE -N で試したときの画像です\r\n\r\n![white-vim_test](https://cloud.githubusercontent.com/assets/8745771/14850453/1f50c4c8-0cb4-11e6-9c70-08c425e17515.jpg)\r\n","created_at":1461755478},{"id":215904791,"issue_id":909,"user_id":8745771,"body":"[#30](https://github.com/vim-jp/issues/issues/30)と同じ問題だったようです\r\n\r\n`set lazyredraw`を_vimrcに設定して対処しました","created_at":1461971574},{"id":215926178,"issue_id":909,"user_id":468368,"body":"あー、クラシックテーマか!\r\n\r\nもっと早く気がつくべきだった。","created_at":1461983070},{"id":211187453,"issue_id":905,"user_id":840186,"body":"https://github.com/vim-jp/issues/issues/904#issuecomment-211044961\r\n\r\n> returnが省略できないのは明記しなくてよい？\r\n\r\nこれに対して、いるともいらないとも反応がありませんが、一応パッチ。\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/a3db45d7e1249a8a6e45c0accbda9805490a7832/lambda-doc.diff?fileviewer=file-view-default\r\nより正確に書くなら、lambda() に渡すのは、式ではなく ex コマンド(列)だということになるのでしょうが…。","created_at":1460952214},{"id":211214234,"issue_id":905,"user_id":10111,"body":"僕も本当ならば lambda という名前の通り式に固執したいのですが、変数代入すら式で書けない Vim script だと文でないと何も便利にならないんすよねw\r\n","created_at":1460958447},{"id":211371702,"issue_id":905,"user_id":3797062,"body":"大変なことに気づいてしまいました...\r\n個人的にこの lambda 機能の核心部分は2つあって\r\n\r\n1. クロージャ\r\n2. 簡単に無名関数を定義できる．特に mapやfilter,sort, またその**ラッパ関数**に渡せる(これは1のクロージャも含む前提)\r\n\r\nだと思います．\r\n\r\nただ，この1番目のクロージャ機能とほぼ同等なことが最近，`dict.func`がpartialを返すという仕様変更によって実現可能になっていることに気づきました．\r\nまさかこれを Bram さんは想定していた...!?!?!?\r\n\r\n```vim\r\nfunction! s:counter_generator(n) abort\r\n  let d = {'n': a:n}\r\n  function! d.increment() abort\r\n    let self.n += 1\r\n    return self.n\r\n  endfunction\r\n  return d.increment\r\nendfunction\r\n\r\nlet s:counter = s:counter_generator(0)\r\necho s:counter() | \" 1\r\necho s:counter() | \" 2\r\necho s:counter() | \" 3\r\n```\r\n(いままでこのような動作を実現するには `execute` などを駆使して頑張るか script local 変数を使っちゃうしかなかった)\r\n\r\n上記のように，\r\n辞書定義をわざわざしなきゃならないこと，\r\n厳密にはクロージャではなくクロージャでやりたかったこと相当ができてるだけってところ，\r\nそもそも `dict.func` がデフォルトでdict bind してるのキモくね?\r\nみたいなモヤモヤはあるものの，既存のシンタックスで，文字列使わずにやりたかったことの半分はできてしまってました．気づいてなかった...\r\n\r\nと，いうわけで `lambda` を特に推すなら2つ目のクロージャが**サクッと**定義できちゃう部分になるのかなぁと思います．\r\n具体的には前vim-devスレッドでmattnさんがあげてる map/filter/sort を全部関数渡せるようにしてやりたくて，\r\nかつその際にlambda記法とかがあるとベンリだということ．\r\nそして個人的にもっと重要なのがそれらのラッパー関数やmap/filter/sort的な関数を受け取る関数を定義する際など非常にベンリというところです．\r\n\r\n例:\r\n- Vital.Data.List.sort_by() https://github.com/vim-jp/vital.vim/blob/28472cd9b7bb19d3c7b2cb35e651c4615d91d1cc/doc/vital-data-list.txt#L133\r\n- Vital.Data.List.max_by() https://github.com/vim-jp/vital.vim/blob/28472cd9b7bb19d3c7b2cb35e651c4615d91d1cc/doc/vital-data-list.txt#L162\r\n- underscore.vimのmapやfilterのラッパー https://github.com/haya14busa/underscore.vim/blob/master/example/closure.vim#L13-L20\r\n  - なおこれは Vital.Data.Closure https://github.com/vim-jp/vital.vim/blob/master/doc/vital-data-closure.txt が使われています．\r\n\r\nこのあたりの関数に引数としての関数を定義する際に，既存のvitalのclosureなどでは第2引数で`l:`を渡すなどしないと変数に参照できなかったり，スクリプトローカル変数や関数に定義した関数からアクセスできない問題があり，これが既存のVim scriptで実装されたラムダ/クロージャ(もどき)の限界でした．\r\n\r\nこういうケースでは上記した辞書関数によるハックでスコープの問題は解決できるものの，流石に毎回定義するのが面倒なのでここで`lambda`機能がベンリなんですよぉと推すのはありかなぁと思いました．\r\nあと，この用法で推していく場合はlambdaがexprしか受け付けなくなっても個人的には十分ベンリそう...と思いました．\r\n`:return`とか複数行でいろいろやるのは辞書関数ハックで出来ちゃうので．\r\n\r\n(なお，クロージャ的に使わず単に無名関数としてtimerなどに渡すという例は，個人的にはもちろんベンリなんですが，\r\n単に関数定義するのがめんどくさいのと定義した結果グローバル/スクリプトローカルスコープがちょっと汚れるというのを\r\n解決しただけで，対していままでの大きい問題を解決してなくてちょっと推すには弱いのかなぁとおもってる．)\r\n\r\n#### まとめ\r\n\r\n1. クロージャ相当の機能は辞書関数で代用可能なので，sort/map/filterやそのラッパーなどに渡す関数(クロージャ)を簡単に定義できるところは推せそう\r\n2. その場合，別に `lambda`は `expr` だけ受け付けても十分かも?\r\n","created_at":1460984668},{"id":211388476,"issue_id":905,"user_id":48169,"body":"そんな仕様変更があったとは…！\r\nしかしやはり :function を使わずにサクッと無名関数が作れるのは魅力だと思います。","created_at":1460987377},{"id":211391562,"issue_id":905,"user_id":48169,"body":"> 1. クロージャ\r\n> 2. 簡単に無名関数を定義できる．特に mapやfilter,sort, またそのラッパ関数に渡せる(これは1のクロージャも含む前提)\r\n\r\nあとまだ試せていないのですが、スコープをキャプチャできるようになったというのもあるんじゃないでしょうか？","created_at":1460987787},{"id":211391684,"issue_id":905,"user_id":3797062,"body":"それがクロージャだという認識です","created_at":1460987813},{"id":211392578,"issue_id":905,"user_id":48169,"body":"なるほど。\r\ndict.func の場合は明示的に渡す必要があったのに対して、クロージャなので明示的に渡す必要がなくなったのはメリットかなと思いました。","created_at":1460987992},{"id":211397684,"issue_id":905,"user_id":3797062,"body":"はい．なのでクロージャではなくクロージャでやりたかったこと相当ができるって感じですね．\r\n明示的にというのはそうですが，個人的には複数行書いたり，1行でも複雑だった時点で dict.func 書いたほうがいろいろメリットあってそっちを使う気がします．\r\n dict.func のほうがシンタックスハイライトも効くし，引数明示できるし，既存のVim scriptのシンタックスとの互換性もバッチリだし．\r\nなるべく既存のVim scriptのシンタックスを壊さない形で文字列指定ではないlamdaが実現できれば話は変わりそうですが．","created_at":1460988666},{"id":211413362,"issue_id":905,"user_id":10111,"body":"call の第三引数とは、いったいなんだったのか","created_at":1460991199},{"id":212808146,"issue_id":905,"user_id":840186,"body":"todoが更新されて、順位が上がってきました。\r\n\r\n```\r\nPatch to support expression argument to sort() instead of a function name.\r\nYasuhiro Matsumoto, 2013 May 31.\r\nOr should we add a more general mechanism, like a lambda() function?\r\nPatch by Yasuhiro Matsumoto, 2014 Sep 16, update 2016 Apr 17.\r\n```","created_at":1461227660},{"id":222149370,"issue_id":905,"user_id":840186,"body":"2つほど問題を見つけたので修正を投げておきました。\r\nhttps://groups.google.com/d/msg/vim_dev/nbvI429-1EE/F2VXnGjRAAAJ","created_at":1464356514},{"id":225881225,"issue_id":905,"user_id":840186,"body":"```diff\r\n--- a/src/eval.c\r\n+++ b/src/eval.c\r\n@@ -654,6 +659,7 @@ static void f_js_decode(typval_T *argvars, typval_T *rettv);\r\n static void f_js_encode(typval_T *argvars, typval_T *rettv);\r\n static void f_json_decode(typval_T *argvars, typval_T *rettv);\r\n static void f_json_encode(typval_T *argvars, typval_T *rettv);\r\n+static void f_lambda(typval_T *argvars, typval_T *rettv);\r\n static void f_keys(typval_T *argvars, typval_T *rettv);\r\n static void f_last_buffer_nr(typval_T *argvars, typval_T *rettv);\r\n static void f_len(typval_T *argvars, typval_T *rettv);\r\n```\r\n\r\n関数宣言の追加位置ですが、アルファベット順になってないですね。f_keys() のあとに追加すべきです。","created_at":1465911069},{"id":226166861,"issue_id":905,"user_id":840186,"body":"修正したものを投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/nbvI429-1EE/hSkBma9DJgAJ","created_at":1465992096},{"id":226190463,"issue_id":905,"user_id":10111,"body":"あざます","created_at":1465998118},{"id":208162560,"issue_id":900,"user_id":3797062,"body":"> TEST FAILURE \r\n> NMAKE : fatal error U1077: 'if' : return code '0x1'\r\n\r\nオプションによっては上記エラーが appveyor で発生するのでwindowsで対応してないときはテストファイル先頭でfinishとかが入りそう","created_at":1460350345},{"id":208611249,"issue_id":900,"user_id":3797062,"body":"tabline の修正とエラーの修正とりこまれた https://github.com/vim/vim/commit/f73d3bc253fa79ad220f52f04b93e782e95a9d43 https://github.com/vim/vim/commit/73cd8fb3e87e4b29dfc489f58e56dee1839c18e5\r\n\r\n他のやつも同じ問題なのでなるべく時間あけずに送ると理解してもらいやすそうなので送ろうと思います．\r\n\r\n'guitablabel', 'guitabtooltip' のテストが起動直後はGUIのタブがうまく起動してくれなくてまだ書けてなくて難しい．","created_at":1460416685},{"id":204857519,"issue_id":896,"user_id":468368,"body":"**寸評**\r\n\r\n@h-east さんの CLPUM http://h-east.github.io/vim/ が `'wildmode'` から使えれば十分な話にみえる。\r\nその場合でも既存の動作を変えるのは好ましくないので、\r\n新たなオプション(wildmodeの値)の追加となっているだろう(調べたら[実際になっていた](https://github.com/h-east/vim/blob/clpum/src/option.c#L12002-L12004))。\r\n\r\nぶっちゃけた話、要望通りの選択方法は0から作らねばならず、\r\nかつ未解決の問題(多くなた時や長くなった時の処理)があるために、実現の可能性が高くない。\r\n加えてユーザー体験的にも、既存の補完とは異なるモノになるのは、好ましくないといえるだろう。\r\n\r\n---\r\n\r\n@h-east どうですかね? CLPUM に関して正しいこと書いているでしょうか?","created_at":1459650840},{"id":204859717,"issue_id":896,"user_id":518808,"body":"> 新たなオプション(wildmodeの値)の追加となっているだろう(調べたら実際になっていた)。\r\n\r\nうっ、見つかっちゃった。この部分はリファクタリング中でまだ機能していないです。\r\n目標としては`wildmode`オプションのアイテムの1つとして`clpum`を指定出来るようにし、`clpum`オプションを廃止するつもりです。\r\n\r\n今は http://h-east.github.io/vim/ のHow to Useに書いてある通り、`clpum`オプションをセットすると`wildmode`や`wildmenu`の設定を無視してCLPUMの動作に入ります。","created_at":1459652662},{"id":204860786,"issue_id":896,"user_id":518808,"body":"`wildmode`オプションの`list`は、terminalで`ls | more`した時の表示に近いです。表示バッファに垂れ流す感じです。ですので後からその出力した部分に対してハイライトを変更したり表示内容を変更したりするというのは非常に難しいです。koronさんが言っているように0から実装することになります。\r\n今の`wildmode`オプションの`list`の動作は「そういうもの」と割り切るしかないと私は考えています。","created_at":1459653640},{"id":204860789,"issue_id":896,"user_id":156236,"body":"なるほどCLPUMなんてのが既にあったんですね。確かに自分でも既存動作を変えるのは指摘の通り問題がありそうなのは感じたので新しいモードを追加というのが良さそうですね。","created_at":1459653644},{"id":204861233,"issue_id":896,"user_id":468368,"body":"CLPUM への期待が高まりますね! :laughing: ","created_at":1459654506},{"id":203514407,"issue_id":894,"user_id":840186,"body":"https://groups.google.com/d/topic/vim_dev/DIMDJ_6i6ig/discussion","created_at":1459355483},{"id":203514754,"issue_id":894,"user_id":20474,"body":"タイトルの修正をお願いします。 (´・ω・｀)","created_at":1459355561},{"id":203553022,"issue_id":894,"user_id":468368,"body":"直したつもりでsave忘れてたw","created_at":1459360644},{"id":221467661,"issue_id":894,"user_id":840186,"body":"7.4.1832の後のruntime fileの更新で直ったと思われます。\r\nhttps://github.com/vim/vim/commit/06d2d38ab7564e1f784b1058a4ef4580cd6d1810#diff-f87b2d8283f9205b5663ee98d1c44f8cL125\r\n確認お願いします。\r\n\r\nこの修正だと、`s:last_words` の cache が有効活用されていない気もするのですが、ま、いいか？","created_at":1464148927},{"id":201915237,"issue_id":891,"user_id":20474,"body":"補足:\r\n`v:version` が、メジャーバージョンを100倍した値とマイナーバージョンを足したもの(ex: `Vim 7.4` => `v:version == 704`) なので、少なくともマイナーバージョンは 2 桁まで想定されているはずです。\r\nメジャーバージョンはもちろんどこまで上がるかわからない想定をする必要があるはず。","created_at":1459020710},{"id":202002771,"issue_id":891,"user_id":10111,"body":"ちょっと外れるけど関連\r\nhttps://groups.google.com/forum/#!topic/vim_dev/L2iXv8PhPu4","created_at":1459062192},{"id":200605344,"issue_id":890,"user_id":468368,"body":"今朝のpullではtest_105(?)が降ってきたようなので、その辺を一番最初に調べるべきかも。","created_at":1458782395},{"id":200614618,"issue_id":890,"user_id":840186,"body":"`test_channel.vim`で使用しているファイルですね。\r\n一応 `delete()` で削除しようとしていますが、誰かがオープンしたままなので削除できないのかな。","created_at":1458785122},{"id":200624994,"issue_id":890,"user_id":10111,"body":"windows だと job_stop が kill だから？\r\n\r\nあ、test_channel.vim のほうか。","created_at":1458786965},{"id":198675249,"issue_id":885,"user_id":518808,"body":"timer機能が追加されたのは patch 7.4.1578 \r\nhttps://github.com/vim/vim/commit/975b5271eed4fa0500c24a8f37be0b1797cb9db7\r\n\r\nWin32 consoleで`:sleep`なしにコールバックが呼ばれるようになったのが patch 7.4.1584\r\nhttps://github.com/vim/vim/commit/0e0b3dd335b863603b9a2d415ef18d983e2467ae\r\n\r\nGUIの場合はWindows/Linuxともに`:sleep`なしにコールバックが呼ばれる。\r\n現状ではLinux CUIが`:sleep`なしにコールバックが呼ばれない。","created_at":1458380660},{"id":198675613,"issue_id":885,"user_id":518808,"body":"Linux CUIで`:sleep`なしにコールバックが呼ばれるようにするpatch.\r\n※とりあえず HAVE_SELECT 環境のみ対応。\r\n\r\n既知の問題点: タイマが裏で動いている時に`:`でコマンドモードに移行すると、カーソルがバッファ内へ移動してしまう。(コマンド入力は普通にできる)\r\n```patch\r\ndiff --git a/src/os_unix.c b/src/os_unix.c\r\nindex f2ae513..6754d51 100644\r\n--- a/src/os_unix.c\r\n+++ b/src/os_unix.c\r\n@@ -5445,6 +5445,7 @@ RealWaitForChar(int fd, long msec, int *check_for_gpm UNUSED)\r\n {\r\n     int\t\tret;\r\n     int\t\tresult;\r\n+    long\tmsec_orig = msec;\r\n #if defined(FEAT_XCLIPBOARD) || defined(USE_XSMP) || defined(FEAT_MZSCHEME)\r\n     static int\tbusy = FALSE;\r\n \r\n@@ -5624,6 +5625,22 @@ RealWaitForChar(int fd, long msec, int *check_for_gpm UNUSED)\r\n \t    return 0;\r\n # endif\r\n \r\n+#ifdef FEAT_TIMERS\r\n+\t/* When waiting very briefly don't trigger timers. */\r\n+\tif (towait > 10 || towait == -1)\r\n+\t{\r\n+\t    long\tdue_time;\r\n+\r\n+\t    /* Trigger timers and then get the time in msec until the\r\n+\t\t* next one is due.  Wait up to that time. */\r\n+\t    due_time = check_due_timer();\r\n+\t    if (due_time > 0 && (towait > due_time || towait == -1))\r\n+\t\ttowait = due_time;\r\n+\t    else if (due_time <= 0 && msec_orig < 0)\r\n+\t\ttowait = msec_orig;\r\n+\t}\r\n+#endif\r\n+\r\n \tif (towait >= 0)\r\n \t{\r\n \t    tv.tv_sec = towait / 1000;\r\n```","created_at":1458381035},{"id":198701240,"issue_id":885,"user_id":10111,"body":"unix 版は上げ忘れだった模様。\r\nhttps://github.com/vim/vim/commit/943bb2b8eb80266a5de143feeab4c842c4b68c61","created_at":1458393232},{"id":198701339,"issue_id":885,"user_id":10111,"body":"Windows CUI 版も上げ忘れだったしw","created_at":1458393254},{"id":198702100,"issue_id":885,"user_id":518808,"body":"@mattn えー！笑うしかないあはははは","created_at":1458393477},{"id":198702299,"issue_id":885,"user_id":518808,"body":"> 既知の問題点: タイマが裏で動いている時に:でコマンドモードに移行すると、カーソルがバッファ内へ移動してしまう。(コマンド入力は普通にできる)\r\n\r\nこれ直ってない。直そう。","created_at":1458393645},{"id":198702958,"issue_id":885,"user_id":10111,"body":"redrawcmdprompt() 呼ぶだけでいけそうなヨカン\r\n\r\nredrawcmd() の方がいいか。","created_at":1458393754},{"id":198708712,"issue_id":885,"user_id":518808,"body":"あえてノーマルモードとインサートモードの時だけ`update_screen(0);`を読んでいる。\r\nその他のモードで呼ぶと、wildmenu中の表示が消されたり、`<C-D>`で出したリストが消されたり、`more`中の表示が消されたりするので。\r\n\r\n```patch\r\ndiff --git a/src/screen.c b/src/screen.c\r\nindex c1eb1c4..e608aed 100644\r\n--- a/src/screen.c\r\n+++ b/src/screen.c\r\n@@ -418,8 +418,13 @@ redraw_asap(int type)\r\n     void\r\n redraw_after_callback()\r\n {\r\n-    update_screen(0);\r\n-    setcursor();\r\n+    if (State & CMDLINE)\r\n+\tredrawcmdline();\r\n+    else if ((State & NORMAL) || (State & INSERT))\r\n+    {\r\n+\tupdate_screen(0);\r\n+\tsetcursor();\r\n+    }\r\n     cursor_on();\r\n     out_flush();\r\n #ifdef FEAT_GUI\r\n```","created_at":1458396159},{"id":198713954,"issue_id":885,"user_id":518808,"body":"勢いでpatchを送ってみただ。patchが間違っていても問題提起として機能すればOK:+1:\r\nhttps://groups.google.com/d/msg/vim_dev/MnIeBK-XLgc/i5xzuk2NGQAJ","created_at":1458398258},{"id":198741269,"issue_id":885,"user_id":518808,"body":"おぉ！私のpatch＋αですんなり取り込まれた。\r\npatch 7.4.1603\r\nhttps://github.com/vim/vim/commit/bfb96c047b79b2aab5fd57a2472871508819f3ef","created_at":1458404248},{"id":198745843,"issue_id":885,"user_id":518808,"body":"> > Yeah, I had been waiting for this patch :-) \r\n\r\n> Sorry, somehow I just forgot to include it with the patch that went out earlier. \r\n\r\npatch 7.4.1594は本当に上げ忘れてたみたい:sweat_smile:","created_at":1458405296},{"id":201734185,"issue_id":885,"user_id":43401,"body":"timer で vim を殺せるようです。\r\n\r\n```timer.vim\r\nlet s:meow = {}\r\n\r\nfunction! s:meow.bite (...)\r\nendfunction\r\n\r\ncall timer_start(100, s:meow.bite)\r\n```\r\n\r\nを\r\n\r\n```\r\n$ vim -u NORC --noplugin -N ~/sandbox/vim/timer.vim\r\n```\r\n\r\nなどとして、開いて `:so%` などとすると落ちます。\r\nすぐには落ちない時もあるようです。\r\n\r\nArch Linux の 7.4.1639-1 と手元で make した 7.4.1655 (1e7885abe8daa) で確認しました。\r\n","created_at":1458980759},{"id":201742893,"issue_id":885,"user_id":518808,"body":"@anekos Wao! こちらでも再現しました。再現率100%。今晩調べます。","created_at":1458983973},{"id":201810040,"issue_id":885,"user_id":518808,"body":"これで直ったと思います。確認をお願いします。\r\n\r\n```patch\r\ndiff --git a/src/eval.c b/src/eval.c\r\nindex 2256589..06f3585 100644\r\n--- a/src/eval.c\r\n+++ b/src/eval.c\r\n@@ -20190,6 +20190,7 @@ get_callback(typval_T *arg, partial_T **pp)\r\n     if (arg->v_type == VAR_PARTIAL && arg->vval.v_partial != NULL)\r\n     {\r\n        *pp = arg->vval.v_partial;\r\n+       ++(*pp)->pt_refcount;\r\n        return (*pp)->pt_name;\r\n     }\r\n     *pp = NULL;\r\n```","created_at":1458996613},{"id":201811508,"issue_id":885,"user_id":43401,"body":"ありがとうございます。\r\n落ちなくなりました!","created_at":1458996804},{"id":201814524,"issue_id":885,"user_id":518808,"body":"@anekos 確認Thanks!\r\n\r\nこの修正した関数`get_callback()`ってjob関係でも使われてますね。\r\n```\r\n./channel.c|3401| opt->jo_callback = get_callback(item, &opt->jo_partial);\r\n./channel.c|3413| opt->jo_out_cb = get_callback(item, &opt->jo_out_partial);\r\n./channel.c|3425| opt->jo_err_cb = get_callback(item, &opt->jo_err_partial);\r\n./channel.c|3437| opt->jo_close_cb = get_callback(item, &opt->jo_close_partial);\r\n```\r\nこの辺も直るってことですね。\r\npartialな関数をコールバックに指定するとメモリ解放した部分を参照してしまうのでVimが不安定になってた！","created_at":1458997236},{"id":201819759,"issue_id":885,"user_id":840186,"body":"またrefcountかっｗ","created_at":1458997954},{"id":201824646,"issue_id":885,"user_id":10111,"body":"てかrefcountのバグ多くねw 今回だけじゃないしw","created_at":1458999415},{"id":201825651,"issue_id":885,"user_id":518808,"body":"sent to vim_dev\r\nhttps://groups.google.com/d/msg/vim_dev/RVKtRdnbhZQ/Sbu9xaCwGwAJ","created_at":1458999710},{"id":201831896,"issue_id":885,"user_id":468368,"body":"Vim script の元々の関数の取り扱いからして、 partial は無理があった気がする。結果論だけど。","created_at":1459001722},{"id":201898231,"issue_id":885,"user_id":518808,"body":"anekos さん報告の件、fixされました。\r\npatch 7.4.1656\r\nhttps://github.com/vim/vim/commit/92e35efaf6a3278e4729115648997f09cd4005f5\r\n\r\n@anekos 報告ありがとうございました:+1:","created_at":1459013059},{"id":213895746,"issue_id":885,"user_id":943423,"body":"Vim 7.4.1782 / CentOS 7, Ubuntu 16.04 で検証。\r\n\r\n**`time` が短いと入力が効かなくなる**\r\n\r\ntimer1.vim:\r\n\r\n```vim\r\nfunction! TimerCallback(...)\r\n  call timer_start(0, 'TimerCallback')\r\nendfunction\r\n```\r\n\r\n`vim -Nu timer1.vim`\r\n`:call TimerCallback()`\r\n\r\n`Ctrl-C` で止められます（入力が効くようになる）。\r\n\r\ntimer2.vim:\r\n\r\n```vim\r\nfunction! TimerStart()\r\n  call timer_start(0, 'TimerCallback', {'repeat' : -1})\r\nendfunction\r\nfunction! TimerCallback(...)\r\nendfunction\r\n```\r\n\r\n`vim -Nu timer2.vim`\r\n`:call TimerStart()`\r\n\r\nこちらは `Ctrl-C` しても入力を受け付けません。\r\n\r\n**`callback` の中で `timer_stop()` が効かない**\r\n\r\ntimer3.vim:\r\n\r\n```vim\r\nfunction! TimerStart()\r\n  let s:tr = timer_start(1000, 'TimerCallback', {'repeat' : -1})\r\nendfunction\r\nfunction! TimerCallback(...)\r\n  call append('$', 'a')\r\n  call TimerStop()\r\nendfunction\r\nfunction! TimerStop()\r\n  call timer_stop(s:tr)\r\nendfunction\r\n```\r\n\r\n`vim -Nu timer3.vim`\r\n`:call TimerStart()`\r\n\r\n`a` が追加され続けます。","created_at":1461477502},{"id":222524863,"issue_id":885,"user_id":18260849,"body":"Vim 1.7.1859 / Debian jessie / tmux 2.2-1~bpo8+1\r\n\r\ntimer_startの第一引数が4006ミリ秒以上を指定した時にのみ、そのミリ秒経過した時にVimが落ちました。\r\ntmux上でvimを使用した時のみ再現します。\r\nターミナルで直接Vimを起動した場合は落ちません。\r\nVimと関係なかったらすみません。\r\n\r\n\r\n**ケース1**\r\n\r\n落ちた時のエラーメッセージ\r\n\r\n    Vim: Caught deadly signal ABRT\r\n    Vim: Finished.\r\n    中止\r\n\r\n\r\nVim起動時にファイル名を指定するとsignal ABRTで落ちました。\r\nファイル名を指定しなかった場合はsignal SEGVで落ちました。\r\n\r\n    vim -Nu NONE -S sample1.vim a.txt\r\n\r\nファイル名に拡張子を省いて指定して起動すると、下記の2行のエラーメッセージも追加で表示されました。\r\n\r\n    vim -Nu NONE -S sample1.vim a\r\n\r\n----\r\n\r\n    Vim: Double signal, exiting\r\n    Segmentation fault\r\n\r\n\r\n\r\nsample1.vim:\r\nスクリプトの中のコメント行も再現に必要です。\r\nコメント行を削除すると再現しませんでした。\r\n\r\n    function Callback(lists, timer)\r\n        \" a\r\n        \" a\r\n        doautocmd BufRead\r\n    endfunction\r\n    call timer_start(4006, function('Callback', [['a']]))\r\n\r\n**ケース2**\r\n\r\n落ちた時のエラーメッセージ\r\n\r\n    Vim: Caught deadly signal SEGV\r\n    Vim: Finished.\r\n    Segmentation fault\r\n\r\nVim起動\r\nファイル名を指定した時だけ落ちました。\r\n\r\n    vim -Nu NONE -S sample2.vim a.txt\r\n\r\nsample2.txt\r\n\r\n    function Callback(lists, timer)\r\n        echo a:lists\r\n    endfunction\r\n    call timer_start(4006, function('Callback', [['a']]))\r\n","created_at":1464625949},{"id":222558893,"issue_id":885,"user_id":943423,"body":"私の環境では以下で落ちました。 Ubuntu 16.04 / Vim 7.4.1859\r\n\r\nsample.vim:\r\n\r\n```vim\r\nfunction Callback(lists, timer)\r\nendfunction\r\ncall timer_start(4006, function('Callback', [['a']]))\r\n```\r\n\r\n`vim -Nu NONE -S sample.vim`\r\n\r\n----\r\n\r\ntimer の partial が保持しているオブジェクト (sample.vim における `['a']`) について、copyID を更新する処理がないため、timer 発火以前に GC で解放されてしまうのが原因と思われます。\r\n\r\nsample.vim:\r\n\r\n```vim\r\nfunction Callback(lists, timer)\r\nendfunction\r\ncall timer_start(500, function('Callback', [['a']]))\r\ncall garbagecollect()\r\n```\r\n\r\n↑これで落ちます。\r\n\r\n`set_ref_in_timer()` を追加しました。\r\nhttps://gist.github.com/ichizok/b41ac7f68c3364a38bb07479bc9c7a49","created_at":1464645268},{"id":222578834,"issue_id":885,"user_id":518808,"body":"@ichizok :+1:\r\ntest_timer_gc.vimの中身はtest_timers.vimに含めた方が良い気がしました。","created_at":1464661396},{"id":222602213,"issue_id":885,"user_id":943423,"body":"> test_timer_gc.vimの中身はtest_timers.vimに含めた方が良い気がしました。\r\n\r\nありがとうございます。そのように変更しました。","created_at":1464675870},{"id":222611456,"issue_id":885,"user_id":18260849,"body":"@ichizok パッチ適用で落ちなくなりました。\r\n迅速なご対応ありがとうございます。","created_at":1464679419},{"id":222631212,"issue_id":885,"user_id":518808,"body":"@ichizok `let v:testing = 1`が消えちゃってますね。","created_at":1464685203},{"id":222639135,"issue_id":885,"user_id":943423,"body":"> `let v:testing = 1`\r\n\r\nruntest.vim で設定されていたので消しました。","created_at":1464687278},{"id":222639522,"issue_id":885,"user_id":518808,"body":"そうなのね。知らんかった。Thanks!","created_at":1464687378},{"id":222649386,"issue_id":885,"user_id":943423,"body":"https://groups.google.com/forum/#!topic/vim_dev/E_2jHYv3wUg\r\n報告しました。","created_at":1464690074},{"id":222888593,"issue_id":885,"user_id":943423,"body":"7.4.1860\r\nhttps://github.com/vim/vim/commit/e3188e261569ae512fb1ae2653b57fdd9e259ca3","created_at":1464754697},{"id":198620906,"issue_id":884,"user_id":10111,"body":"少数派な気がするなーw","created_at":1458355088},{"id":198621652,"issue_id":884,"user_id":468368,"body":"Vim の dos 対応がなくなった今、dos という値を使い続けることにも疑問がありますし。","created_at":1458355237},{"id":198622565,"issue_id":884,"user_id":10111,"body":"DOS 改行コードという呼び名が一般的じゃなくなりつつあるんですかね(おっさん\r\n","created_at":1458355824},{"id":198622617,"issue_id":884,"user_id":468368,"body":"以後は死語になっていくだけかと…","created_at":1458355872},{"id":198695758,"issue_id":884,"user_id":468368,"body":"ざっくりコード追ってるけど、結構ひどい。\r\n\r\n`FF_XXX` が文字列で `EOL_XXX` が数値(enum相当)、\r\n本体処理(ファイルの読み込み、書き出し)は後者でやるが、オプション操作は前者。\r\n\r\n`'fileformats'` と `++ff=` も要考慮。","created_at":1458391616},{"id":198695889,"issue_id":884,"user_id":48169,"body":"> また同様の考え方で `crlf`, `lf`, `cr` の各値を受け付けてあげるのはどうか。\r\n\r\n:+1: ","created_at":1458391763},{"id":198697347,"issue_id":884,"user_id":468368,"body":"解析結果、大まかには以下のとおり。\r\n\r\nオプションの値(文字列)が設定される際に `check_ff_value()`  で事前検査する。\r\nただし例外が結構あるので、本当ならまとめたい。\r\n\r\n以降は `get_fileformat(buf_T *buf)` 及び `get_fileformat(buf_T *buf, exarg_T *eap)` で EOL enum に、かなりアドホックに変換している。\r\n\r\n```c\r\nif (c == 'u')\r\n\treturn EOL_UNIX;\r\nif (c == 'm')\r\n\treturn EOL_MAC;\r\nreturn EOL_DOS;\r\n```\r\n(アドホックの例)\r\n\r\nその EOL の値で fileio.c とかは動作を変えている。\r\n","created_at":1458392157},{"id":198698082,"issue_id":884,"user_id":468368,"body":"**超いい加減な修正案**\r\n\r\nなにも考えずに `FF_XXX` を増やしちゃって、 `get_fileformat()` 及び `get_fileformat_force()` で `EOL_DOS`, `EOL_UNIX`, `EOL_MAC` に読み替えてあげる。\r\n\r\n**懸念点**\r\n\r\n`ff` の値として、今までになかった `win` などの値が増えるので、それが設定されていると誤動作するプラグインがあるかも。","created_at":1458392446},{"id":198699138,"issue_id":884,"user_id":48169,"body":"> `ff` の値として、今までになかった `win` などの値が増えるので、それが設定されていると誤動作するプラグインがあるかも。\r\n\r\n確かに… (全然考えてませんでした)","created_at":1458392624},{"id":198699702,"issue_id":884,"user_id":468368,"body":"外部に影響を与えない方法としては、 新しい `win` などの値は受け入れはするけど、即時 `dos` など旧来の値に読み替えて記録する、なんだけれど…ちょいと面倒。\r\n\r\n使ってるのは `ff` `ffs` `+ff=` くらいかなぁ?","created_at":1458392765},{"id":198701059,"issue_id":884,"user_id":10111,"body":"今気づいたけど fileformats って重複okなのか。\r\n```\r\nset fileformats=unix,dos,unix,dos,mac,dos,unix\r\n```\r\nってことは\r\n```\r\nset fileformats=unix,win,dos,win,unix,dos,mac,win,dos,unix\r\n```\r\nもアリか。","created_at":1458393067},{"id":198701536,"issue_id":884,"user_id":468368,"body":"```c\r\n/* Redraw needed when switching to/from \"mac\": a CR in the text\r\n * will be displayed differently. */\r\nif (get_fileformat(curbuf) == EOL_MAC || *oldval == 'm')\r\n    redraw_curbuf_later(NOT_VALID);\r\n```\r\n\r\n`*oldval == 'm'` !!!\r\n\r\n\r\n![474c3ac826175e968d69d4b394a32378fefb0d4b](https://cloud.githubusercontent.com/assets/468368/13898775/f7d1b34c-ee1f-11e5-99f7-c1414dcb35a3.jpg)\r\n\r\n野郎オブクラッシャアアアアア!","created_at":1458393296},{"id":198229878,"issue_id":883,"user_id":840186,"body":"7.4.1556 以前と同じ動作になりさえすればよいのであれば前者でしょうね。","created_at":1458283265},{"id":198231394,"issue_id":883,"user_id":468368,"body":"Vim としては、後者も必要だと思うんですよね。\r\n生成される tags の中身が間違ってたら、意味ないので。","created_at":1458283866},{"id":198217700,"issue_id":882,"user_id":468368,"body":"help tags の作成時には vim を使っているんですが、\r\nそこで成功していても必ずエラーが発生している (非0 でexitする) 可能性があります。\r\n仮にそうなら無視せざるを得ないわけですが…","created_at":1458279757},{"id":198220014,"issue_id":882,"user_id":468368,"body":"@Tosainu \r\n以前から tags を作るには vim が必要なんですが、\r\nArch Linux の vim-runtime の作成時にはどうしていたのでしょう?\r\n単にvimがないから、古いままのtagsを用いていたということでしょうか?\r\nそうだとすればそちらのほうが問題だと私は考えます。\r\n\r\nArch Linux には詳しくないので的ハズレなことを言ってるかもしれませんが、\r\nvim-runtime の作成時の依存解決に vim を追加して、\r\nそれを使うようにsrc/Makefileへパッチを当ててから installrtbase するのが本筋ではないでしょうか。\r\n\r\nそれとは別に Vim には `:helptags` の正常動作をどう担保するのかという問題は有ります。\r\nしかし、そもそもVimが利用できない時にinstallrtbaseを失敗させるというケースまで\r\nVimのMakefileが保証する謂れはないでしょう。\r\n","created_at":1458280831},{"id":198225008,"issue_id":882,"user_id":468368,"body":"関連して #883 を追加しておきました。","created_at":1458282031},{"id":198232806,"issue_id":882,"user_id":6215720,"body":"まず現在のArch LinuxのVimパッケージの作成のされ方ですが,\r\n\r\n1. VimのソースのDL, 展開, パッチ適用など\r\n2. `./configure`, `make`\r\n3. `vim` パッケージの作成\r\n 1. fakeroot環境に `make install`\r\n 2. `vim-runtime` でインストールされるファイルを削除しパッケージ化\r\n4. `vim-runtime` パッケージの作成\r\n 1. 3 と違うfakeroot環境(`/bin/vim` が無い) に `make installruntime install-languages installtools`\r\n 2. パッケージ化\r\n\r\nという感じになっており, おっしゃるとおりVimのリポジトリに含まれる古いままのtagsが使われてきました.\r\nこのため, Arch Linuxの `vim-runtime` のtagsが古い/入っていないという問題の原因はもちろんArch LinuxのVimパッケージ側にあります.\r\n\r\n本題のtagsの生成失敗がエラーにならないですが, 生成に成功してもVimが非0でexitしうるというのを考えると, 確かに対処は難しそうですね...","created_at":1458284546},{"id":198240736,"issue_id":882,"user_id":468368,"body":"エラー検出ではなく、tags がなかったら tags.dist をインストールする案は #883 で出ています。\r\n個人的にはあまり良いとは考えていませんが、次善の策ということで。\r\n\r\nただそれが入ったとしても Arch Linux としては、\r\n4-i の時点での動作に何かしらパッチをあてたほうが良いように思います。","created_at":1458286670},{"id":198314489,"issue_id":882,"user_id":840186,"body":"```diff\r\n--- a/src/Makefile\r\n+++ b/src/Makefile\r\n@@ -2116,7 +2116,8 @@ installrtbase: $(HELPSOURCE)/vim.1 $(DES\r\n # Move the distributed tags file aside and restore it, to avoid it being\r\n # different from the repository.\r\n \tcd $(HELPSOURCE); mv -f tags tags.dist\r\n-\t-@cd $(HELPSOURCE); $(MAKE) VIMEXE=$(DEST_BIN)/$(VIMTARGET) vimtags\r\n+\t-@cd $(HELPSOURCE); $(MAKE) VIMEXE=$(DEST_BIN)/$(VIMTARGET) vimtags || \\\r\n+\t\tif test ! -f tags; then cp tags.dist tags; fi\r\n \tcd $(HELPSOURCE); \\\r\n \t\tfiles=`ls *.txt tags`; \\\r\n \t\tfiles=\"$$files `ls *.??x tags-?? 2>/dev/null || true`\"; \\\r\n```\r\n\r\nこんな感じでどうでしょう。動作未確認。\r\n\r\nエラーコードを無視しているのは、vimがない環境でもとりあえずインストールできるようにするためなのか、helptagsの生成時にエラーを返す場合があるのか、どちらでしょうね？","created_at":1458300299},{"id":198356293,"issue_id":882,"user_id":468368,"body":"僕は後者だと思ってます。\r\n\r\nvimdoc-ja-working や gen_syn_vim の travis-ci 設定した際に\r\nちょっとしたことで vim がエラーで終了してイライラしてました。\r\n\\# 特に ex モード (`-e`) 使うとヒドくて…","created_at":1458307762},{"id":207639645,"issue_id":882,"user_id":840186,"body":"vim/vim#740 クロスコンパイルしたときに同様の問題が起きるようになったとのこと。なるほど、確かに。\r\nということで、パッチ送付。","created_at":1460155972},{"id":208806339,"issue_id":882,"user_id":840186,"body":"> I don't like this solution, because an error in generating the tags file would go unnoticed.\r\n\r\nうーん、そうは言っても今までエラー見てなかったのに…。どうするのがよいやら。","created_at":1460452209},{"id":209378589,"issue_id":882,"user_id":840186,"body":"todoに以下の内容が追加されました。\r\n\r\n```\r\nWhen cross-compiling skip generating the tags file (and moving it out of the\r\nway). (Christian Neukirchen, 2016 Apr 7)  #740\r\n```\r\n\r\nクロスコンパイルのときは特別扱いとなると、今回のArch Linuxでの問題はそのまま残ることになってしまいそうです。","created_at":1460547097},{"id":209464188,"issue_id":882,"user_id":6215720,"body":"報告が遅れましたが, Arch Linux の Vim パッケージの問題は 3/23の更新で修正されました.\r\n(`vim-runtime` でも `make install` するようになった)\r\n<https://projects.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/vim&id=388b4da8da1b3f7817350e24c22d3760405154cb>","created_at":1460556701},{"id":209988344,"issue_id":882,"user_id":840186,"body":"クロスコンパイル時の問題は 7.4.1733 で直りました。\r\nhttps://groups.google.com/d/topic/vim_dev/7G0SRa9-l_8/discussion\r\nが、エラーコードを見ていないのはそのまま？","created_at":1460646150},{"id":197947111,"issue_id":881,"user_id":468368,"body":"一応 kaoriya タグ付けておきましたが、たぶん非kaoriyaでも起きてるんじゃないでしょうか。","created_at":1458230326},{"id":198154100,"issue_id":881,"user_id":10111,"body":"フォントはラスタフォントです？それとも MSゴシック ?ラスタフォントだと起きません。","created_at":1458264879},{"id":198154674,"issue_id":881,"user_id":10111,"body":"というかそもそもWindows7だと起きない。","created_at":1458264956},{"id":198240895,"issue_id":881,"user_id":468368,"body":"上記のGIFは Windows 10 でラスターフォントですね。","created_at":1458286748},{"id":198241043,"issue_id":881,"user_id":468368,"body":"スクリーンバッファをキャプチャするプログラム使って、中身がどうなってるか見たほうが良いかしら?","created_at":1458286825},{"id":197924635,"issue_id":880,"user_id":10111,"body":"* dict 関数の挙動\r\n* type() によるリフレクション\r\n* string() の出力結果\r\n* system() の動作\r\n","created_at":1458227228},{"id":197931340,"issue_id":880,"user_id":48169,"body":"今回もそう？ですが、なんだか`:call`の引数でdict関数を呼ぶ場合の引数の解析が失敗する事が多い気がします。 #17","created_at":1458228372},{"id":197957342,"issue_id":880,"user_id":48169,"body":"ある意味 vital.vim のリポジトリで最新版に対して CI 回してるので、それで検出できちゃってるような気がしますｗ\r\n(もちろん本家にテストを追加したほうがいいというのは分かります)\r\n\r\n> まずは現状でどのようなテストが不足しているか分析しましょう。\r\n> その上で、プラグインで良く使われている機能から、\r\n> 優先的にテストを追加すれば少しは違ってくるはずです。\r\n\r\nふむ…プラグインでよく使われる機能といっても色んなタイプのプラグインがあるから難しいですね。\r\n追加するなら良いテストケースを追加したいですが…","created_at":1458231704},{"id":201333576,"issue_id":880,"user_id":48169,"body":"Vim script ではいわゆるケツカンマは引数に対しても許可されてるようです。\r\nDictionary と List のケツカンマは help に記述があるのですが、\r\n以下は help には正確な記述が存在しませんでした (@thinca さん調べ)。\r\n\r\n```viml\r\necho string(10,)\r\n```\r\n\r\n参照：http://lingr.com/room/vim/archives/2016/03/25#message-23162043","created_at":1458919859},{"id":201333736,"issue_id":880,"user_id":48169,"body":"Dictionary と List のケツカンマについてももし無ければテストに追加すべきだと思います。","created_at":1458919899},{"id":197340130,"issue_id":879,"user_id":840186,"body":"cmd.exe 上から、`c:\\cygwin64\\bin\\echo hoge`とやっただけでも、それ以降introが出なくなりました。","created_at":1458136046},{"id":197350437,"issue_id":879,"user_id":468368,"body":"こうなると、出てはいるけど高速で消えているのか、\r\n実際に出ていないのかが気になりますね。\r\n","created_at":1458137735},{"id":197377183,"issue_id":879,"user_id":10111,"body":"直接的な原因かどうかわからないですが、msys2 のコマンド群は以前話題にもなった CreateConsoleScreenBuffer を使っていて、実は背面で描画してるんですよね。","created_at":1458141348},{"id":197403894,"issue_id":879,"user_id":468368,"body":"直感的にはソレですよね。\r\nでもソレが intro をどういう理屈で消してしまうのか…\r\n\r\nそれだけでも知りたいです。","created_at":1458144844},{"id":197465964,"issue_id":879,"user_id":468368,"body":"とりあえず CreateConsoleScreenBuffer するだけのプログラム作って実行してみたけど、\r\nその後でも intro は表示された。\r\n\r\n```c\r\n#include <windows.h>\r\n#include <stdio.h>\r\n\r\nint main() {\r\n    HANDLE h;\r\n    h = CreateConsoleScreenBuffer(\r\n            GENERIC_READ|GENERIC_WRITE,\r\n            FILE_SHARE_READ|FILE_SHARE_WRITE,\r\n            NULL,\r\n            CONSOLE_TEXTMODE_BUFFER,\r\n            NULL);\r\n    if (h == INVALID_HANDLE_VALUE) {\r\n        DWORD err;\r\n        err = GetLastError();\r\n        printf(\"failed: %08X\\n\", err);\r\n        return 1;\r\n    }\r\n    CloseHandle(h);\r\n    return 0;\r\n}\r\n```","created_at":1458152193},{"id":197634666,"issue_id":879,"user_id":840186,"body":"Win7 (32bit)だと現象発生せずｗ\r\nWin10で古いコンソールを使ったらどうか確認したほうが良さそう。","created_at":1458177502},{"id":197636753,"issue_id":879,"user_id":468368,"body":"ああ、僕はWin10で古いコンソールです。\r\n\r\nあと Win7 (64bit) では発生してました。原因がbashだとは気づいていませんでしたが、\r\nintro でないなぁ～ってずっと思ってたので。","created_at":1458177852},{"id":197644680,"issue_id":879,"user_id":840186,"body":"そうなると、OSまたはCygwinのビット数のいずれか？","created_at":1458179202},{"id":200323422,"issue_id":878,"user_id":518808,"body":"別件。\r\n`augroup! testgroup` 以降のネストがおかしい。","created_at":1458734821},{"id":196135261,"issue_id":875,"user_id":10111,"body":"scrolloff とかそういう話ではなく？","created_at":1457930392},{"id":196137246,"issue_id":875,"user_id":48169,"body":"常時 `set scrolloff=99999` のような挙動がほしい訳ではなく、`<C-f>`で最終行に来た時にだけ\r\n最終行より先(空)の部分を表示してほしくないんです。","created_at":1457930767},{"id":196144569,"issue_id":875,"user_id":375258,"body":"呼ばれた。issue登録ありがとうございます。\r\n\r\nスクロールしていった時の最後に一行になるのが気に入らなくて、カーソルが端に付くのが嫌というわけではないです。 `scrolloff=0` のときの `j` の挙動は良いけど `<C-f>` は最後一行になってしまって好きではないです。達成したいことは上記のブログのマッピングでできております。「ファイルの末尾で実際に存在する行以降を表示しないオプション」と言えば伝わるでしょうか。入れるとしたら、 `wrap` とか `Gzt` とかとの兼ね合いが気になります。万人に受け入れられるものかどうか議論したいです。お願いします。","created_at":1457932295},{"id":196150705,"issue_id":875,"user_id":48169,"body":"表示範囲と言っても、自分がイメージしてるのは `set display=lastline` のような感じです。\r\n(空の部分の行数を**数値**で指定して〜とかではないです。なぜなら空の部分は見せられても意味がない部分だと感じるからです)","created_at":1457933415},{"id":196151937,"issue_id":875,"user_id":599164,"body":"オプションで追加されるのはアリだと思います。\r\n\r\n個人的には空行が見えて欲しいシーンもあります。長い行を一気に書き切りたい時はあえて既存の行は上までスクロールし切って、画面上から書き始めるということをやる場合があります。\r\nあと itchyny さんの元記事について他のソフトウェアとの比較がありますが、いずれも対象はビュワーです。Vim はエディタで、他のエディタの表示と比較すべきではないでしょうか。\r\n\r\n上記を踏まえて、個人的には「既存の動作に違和感は感じないが、オプションとして入る分には反対は無い」という意見を参考迄に出させて貰います。","created_at":1457933892},{"id":196303819,"issue_id":875,"user_id":48169,"body":"動きそうで動くちょっと動かないパッチ\r\nhttps://gist.github.com/tyru/38a7e9d476db91fcd007\r\n\r\n## 機能\r\n\r\n* (既存のオプションのどこに追加していいか分からなかったので) `'scrollstopbottom'`オプションを追加しました。デフォルトはオフで `set ssb` すると`<C-f>`と`<C-e>`が上記の記事の動きになります (予定、バグ有)\r\n\r\n## バグ\r\n\r\n1. 実はまだ上記記事の通りの動きになりません。FIXMEコメントで書いてありますが、`set ssb`して`G`して半分ほど`<C-y>`とかで戻って`<C-f>`するとカーソルが変な位置になります (それとも再描画がされてない？)。\r\n\r\n上記バグについてアドバイスください…","created_at":1457961047},{"id":196347465,"issue_id":875,"user_id":48169,"body":"あ、もちろんオプション名とか、そもそもオプションでやるのかとかそういった部分についての意見もお待ちしています。","created_at":1457967009},{"id":204108259,"issue_id":875,"user_id":943423,"body":"```diff\r\ndiff --git a/src/move.c b/src/move.c\r\n--- a/src/move.c\r\n+++ b/src/move.c\r\n@@ -2502,8 +2502,11 @@ onepage(int dir, long count)\r\n     {\r\n        if (curwin->w_botline == curbuf->b_ml.ml_line_count + 1)\r\n        {\r\n-           curwin->w_topline = curwin->w_botline - p_window;\r\n-           curwin->w_valid &= ~(VALID_BOTLINE|VALID_BOTLINE_AP);\r\n+           curwin->w_topline = curwin->w_botline - curwin->w_height;\r\n+           if (curwin->w_topline < 1)\r\n+               curwin->w_topline = 1;\r\n+           curwin->w_valid &=\r\n+                     ~(VALID_WROW|VALID_CROW|VALID_BOTLINE|VALID_BOTLINE_AP);\r\n            validate_botline();\r\n        }\r\n     }\r\n```\r\n\r\n上のバグはこれで直ると思います。\r\n`p_window` 使っている箇所が他にもありましたが、これだとウインドウ分割時にまずいです。\r\n\r\nそれから、追加部分が `FEAT_WINDOWS` の中にあったりなかったりしてますが、`FEAT_WINDOWS` に限定する必要はないのでは。","created_at":1459455678},{"id":209904282,"issue_id":875,"user_id":943423,"body":"https://gist.github.com/ichizok/443270430005ed782903166affdfc664","created_at":1460635231},{"id":209953984,"issue_id":875,"user_id":48169,"body":"@ichizok ++\r\nありがとうございます！","created_at":1460642052},{"id":209957709,"issue_id":875,"user_id":518808,"body":":+1: なるべくtestも書きましょう。別スレの`noinsert`の奴も。無理そうなら言ってもらえれば週末に対応させていただきます。","created_at":1460642538},{"id":195783078,"issue_id":872,"user_id":48169,"body":"関連issue貼っておきます。\r\nhttps://github.com/vim/vim/issues/594","created_at":1457806941},{"id":195812633,"issue_id":872,"user_id":840186,"body":"NFAの時はこんな話がありました。 https://github.com/vim-jp/issues/issues/390#issuecomment-18311388\r\n\r\n> Can the regexpengine and python bonanza be moved to a beta branch?\r\nhttps://groups.google.com/d/topic/vim_dev/sPaM7HI5gys/discussion\r\nbetaブランチでやりませんかという提案に対して、十分な人がテストしてくれないのでこの方法をとっているとの回答。\r\n安定版を使いたい人は 7.3.969 を使うようにとのことです。","created_at":1457819161},{"id":197598331,"issue_id":872,"user_id":840186,"body":"7.4.1577 で大惨事。","created_at":1458170089},{"id":197866118,"issue_id":872,"user_id":48169,"body":":fire:","created_at":1458219202},{"id":197891633,"issue_id":872,"user_id":468368,"body":":name_badge: ","created_at":1458223349},{"id":195156276,"issue_id":869,"user_id":10111,"body":"わかりづらいですが...\r\n\r\n改善前\r\n![channel](https://cloud.githubusercontent.com/assets/10111/13692012/f620c3c6-e780-11e5-9169-e6853b6242ec.gif)\r\n\r\n改善後\r\n![channel2](https://cloud.githubusercontent.com/assets/10111/13692018/fc04800c-e780-11e5-9b54-05c920e26d9b.gif)\r\n","created_at":1457665307},{"id":195160879,"issue_id":869,"user_id":255021,"body":"さっそく試してみました (mingw64)。\r\n\r\nステータスラインのチラツキはほぼないです。\r\nポップアップはチラチラの間隔が気持ち短かくなったかも？です。\r\n`pumheight` を小さくするとちょっと違って感じる気がします。\r\n","created_at":1457666418},{"id":195164986,"issue_id":869,"user_id":10111,"body":"ポップアップ部分もなぜこんなにチラツキが出るのか理由は分かってはいるんですが、どうも手がいれづらい。","created_at":1457667841},{"id":195182873,"issue_id":869,"user_id":48169,"body":"画面再描画と補完再描画の関数って分かれてないんですね。","created_at":1457671917},{"id":195304522,"issue_id":869,"user_id":518808,"body":"@mattn タイトルから察するに #597 の存在は分かっていると思うのでリンク張って欲しかった。","created_at":1457690704},{"id":195305758,"issue_id":869,"user_id":10111,"body":"@h-east いや、記憶から飛んでたので大丈夫(何が)","created_at":1457690956},{"id":195306005,"issue_id":869,"user_id":10111,"body":"てことで前の issue から https://gist.github.com/mattn/6240679 を持ってきたとして両方合わせて検証してみるかな。","created_at":1457691008},{"id":195307992,"issue_id":869,"user_id":10111,"body":"割かしいい感じ？\r\n\r\n改善前\r\n![channel](https://cloud.githubusercontent.com/assets/10111/13692012/f620c3c6-e780-11e5-9169-e6853b6242ec.gif)\r\n\r\n改善後\r\n![channel2](https://cloud.githubusercontent.com/assets/10111/13692018/fc04800c-e780-11e5-9b54-05c920e26d9b.gif)\r\n\r\nさらに改善後\r\n![channel2](https://cloud.githubusercontent.com/assets/10111/13699418/89cdb82c-e7bd-11e5-9ab9-028eed201ffd.gif)\r\n\r\nここまで来ると改善があった事がはっきり分かるね。","created_at":1457691396},{"id":195308272,"issue_id":869,"user_id":10111,"body":"あー、preview ありじゃないと効果ないはず。。。","created_at":1457691485},{"id":195309492,"issue_id":869,"user_id":10111,"body":"改善前\r\n![channel1](https://cloud.githubusercontent.com/assets/10111/13699594/a8bb3f7e-e7be-11e5-940b-0d35f58c6425.gif)\r\n\r\n改善後\r\n![channel2](https://cloud.githubusercontent.com/assets/10111/13699598/aed6d878-e7be-11e5-8448-5bba9bca5e17.gif)\r\n\r\nてか今気付いたけど下の方、プレビューのステータス行にフォーカス当たってるな。","created_at":1457691849},{"id":195321583,"issue_id":869,"user_id":48169,"body":"おおお！\r\n\\# VSCode並に補完が速くなるといいですね…","created_at":1457694104},{"id":195322659,"issue_id":869,"user_id":518808,"body":"私の環境だとオリジナルのままでほぼチラつかないです。previewwindow使用/未使用関係なく。\r\nCUI Vim 7.4.1533 on fedora 23 via PuTTY\r\n端末サイズ: 80x24, 80x53\r\n`vim -Nu NONE -c \"filetype indent plugin on\" -c \"syntax on\"`\r\n\r\n自宅のPCは`Intel(R) Core(TM)2 Duo CPU     E4500  @ 2.20GHz`で結構遅いからかなと思ったけど、仕事場のPCは8coreの結構いいやつ(のVMで2core割り当て)だから、CPUの性能はあんまり関係ないと思う。\r\n\r\nみなさん、そんなにチラつくんですか？","created_at":1457694463},{"id":195365520,"issue_id":869,"user_id":10111,"body":"putty の場合だと putty がダブルバッファとかで再描画を吸収しちゃってる可能性もありますね。","created_at":1457703583},{"id":195397883,"issue_id":869,"user_id":1162739,"body":"@h-east 参考までに、vim | pv -qL500 とかでシリアル接続とか細い回線をエミュレートできます。\r\nどこで垂直同期をとっていいか端末側が知識を貰えないので、端末の描画更新タイミングは非常に適当で、\r\nたいてい512byteで一回とか、2048byteで一回とかで、ダブルバッファでいくらがんばってもチラつき、ガタつきは必然です。","created_at":1457707850},{"id":195405573,"issue_id":869,"user_id":518808,"body":"垂直同期とかその辺の話はエディタや端末では関係ないと思います。\r\nここでいいうチラつきというのは「Vimが本来描画しなくていい部分を描画している」のが原因でありこれの対処方法は「描画しなくていい部分は(できるだけ)描画しないようにする」しかないでしょう。","created_at":1457708887},{"id":193681187,"issue_id":865,"user_id":518808,"body":":h 'nobri' のジャンプ先がwrapされている。(インデントが1つ多い)\r\n```\r\n                                'breakindent' 'bri' 'nobreakindent' 'nobr\r\ni'\r\n```\r\n","created_at":1457428381},{"id":193814060,"issue_id":865,"user_id":1555633,"body":"typoと言っていいか微妙なんですが、\r\n\r\n:h 'backupskip' 中の設定例について、\r\n\r\n> ```\r\n>    :let backupskip = escape(expand('$HOME'), '\\') . '/tmp/*'\r\n> ```\r\n\r\n上記のように、グローバル変数か関数ローカル変数に代入してるような例になってますが、下記のようにオプションの変数に代入する例にしたほうが自然かと思います。いかがでしょうか。\r\n\r\n```\r\n   :let &backupskip = escape(expand('$HOME'), '\\') . '/tmp/*'\r\n```","created_at":1457449043},{"id":193815970,"issue_id":865,"user_id":518808,"body":"@todashuta Yes, 指摘正しいです。Thanks!:+1:","created_at":1457449452},{"id":194740357,"issue_id":865,"user_id":1528093,"body":"リダイレクトされるけど一応\r\n```diff\r\ndiff --git a/runtime/doc/todo.txt b/runtime/doc/todo.txt\r\nindex c6c38e1..d84d865 100644\r\n--- a/runtime/doc/todo.txt\r\n+++ b/runtime/doc/todo.txt\r\n@@ -27,7 +27,7 @@ Priority classification:\r\n See |develop.txt| for development plans.  You can vote for which items should\r\n be worked on, but only if you sponsor Vim development.  See |sponsor|.\r\n \r\n-Issues can also be entered online: http://code.google.com/p/vim/issues/list\r\n+Issues can also be entered online: https://github.com/vim/vim/issues\r\n Updates will be forwarded to the vim_dev maillist.  Issues entered there will\r\n not be repeated below, unless there is extra information.\r\n \r\n```","created_at":1457599967},{"id":194741577,"issue_id":865,"user_id":1528093,"body":"ついでに #831 の報告もしてもらえますか？","created_at":1457600178},{"id":194802136,"issue_id":865,"user_id":480049,"body":"@crazymaster ありがとうございます。\r\n\r\ntypo ではないのですが、現在の最新 (patch-7.4.1529) の `index.txt` では以下の新しめのキーマッピングが漏れています。\r\n- i_CTRL-G_U\r\n- v_g_CTRL-A, v_g_CTRL-X","created_at":1457609754},{"id":197289982,"issue_id":865,"user_id":840186,"body":"7.4.1559\r\n\r\n```diff\r\n--- a/runtime/doc/eval.txt\r\n+++ b/runtime/doc/eval.txt\r\n@@ -1898,7 +1898,7 @@ foldlevel( {lnum})\t\tNumber\tfold level at\r\n foldtext()\t\t\tString\tline displayed for closed fold\r\n foldtextresult( {lnum})\t\tString\ttext for closed fold at {lnum}\r\n foreground()\t\t\tNumber\tbring the Vim window to the foreground\r\n-function({name} [, {arglist}] [, {dict}])\r\n+function( {name} [, {arglist}] [, {dict}])\r\n \t\t\t\tFuncref reference to function {name}\r\n garbagecollect( [{atexit}])\tnone\tfree memory, breaking cyclic references\r\n get( {list}, {idx} [, {def}])\tany\tget item {idx} from {list} or {def}\r\n```\r\n\r\n`(` と `{` の間にスペースがないとタグジャンプできません。","created_at":1458130367},{"id":197299624,"issue_id":865,"user_id":518808,"body":"@k-takata :+1:\r\nこれも`find_help_tags()`のロジックを見なおせばスペース開けなくてもよくなりそうですね。\r\n- タグの途中に`(`が出現してその次の文字が`{`か`[`だったらタグ文字列を`(`までとする。\r\n\r\n今現在、runtime/doc/tagsには`({`や`([`を含むタグはありません。","created_at":1458131801},{"id":197320902,"issue_id":865,"user_id":518808,"body":"これで:+1:\r\n```patch\r\ndiff --git a/src/ex_cmds.c b/src/ex_cmds.c\r\nindex 8a763c9..f610b6b 100644\r\n--- a/src/ex_cmds.c\r\n+++ b/src/ex_cmds.c\r\n@@ -6206,6 +6206,12 @@ find_help_tags(\r\n \t    *d++ = *s;\r\n \r\n \t    /*\r\n+\t     * If tag contains ({ or ([, Tag is set to terminate the (\r\n+\t     */\r\n+\t    if (*s == '(' && (s[1] == '{' || s[1] =='['))\r\n+\t\tbreak;\r\n+\r\n+\t    /*\r\n \t     * If tag starts with ', toss everything after a second '. Fixes\r\n \t     * CTRL-] on 'option'. (would include the trailing '.').\r\n \t     */\r\n```","created_at":1458133976},{"id":200091969,"issue_id":865,"user_id":518808,"body":"これも要修正。\r\nhttps://github.com/vim-jp/issues/issues/873#issuecomment-199083619","created_at":1458692561},{"id":201180327,"issue_id":865,"user_id":840186,"body":"`:help wildcard` の最後の部分、\r\n\r\n```\r\nas a wildcard when \"[\" is in the 'isfname' option.  A simple way to avoid this\r\nis to use \"path\\[[]abc]\".  Then the file \"path[abc]\" literally.\r\n```\r\n\r\n`\"path[abc]\"` は `\"path\\[abc]\"` ではないだろうか。","created_at":1458890792},{"id":201696195,"issue_id":865,"user_id":840186,"body":"> 今現在、runtime/doc/tagsには({や([を含むタグはありません。\r\n\r\nもしプラグインのヘルプで`({`や`([`を含むタグがあったら、引けなくなるのではと今さらながら気になりました。","created_at":1458961842},{"id":201703778,"issue_id":865,"user_id":518808,"body":"うぅ、すでに取り込まれている分だと `('`で始まるタグには飛べない(苦笑)\r\nSurround系のモーションコマンドでありそう。。","created_at":1458967442},{"id":201736360,"issue_id":865,"user_id":3213998,"body":"細かいですが、jobのオプションの修正漏れがありました (Vim 7.4.1655)\r\n\r\n```diff\r\ndiff --git a/runtime/doc/eval.txt b/runtime/doc/eval.txt\r\nindex 642f0ad..5ea30a8 100644\r\n--- a/runtime/doc/eval.txt\r\n+++ b/runtime/doc/eval.txt\r\n@@ -4631,7 +4631,7 @@ job_status({job})\t\t\t\t\t*job_status()* *E916*\r\n \t\t\t\"fail\"\tjob failed to start\r\n \t\t\t\"dead\"\tjob died or was stopped after running\r\n \t\t\r\n-\t\tIf an exit callback was set with the \"exit-cb\" option and the\r\n+\t\tIf an exit callback was set with the \"exit_cb\" option and the\r\n \t\tjob is now detected to be \"dead\" the callback will be invoked.\r\n \r\n \t\tFor more information see |job_info()|.\r\n```","created_at":1458982435},{"id":201841313,"issue_id":865,"user_id":518808,"body":">> 今現在、runtime/doc/tagsには({や([を含むタグはありません。\r\n\r\n> もしプラグインのヘルプで({や([を含むタグがあったら、引けなくなるのではと今さらながら気になりました。\r\n\r\n@k-takata vim_devにコメントしました。不足等ありましたらフォローお願いします。\r\nhttps://groups.google.com/d/msg/vim_dev/fH5gsRE-EjE/6b4vIWC0GwAJ","created_at":1459003990},{"id":201927282,"issue_id":865,"user_id":48169,"body":"repeat.txt の packages 機能を翻訳していて見つけたのでコメントします。\r\n以下は全て repeat.txt に対する指摘です。\r\n\r\n* `Error`が先頭でないにも関わらず大文字になってます。\r\n\r\n```diff\r\n-\t\t\tAn Error only causes sourcing the script where it\r\n+\t\t\tAn error only causes sourcing the script where it\r\n```\r\n\r\n* \\` を使っている個所がいくつかありますが、タグが用意されている場合は `|` 使ったほうがいいのではないでしょうか。\r\n\r\n* 以下は `s/or not loaded/is not loaded/` の間違いではないでしょうか。\r\n\r\n```\r\nNote that the files under \"pack/foo/opt\" or not loaded automatically, only the\r\nones under \"pack/foo/start\".  See |pack-add| below for how the \"opt\" directory\r\nis used.\r\n```\r\n\r\n* 以下の文の意図が汲み取れませんでした (always.vim とは…)。\r\n\r\n```\r\nThis could be done inside always.vim, if some conditions are met.  Or you\r\ncould add this command to your |.vimrc|.\r\n```","created_at":1459024879},{"id":201928675,"issue_id":865,"user_id":48169,"body":"上記は新機能の help ということもあり、今すぐ指摘したほうがいいでしょうか？","created_at":1459025521},{"id":201949191,"issue_id":865,"user_id":840186,"body":"すでに指摘が入っています。（全部かどうかは未確認）\r\nhttps://groups.google.com/d/msg/vim_dev/VXSJLb_boRQ/WgsNYu-NGwAJ","created_at":1459034264},{"id":201953261,"issue_id":865,"user_id":48169,"body":"ありがとうございます。ちょうどスレッドが立てられてるようなので報告しました。","created_at":1459036790},{"id":201962324,"issue_id":865,"user_id":840186,"body":"> ` を使っている個所がいくつかありますが、タグが用意されている場合は | 使ったほうがいいのではないでしょうか。\r\n\r\n7.3の途中でexコマンドには \\` が使われはじめましたが、どういう場合に \\` を使っているのか、helpには明記されていないですね。","created_at":1459038977},{"id":201963684,"issue_id":865,"user_id":48169,"body":"そうですね… 最近使われ始めた印象があります。 >\\`","created_at":1459039281},{"id":203161150,"issue_id":865,"user_id":840186,"body":"https://github.com/vim/vim/commit/7db8f6f4f85e5d0526d23107b2a5e2334dc23354\r\n\r\n> `\"path[abc]\"` は `\"path\\[abc]\"` ではないだろうか。\r\n\r\nvim/vim#700 で指摘しておいたところ、直りました。\r\n\r\n> Errorが先頭でないにも関わらず大文字になってます。\r\n\r\nこれも直りました。","created_at":1459295451},{"id":203161690,"issue_id":865,"user_id":840186,"body":"https://github.com/vim/vim/commit/4f3f668c8486444e53163c29d2fc79bf47eb3c82\r\n\r\n> 以下は s/or not loaded/is not loaded/ の間違いではないでしょうか。\r\n\r\nare に直っています。\r\n\r\n> 以下の文の意図が汲み取れませんでした (always.vim とは…)。\r\n\r\n直っています。","created_at":1459295631},{"id":203198251,"issue_id":865,"user_id":48169,"body":"ありがとうございます。","created_at":1459304712},{"id":203207093,"issue_id":865,"user_id":375258,"body":"`:h cursor()` の以下の項目ですが、\r\n```\r\n\t\tWhen there is one argument {list} this is used as a |List|\r\n\t\twith two, three or four item:\r\n\t\t\t[{lnum}, {col}, {off}]\r\n\t\t\t[{lnum}, {col}, {off}, {curswant}]\r\n\t\tThis is like the return value of |getpos()| or |getcurpos()|,\r\n\t\tbut without the first item.\r\n```\r\nこういう感じに二つの時の行があると分かりやすかったです。\r\n```diff\r\n\t\twith two, three or four item:\r\n+\t\t\t[{lnum}, {col}]\r\n\t\t\t[{lnum}, {col}, {off}]\r\n```\r\n最初、上の文章をちゃんと見てなくてlnumとcolだけ渡しても動くけど渡していいのか不安になりました。\r\ntypoかどうか微妙ですけどネ。","created_at":1459305549},{"id":203215667,"issue_id":865,"user_id":840186,"body":"> * v_g_CTRL-A, v_g_CTRL-X\r\n\r\nv_CTRL-A, v_CTRL-X もないですね。","created_at":1459306436},{"id":203216864,"issue_id":865,"user_id":518808,"body":"@k-takata はい。実はそろそろpatch書いて送ろうと昨日の昼に作業したんですけど、その辺のチェックが面倒になってやめちゃった:grin:","created_at":1459306629},{"id":204984729,"issue_id":865,"user_id":518808,"body":"machakannさんの(`index.txt`のキー追加漏れ)以外の未報告分でpatch作って投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/J_eNFOGkujI/7diA8AknHgAJ\r\n\r\nAnyone>\r\n`index.txt`のキー追加漏れ どなたか纏めて頂けると助かります。","created_at":1459693285},{"id":205837042,"issue_id":865,"user_id":840186,"body":"7.4.1710\r\n\r\n```diff\r\n--- a/runtime/doc/options.txt\r\n+++ b/runtime/doc/options.txt\r\n@@ -5052,7 +5052,7 @@ A jump table for the options with a shor\r\n \twithout a limit.\r\n \tOn 64 bit machines higher values might work.  But hey, do you really\r\n \tneed more than 2 Gbyte for text editing?  Keep in mind that text is\r\n-\tstored in the swap file, one can edit files > 2 Gbyte anyay.  We do\r\n+\tstored in the swap file, one can edit files > 2 Gbyte anyway.  We do\r\n \tneed the memory to store undo info.\r\n \tAlso see 'maxmem'.\r\n \r\n```","created_at":1459867172},{"id":208903175,"issue_id":865,"user_id":840186,"body":"index.txt と、その他いくつかの修正をまとめて投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/QlcBo8pTrf0/IK7YsE9jBQAJ","created_at":1460467508},{"id":209117297,"issue_id":865,"user_id":840186,"body":"> 7.3の途中でexコマンドには \\` が使われはじめましたが、どういう場合に \\` を使っているのか、helpには明記されていないですね。\r\n\r\n`:help help-writing` (helphelp.txt) に記載が追加されました。","created_at":1460497803},{"id":209903986,"issue_id":865,"user_id":840186,"body":"7.4.1728\r\nhttps://groups.google.com/d/topic/vim_dev/n44Atord7uk/discussion\r\n( と { の間のスペースは削除されました。","created_at":1460635176},{"id":212825001,"issue_id":865,"user_id":840186,"body":"https://github.com/vim/vim/commit/aa3b15dbebf333282503d6031e2f9ba6ee4398ed いろいろ直りました。","created_at":1461230222},{"id":212829971,"issue_id":865,"user_id":518808,"body":":+1:\r\nhttps://github.com/vim/vim/commit/aa3b15dbebf333282503d6031e2f9ba6ee4398ed#diff-38d7929bd26d74d92ceddf984bbfc8dbL156","created_at":1461231124},{"id":220827952,"issue_id":865,"user_id":518808,"body":"`:h function-list`がメンテされていないです。\r\n例えば、`job_～`、`js_～`、`json_～`がない。\r\n名称変更前の`jsonencode()`, `jsondecode()`がある等々。","created_at":1463917310},{"id":220831320,"issue_id":865,"user_id":518808,"body":"> `:h function-list`がメンテされていないです。\r\n\r\n不足分纏めました(from Vim 7.4.1847)。どなたかこれを元にpatch作成しませんか？\r\n\r\n抜けているもの:\r\nch_evalexpr()\r\nch_evalraw()\r\nch_getbufnr()\r\nch_getjob()\r\nch_info()\r\nch_log()\r\nch_logfile()\r\nch_read()\r\nch_readraw()\r\nch_setoptions()\r\nch_status()\r\ngetcharsearch()\r\nglob2regpat()\r\nisnan()\r\njob_getchannel()\r\njob_info()\r\njob_setoptions()\r\njob_start()\r\njob_status()\r\njob_stop()\r\njs_decode()\r\njs_encode()\r\nsetcharsearch()\r\nsetfperm()\r\nstrcharpart()\r\ntest_alloc_fail()\r\ntest_disable_char_avail()\r\ntest_garbagecollect_now()\r\ntest_null_channel()\r\ntest_null_dict()\r\ntest_null_job()\r\ntest_null_list()\r\ntest_null_partial()\r\ntest_null_string()\r\ntimer_start()\r\ntimer_stop()\r\nwin_findbuf()\r\nwin_getid()\r\nwin_gotoid()\r\nwin_id2tabwin()\r\nwin_id2win()\r\n\r\n\r\n要リネーム:\r\njsondecode() --> json_decode()\r\njsonencode() --> json_encode()","created_at":1463922189},{"id":220833372,"issue_id":865,"user_id":840186,"body":"xxx_for_testing 関数はリネームの可能性があるので注意した方がいいです。","created_at":1463924846},{"id":221466694,"issue_id":865,"user_id":518808,"body":"@k-takata 7.4.1838で`garbagecollect_for_testing()`が`test_garbagecollect_now()`にリネームされましたね。\r\n(上の纏めコメントを7.4.1842ベースで更新しました)\r\n\r\nあと、「`disable_char_avail_for_testing()`と`alloc_fail()`はリネームしないの？」と突っ込み済みです。\r\nhttps://groups.google.com/d/msg/vim_dev/B1kF0wQM2Iw/ENxBdM-2HwAJ","created_at":1464148409},{"id":221760859,"issue_id":865,"user_id":518808,"body":"> あと、「disable_char_avail_for_testing()とalloc_fail()はリネームしないの？」と突っ込み済みです。\r\n\r\nRenamed on patch 7.4.1844.\r\nhttps://github.com/vim/vim/commit/8e8df251bf2505e5decf258397c6069fbe5e2e01\r\n\r\n(上の一覧も更新済み)","created_at":1464229285},{"id":223966376,"issue_id":865,"user_id":840186,"body":"`:help 'writedelay'`\r\n\r\n```\r\n\tThe number of microseconds to wait for each character sent to the\r\n```\r\n\r\nmicroseconds ではなくて milliseconds のような気がします。\r\n（ちなみに日本語訳は「1万分の1秒単位」になってて全然合ってません。）","created_at":1465221402},{"id":225477768,"issue_id":865,"user_id":518808,"body":"> :h function-listがメンテされていないです。\r\n\r\nhttps://github.com/vim-jp/issues/issues/865#issuecomment-220831320\r\n\r\n今朝修正されました。(抜けチェックはしていません)\r\nhttps://github.com/vim/vim/commit/c95a302a4c42ec8230473cd4a5e0064d0a143aa8#diff-46f53421a06e0a19bb5416273231c104L1","created_at":1465785011},{"id":193318433,"issue_id":864,"user_id":468368,"body":"もしかして…\r\n`MSVCRT_NAME` は Ruby のランタイム決定のためにしか使われてないから、\r\nそっちを明示的に指定している場合は、意味ないのかな?\r\n\r\n`DYNAMIC_MSVCRT_DLL` は、iconvとのやりとりのために\r\nどのみちコンパイル時に明示してやらないとならなさそう。","created_at":1457366940},{"id":193318499,"issue_id":864,"user_id":840186,"body":"`MSVCRT_NAME`は、RubyのDLLの名前を決めるための変数ですが、RubyはまだVC14でのビルドに対応していません。RubyがVC14に対応して、DLLの名前が決まった時点で適切に修正する必要があります。","created_at":1457366948},{"id":193320551,"issue_id":864,"user_id":468368,"body":"@k-takata だとすれば、そもそも\r\n\r\n```make\r\n# Base name of the msvcrXX.dll\r\n!if $(MSVCRT_VER) <= 60\r\nMSVCRT_NAME = msvcrt\r\n!else\r\nMSVCRT_NAME = msvcr$(MSVCRT_VER)\r\n!endif\r\n```\r\n\r\nこの部分をRubyの以下の場所に移したほうが良いのかもしれませんね。\r\n\r\n```make\r\n!ifndef RUBY_MSVCRT_NAME\r\n# Base name of msvcrXX.dll which is used by ruby's dll.\r\nRUBY_MSVCRT_NAME = $(MSVCRT_NAME)\r\n!endif # RUBY_MSVCRT_NAME\r\n```","created_at":1457367138},{"id":193321509,"issue_id":864,"user_id":468368,"body":"直接 `RUBY_MSVCRT_NAME` を定義する形にして、 `MSVCRT_NAME` 自体は、無いほうが良いのかも。","created_at":1457367229},{"id":193329600,"issue_id":864,"user_id":840186,"body":"`DYNAMIC_MSVCRT_DLL` は #277 によって必須ではなくなっています。（うまくいかないDLLもありますが。）\r\n\r\n> 直接 RUBY_MSVCRT_NAME を定義する形にして、 MSVCRT_NAME 自体は、無いほうが良いのかも。\r\n\r\nそうとも言えるかもしれないです。","created_at":1457368098},{"id":192270959,"issue_id":861,"user_id":468368,"body":"直接は関係ないけど、\r\nいま src/testdir で `nmake -f Make_dos.mak win32 clean` したら\r\nchannellog が残ってた (；´Д｀)","created_at":1457096186},{"id":192277459,"issue_id":861,"user_id":468368,"body":"> channellog が残ってた (；´Д｀)\r\n\r\n1485 で入ったみたい。\r\n\r\n[ココ](https://github.com/vim/vim/commit/014069a7ac51557e531eb3c8b94e36f2193f6c21#diff-0df32bc2f6721af01944a6045df14b1fR486)をみるとインデントもおかしいし、デバッグ用に追加して消し忘れかな。","created_at":1457096970},{"id":192280229,"issue_id":861,"user_id":468368,"body":"以下2点は間違いでした。申し訳ない。\r\n\r\n>  * clean の対象で～ない\r\n>  * Active Perl 5.20.1 の時は発生していませんでした。\r\n\r\nよって .gitignore に足せば十分でしょう。","created_at":1457097335},{"id":192281555,"issue_id":861,"user_id":840186,"body":"> 以下2点は間違いでした。申し訳ない。\r\n\r\nおや、Perlのバージョンアップによるものだと思っていましたが。\r\n少なくとも ActivePerl 5.16では発生しておらず、5.22では発生しているという認識。","created_at":1457097708},{"id":192282616,"issue_id":861,"user_id":468368,"body":"あ、ごめん。やっぱどっちも当初の報告通りで良いのかも。\r\n\r\nclean についてはラップしているビルドスクリプトで消してた。\r\n5.20 については、xsを実行するperlが5.22のままだった。","created_at":1457097932},{"id":192285346,"issue_id":861,"user_id":468368,"body":"再度確認しました。当初の報告どおりで間違いないです。\r\n5.20.1 でビルドすると vim.lib はできません。","created_at":1457098342},{"id":192603274,"issue_id":861,"user_id":468368,"body":"lib/CORE/XSUB.h のこの差分が原因っぽい。\r\n\r\n```diff\r\n--- Perl-5.20.1-64/lib/CORE/XSUB.h\t2014-04-16 03:56:36.000000000 +0900\r\n+++ Perl-5.22.1-64/lib/CORE/XSUB.h\t2015-06-01 16:45:32.000000000 +0900\r\n@@ -128,7 +128,7 @@\r\n #undef XS\r\n #undef XS_EXTERNAL\r\n #undef XS_INTERNAL\r\n-#if defined(__CYGWIN__) && defined(USE_DYNAMIC_LOADING)\r\n+#if (defined(__CYGWIN__) || defined(WIN32)) && defined(USE_DYNAMIC_LOADING)\r\n #  define XS_EXTERNAL(name) __declspec(dllexport) XSPROTO(name)\r\n #  define XS_INTERNAL(name) STATIC XSPROTO(name)\r\n #endif\r\n```","created_at":1457164794},{"id":192606864,"issue_id":861,"user_id":468368,"body":"この差分、perl5の本体(ミラー)を見る限り、[5.23.8 にも存在しない](https://github.com/Perl/perl5/blob/v5.23.8/XSUB.h#L132)。\r\nつまり Active Perl 特有の変更っぽい (；´Д｀)","created_at":1457166107},{"id":192609320,"issue_id":861,"user_id":468368,"body":"<http://downloads.activestate.com/ActivePerl/releases/> からActivePerlのソースをDLして確認したところ\r\n2002 (5.20.2) では WIN32 を含まなかったものの、ソレ以外の 2003, 2200, 2201 の全てで WIN32 のチェックが追加されていた。\r\n\r\nよって src/vim.lib が作成されるのは Windows で最新の ActivePerl を用いて +if_perl を作成した場合に限られる。","created_at":1457168082},{"id":191586964,"issue_id":858,"user_id":1528093,"body":"ちなみにですけど、vim-xxxを入れると3系のみ有効、vim-xxx-py2を入れると2系のみ有効でした","created_at":1456981769},{"id":191588989,"issue_id":858,"user_id":199592,"body":"へー。 -py2 なんてのもできたんですね。\r\nYouCompleteMeの中の人が頑張ってるけど、それ以外にもロングテール的に python2 only な\r\nvim の plugin が、 Ubuntu パッケージに入ってしまってたから、仕方ないか。","created_at":1456982287},{"id":191596929,"issue_id":858,"user_id":199592,"body":"Python のライブラリでは Python 2/3 どちらでも動くコードを書くやり方が一般化してきていて、\r\nvim の `:py` と `:py3` や `:pyfile` と `:py3file` を使い分けたりする vim スクリプトを書くほうが\r\nPython 2/3 両対応の Python 書くよりずっと面倒なので、 Python 2/3 どちらでも動くプラグインを\r\n開発しやすい仕組みがあると良いんですが。\r\n\r\nその辺の仕組み、 vim_dev で以前に ZyX さんが中心になって提案されてたと思うのですが、\r\n結局どうなったのか記憶が…","created_at":1456985186},{"id":191616294,"issue_id":858,"user_id":468368,"body":"@mattn \r\n**A1**: `has('python')` は今の仕様のまま、いじらないほうが良いかと。\r\n**A2**: `has('python2')` はじめ、 `:py2`, `py2file` を追加するのは良い案だと思います。\r\n\r\n理想案をいうと、 `:py` (無印)系は、インストールしてある Python のうちより新しいものを使い、\r\n`:py2` 及び `:py3` では特定のバージョンの Python を使う、ってのが、\r\n将来にわたっての保守はしやすいんではないかと考えてます。\r\nとは言え、こうすると無印の動作を変えることになってしまうんですよね。\r\n\r\npython2 の将来がどこまであるかは、別ですが :sweat_smile: ","created_at":1456988164},{"id":191621503,"issue_id":858,"user_id":840186,"body":"> その辺の仕組み、 vim_dev で以前に ZyX さんが中心になって提案されてたと思うのですが、\r\n\r\nどこかで、`:pyx`, `:pyxfile` というコマンドの提案を見たような気がするのですが…\r\nこれかな？\r\nhttps://groups.google.com/d/topic/vim_dev/QUlI0fpMlFI/discussion","created_at":1456989209},{"id":190486881,"issue_id":855,"user_id":840186,"body":"参考までに、todo.txtからの抜粋。\r\n\r\n```\r\nThis difference is unexpected:\r\n    echo v:true == 1\r\n    1\r\n    echo [v:true] == [1]\r\n    0\r\nIt's because tv_equal() works different.\r\n```","created_at":1456796638},{"id":190497054,"issue_id":855,"user_id":518808,"body":"既存のソースコードは継続行の先頭に論理演算子が来るスタイルになっています。(:information_desk_person:細かい)\r\n```c\r\n    if (tv1->v_type != tv2->v_type\r\n       && tv1->v_type != VAR_NUMBER && tv2->v_type != VAR_NUMBER)\r\n```","created_at":1456798555},{"id":190499683,"issue_id":855,"user_id":10111,"body":"thx","created_at":1456799411},{"id":228697625,"issue_id":851,"user_id":840186,"body":"drone.io 上で現行のテストを動かしたらログが多すぎてエラーとなってしまいました。\r\nこんな感じで出力を消したら、drone.io でも通るようになりました。\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/941c6bc7cdc5563330af79dd89b5864ac8df1908/test_reduce_test_log.patch?fileviewer=file-view-default\r\n本当に消しても問題ないのかというのは気になるところですが。","created_at":1467020063},{"id":228697885,"issue_id":851,"user_id":840186,"body":"ついでに、Windows版のテストを少し静かにするパッチ\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/941c6bc7cdc5563330af79dd89b5864ac8df1908/make-tests-silent.patch?fileviewer=file-view-default","created_at":1467020128},{"id":228726700,"issue_id":851,"user_id":468368,"body":"output が tty じゃないことで、何かバグを踏むかってあたりですよね…","created_at":1467028992},{"id":228727819,"issue_id":851,"user_id":840186,"body":"ですね。ただ、Travisなどで出力をキャプチャしてWebに出していることを考えると実は変わらないのだろうかと思ったり思わなかったり。","created_at":1467029339},{"id":228749614,"issue_id":851,"user_id":468368,"body":"あ、その意味で言うと本当に怖いのは、ttyに繋がないことでなにかバグを見逃しうていないかって方なんですね。","created_at":1467035116},{"id":189916341,"issue_id":850,"user_id":840186,"body":"vim-jp/vim は消してしまって構わないと思いますが、vim-jp/vim-obsoleted を消すのには反対です。古いissueには、旧vim-jp/vimへのリンクがあるものが多数あり、消してしまうと辿れなくなってしまいます。むしろ vim-jp/vim-obsoleted を vim-jp/vim に戻した方がよいのではないかとも思っています。\r\n\r\nvim-ci は、不要になったとはいえ、2年間の歴史を葬るのはもったいない気もしますが…。","created_at":1456682953},{"id":195769487,"issue_id":850,"user_id":468368,"body":"現時点の「ほぼ決定」事項\r\n\r\n* vim-jp/vim は消す\r\n* vim-jp/vim-obsoleted は vim-jp/vim に名称変更。あわせて説明の修正も要る。\r\n\r\n未決事項\r\n\r\n* vim-jp/vim-ci どうしよう?\r\n\r\nvim-ci に関わってた人間として「もったいない」は共感する。\r\nただノスタルジィみたいな感傷だけで、レポジトリを存続させるのにも疑問がある。\r\nとくに事情を知らない人が見た時に、それが動いていない状況で放置されているか、\r\n疑問に思うくらいならば無いほうが良いだろう。\r\n\r\n説明に memorial で残してあるよ、と書けばそれで良いのだろうか。\r\n誰か、どちら方向でも良いので、別の視点からの意見はないだろうか。","created_at":1457800153},{"id":189877841,"issue_id":847,"user_id":10111,"body":"僕の経験則だと、だいたいの言語も WSAStartup をしょっぱなから呼びたくないので必要になった直前で呼び出してたと思います。","created_at":1456667910},{"id":189895441,"issue_id":847,"user_id":468368,"body":"ですよね…netbeansの時にそんなことがあったような…","created_at":1456675457},{"id":190031532,"issue_id":847,"user_id":10111,"body":"@0xBADDCAFE さんが知ってるかな？\r\n\r\nhttps://github.com/0xBADDCAFE/vim-patches/blob/master/2006-init_winsock.diff","created_at":1456719708},{"id":190033494,"issue_id":847,"user_id":840186,"body":"それ、香り屋パッチから持ってきたものですね。\r\nhttps://github.com/koron/vim-kaoriya-patches/blob/master/master/2006-init_winsock.diff","created_at":1456720340},{"id":190033895,"issue_id":847,"user_id":10111,"body":"どうせ wsaerr  見ないのなら if 要らないかも。","created_at":1456720520},{"id":192543593,"issue_id":844,"user_id":840186,"body":"ドキュメント類にも結構 \"dos\" が残っています。","created_at":1457141039},{"id":191647648,"issue_id":839,"user_id":48169,"body":"ping\r\n今のコードでは実装が難しいのでしょうか？","created_at":1456992925},{"id":191756931,"issue_id":839,"user_id":468368,"body":"単純にまだ興味の範囲外なんじゃないでしょうか。\r\nLinux限定であれば実装は、ちょっと面倒な部分はあるものの、\r\nそう難しくはないでしょう。\r\n\r\nSIGCHLDを受けるにしても、どのジョブが終わったか(または本当に終わったか)はわかりませんから、\r\nVimは管理している全部のジョブのステータスを確認する必要がありそうです。\r\nそのためパフォーマンスが想定以上に悪くなる可能性があります。\r\n\r\n一方でVimスクリプト関数の `job_status()` を呼べば、強制的に即座にチェックできそうです。\r\n頻繁に呼び出してみてパフォーマンス上の問題がでなければ\r\n実装してみる価値はあるかもしれません。(私自身は実装するつもりはありませんが :wink:)\r\n\r\nまた単にジョブの終了にセンシティブなプラグインを作りたいのであれば、\r\n`job_status()` を頻繁に呼んでしまうだけのほうが、手っ取り早いでしょう。\r\n\r\nなおWindowsでは一筋縄でいかないのはそのとおりです。","created_at":1457011020},{"id":191906966,"issue_id":839,"user_id":48169,"body":"@koron なるほどです。ありがとうございます！！","created_at":1457030478},{"id":192035739,"issue_id":839,"user_id":10111,"body":"おそらくチェックはシグナルでなくポーリングになると思いますがプロセスの生き死にチェックも若干はコストなので現状は10秒になってます。管理するプロセスが多くなるとテキスト編集中に刺さるのでいまは興味の対象外になってしまってますね。\r\n","created_at":1457051556},{"id":192037067,"issue_id":839,"user_id":48169,"body":"なるほど。\r\nとりあえず`job_status()`で逐一確認することにします。\r\nありがとうございます。","created_at":1457051885},{"id":192042001,"issue_id":839,"user_id":10111,"body":"あ、open のままでいいです","created_at":1457053026},{"id":192263729,"issue_id":839,"user_id":468368,"body":"特定のプロセスが終わったって、通知的に分かる方法があると良いんですけどねぇ。\r\nシグナルに対象となるプロセスIDが乗ってくるだけでも違う。","created_at":1457094868},{"id":192294887,"issue_id":839,"user_id":10111,"body":"WaitForMultipleObject すればできるんでしょうけどね。","created_at":1457100319},{"id":188527945,"issue_id":837,"user_id":10111,"body":"`(` を subst-delim にする人はまずいないと思うので、これでどうでしょうか？\r\n```diff\r\ndiff --git a/runtime/syntax/vim.vim b/runtime/syntax/vim.vim\r\nindex 0206a61..12350e5 100644\r\n--- a/runtime/syntax/vim.vim\r\n+++ b/runtime/syntax/vim.vim\r\n@@ -302,7 +302,7 @@ syn cluster\tvimSubstList\tcontains=vimPatSep,vimPatRegion,vimPatSepErr,vimSubstTw\r\n syn cluster\tvimSubstRepList\tcontains=vimSubstSubstr,vimSubstTwoBS,vimNotation\r\n syn cluster\tvimSubstList\tadd=vimCollection\r\n syn match\tvimSubst\t\"\\(:\\+\\s*\\|^\\s*\\||\\s*\\)\\<\\%(s\\%[ubstitute]\\|sm\\%[agic]\\|sno\\%[magic]\\)[:[:alpha:]]\\@!\" nextgroup=vimSubstPat\r\n-syn match\tvimSubst\t\"\\%(^\\|[^\\\\]\\)s\\%[ubstitute][:#[:alpha:]]\\@!\"\tnextgroup=vimSubstPat contained\r\n+syn match\tvimSubst\t\"\\%(^\\|[^\\\\]\\)s\\%[ubstitute][:[:alpha:](]\\@!\"\tnextgroup=vimSubstPat contained\r\n syn match\tvimSubst\t\"/\\zss\\%[ubstitute]\\ze/\"\tnextgroup=vimSubstPat\r\n syn match\tvimSubst1       contained\t\"s\\%[ubstitute]\\>\"\tnextgroup=vimSubstPat\r\n syn region\tvimSubstPat     contained\tmatchgroup=vimSubstDelim start=\"\\z([^a-zA-Z( \\t[\\]&]\\)\"rs=s+1 skip=\"\\\\\\\\\\|\\\\\\z1\" end=\"\\z1\"re=e-1,me=e-1\t contains=@vimSubstList\tnextgroup=vimSubstRep4\toneline\r\n```\r\n","created_at":1456358760},{"id":188532415,"issue_id":837,"user_id":375258,"body":"ありがとうございます。\r\n`substitute` と `(` の間にスペースを開けると、 `vimSubst` になってしまいます。\r\n```vim\r\nfunction! s:test(x)\r\n  return substitute (substitute (a:x, 'a', '', 'g'), 'b', '', 'g')\r\nendfunction\r\n```","created_at":1456359865},{"id":188541148,"issue_id":837,"user_id":10111,"body":"なるほど。もうちょっと考えないとですね。","created_at":1456362135},{"id":188545881,"issue_id":837,"user_id":518808,"body":"関数コールhighlightの定義を`VimSubst`より先におこなうようにしてみました。\r\n他に影響してないかな？\r\n\r\n```diff\r\ndiff --git a/runtime/syntax/vim.vim b/runtime/syntax/vim.vim\r\nindex 9928051..af9b22e 100644\r\n--- a/runtime/syntax/vim.vim\r\n+++ b/runtime/syntax/vim.vim\r\n@@ -296,6 +296,13 @@ syn region\tvimString\toneline\tstart=\"\\s/\\s*\\A\"lc=1 skip=\"\\\\\\\\\\|\\\\+\" end=\"/\"\tconta\r\n syn match\tvimString\tcontained\t+\"[^\"]*\\\\$+\tskipnl nextgroup=vimStringCont\r\n syn match\tvimStringCont\tcontained\t+\\(\\\\\\\\\\|.\\)\\{-}[^\\\\]\"+\r\n \r\n+\" User Function Highlighting {{{2\r\n+\" (following Gautam Iyer's suggestion)\r\n+\" ==========================\r\n+syn match vimFunc\t\t\"\\%(\\%([sSgGbBwWtTlL]:\\|<[sS][iI][dD]>\\)\\=\\%([a-zA-Z0-9_]\\+\\.\\)*\\I[a-zA-Z0-9_.]*\\)\\ze\\s*(\"\t\tcontains=vimFuncName,vimUserFunc,vimExecute\r\n+syn match vimUserFunc contained\t\"\\%(\\%([sSgGbBwWtTlL]:\\|<[sS][iI][dD]>\\)\\=\\%([a-zA-Z0-9_]\\+\\.\\)*\\I[a-zA-Z0-9_.]*\\)\\|\\<\\u[a-zA-Z0-9.]*\\>\\|\\<if\\>\"\tcontains=vimNotation\r\n+syn match vimNotFunc\t\"\\<if\\>\\|\\<el\\%[seif]\\>\\|\\<return\\>\\|\\<while\\>\"\r\n+\r\n \" Substitutions: {{{2\r\n \" =============\r\n syn cluster\tvimSubstList\tcontains=vimPatSep,vimPatRegion,vimPatSepErr,vimSubstTwoBS,vimSubstRange,vimNotation\r\n@@ -413,13 +420,6 @@ syn match\tvimNotation\t\"\\(\\\\\\|<lt>\\)\\=<\\([cas]file\\|abuf\\|amatch\\|cword\\|cWORD\\|c\r\n syn match\tvimBracket contained\t\"[\\\\<>]\"\r\n syn case match\r\n \r\n-\" User Function Highlighting {{{2\r\n-\" (following Gautam Iyer's suggestion)\r\n-\" ==========================\r\n-syn match vimFunc\t\t\"\\%(\\%([sSgGbBwWtTlL]:\\|<[sS][iI][dD]>\\)\\=\\%([a-zA-Z0-9_]\\+\\.\\)*\\I[a-zA-Z0-9_.]*\\)\\ze\\s*(\"\t\tcontains=vimFuncName,vimUserFunc,vimExecute\r\n-syn match vimUserFunc contained\t\"\\%(\\%([sSgGbBwWtTlL]:\\|<[sS][iI][dD]>\\)\\=\\%([a-zA-Z0-9_]\\+\\.\\)*\\I[a-zA-Z0-9_.]*\\)\\|\\<\\u[a-zA-Z0-9.]*\\>\\|\\<if\\>\"\tcontains=vimNotation\r\n-syn match vimNotFunc\t\"\\<if\\>\\|\\<el\\%[seif]\\>\\|\\<return\\>\\|\\<while\\>\"\r\n-\r\n \" Errors And Warnings: {{{2\r\n \" ====================\r\n if !exists(\"g:vimsyn_noerror\") && !exists(\"g:vimsyn_novimfunctionerror\")\r\n```","created_at":1456363182},{"id":189297376,"issue_id":837,"user_id":375258,"body":"すみません、 @h-east さんの変更を入れてみても私の手元では直っていないように見えます… 私の確認の方法が違うのかな…(:h | e ../syntax/vim.vimを直接書き換えて、vim -u NONE -c 'syn on' test.vim\r\nしています) 他の方はいかがでしょうか。","created_at":1456496098},{"id":189298755,"issue_id":837,"user_id":10111,"body":"いたちごっこになりますが\r\n```vim\r\ndiff --git a/runtime/syntax/vim.vim b/runtime/syntax/vim.vim\r\nindex 0206a61..7730d9f 100644\r\n--- a/runtime/syntax/vim.vim\r\n+++ b/runtime/syntax/vim.vim\r\n@@ -302,7 +302,8 @@ syn cluster\tvimSubstList\tcontains=vimPatSep,vimPatRegion,vimPatSepErr,vimSubstTw\r\n syn cluster\tvimSubstRepList\tcontains=vimSubstSubstr,vimSubstTwoBS,vimNotation\r\n syn cluster\tvimSubstList\tadd=vimCollection\r\n syn match\tvimSubst\t\"\\(:\\+\\s*\\|^\\s*\\||\\s*\\)\\<\\%(s\\%[ubstitute]\\|sm\\%[agic]\\|sno\\%[magic]\\)[:[:alpha:]]\\@!\" nextgroup=vimSubstPat\r\n-syn match\tvimSubst\t\"\\%(^\\|[^\\\\]\\)s\\%[ubstitute][:#[:alpha:]]\\@!\"\tnextgroup=vimSubstPat contained\r\n+syn match\tvimSubst\t\"\\%(^\\|[^\\\\]\\)s\\%[ubstitute][:#[:alpha:][:space:](]\\@!\"\tnextgroup=vimSubstPat contained\r\n syn match\tvimSubst\t\"/\\zss\\%[ubstitute]\\ze/\"\tnextgroup=vimSubstPat\r\n syn match\tvimSubst1       contained\t\"s\\%[ubstitute]\\>\"\tnextgroup=vimSubstPat\r\n syn region\tvimSubstPat     contained\tmatchgroup=vimSubstDelim start=\"\\z([^a-zA-Z( \\t[\\]&]\\)\"rs=s+1 skip=\"\\\\\\\\\\|\\\\\\z1\" end=\"\\z1\"re=e-1,me=e-1\t contains=@vimSubstList\tnextgroup=vimSubstRep4\toneline\r\n```\r\n","created_at":1456496338},{"id":189306006,"issue_id":837,"user_id":375258,"body":"mattnさんの変更で直るのは確認できました。ありがとうございます。その変更で:substituteのほうがおかしくなるケースもパット思いつかないしいい気がしてきました 。","created_at":1456497354},{"id":189308671,"issue_id":837,"user_id":518808,"body":"あー、`vim -u NONE`で見に行かないところのファイルを変更して、且つ、`/usr/local/share/vim/～`配下のめっちゃ古いやつが読み込まれたので直ったように錯覚しただけでした。すいません。","created_at":1456497750},{"id":189552075,"issue_id":837,"user_id":10111,"body":"https://groups.google.com/forum/#!topic/vim_dev/sxES88otyt0","created_at":1456537849},{"id":194437639,"issue_id":837,"user_id":48169,"body":"関連？：https://github.com/vim/vim/pull/651","created_at":1457548117},{"id":187763920,"issue_id":835,"user_id":468368,"body":"タイトルと、本文の書き出しを修正しました。\r\n\r\n要望なのに疑問形で終わるのと、「タイトル通りです。」が主文なのは、おかしかったので。","created_at":1456243272},{"id":187764714,"issue_id":835,"user_id":48169,"body":"ありがとうございます！","created_at":1456243417},{"id":195769661,"issue_id":835,"user_id":468368,"body":"https://github.com/vim-jp/issues/issues/37#issuecomment-6881757\r\n\r\n> todo.txt 3782行目にこんなの見つけました。\r\n\r\n>> 8   Custom completion of user commands can't use the standard completion\r\n>>     functions.  Add a hook to invoke a user function that returns the type of\r\n>>     completion to be done: \"file\", \"tag\", \"custom\", etc.","created_at":1457800318},{"id":195784079,"issue_id":835,"user_id":48169,"body":"それを関数から使えるようにするのはどうか？ってBramさんに提案すればいいんですかね。","created_at":1457808084},{"id":195798008,"issue_id":835,"user_id":48169,"body":"投げました。\r\nhttps://groups.google.com/forum/#!topic/vim_dev/KOjY_Sass6E","created_at":1457812390},{"id":195937223,"issue_id":835,"user_id":10111,"body":"一応貼っておきます。\r\n\r\nhttps://github.com/mattn/vim-completer","created_at":1457867539},{"id":186015460,"issue_id":831,"user_id":468368,"body":"nice catchです! :+1: :cake: ","created_at":1455848156},{"id":185467873,"issue_id":830,"user_id":20474,"body":"新機能便利そう…!\r\nまずはこのリポジトリ(`vim-jp/issues`)で試しに導入してみてもいいかもしれないですね。\r\n(不具合報告なのか、新機能提案なのか、わからないことの相談なのかで、テンプレート変えたい場合とか出てきそう)","created_at":1455753941},{"id":185469796,"issue_id":830,"user_id":20474,"body":"> まずはこのリポジトリ(vim-jp/issues)で試しに導入してみてもいいかもしれないですね。\r\n\r\nあ、すでにやってますね…(#829)。見落としてましたw","created_at":1455754129},{"id":185479960,"issue_id":830,"user_id":468368,"body":"そしてこのissue自体が、テンプレートを使って作られたものでしたw","created_at":1455756077},{"id":185494593,"issue_id":830,"user_id":10111,"body":"項目数を増やし過ぎても誰もやらなくなるメソッドだと思うのでgolangがやってたくらいがちょうどかなと覆いました。\r\n\r\n```\r\nWhat steps will reproduce the problem?\r\n\r\n\r\nWhat do you see instead?\r\n\r\n\r\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\r\n\r\n\r\nWhich operating system are you using?\r\n\r\n\r\nWhich revision are you using?  (hg identify)\r\n\r\n```\r\n\r\nvim で言えば\r\n\r\n```\r\nWhat steps will reproduce the problem?\r\n\r\n\r\nWhat do you see instead?\r\n\r\n\r\nWhich version of vim are you using?\r\n\r\n\r\nWhich operating system are you using?\r\n```\r\n\r\nこれくらいだろうか。","created_at":1455758582},{"id":185495771,"issue_id":830,"user_id":468368,"body":"@mattn :+1: 良さそう。","created_at":1455758685},{"id":185493491,"issue_id":829,"user_id":10111,"body":"内容、これでいいと思います。あるとすれば再現性(毎回、時々)あたりが欲しいですね。\r\nあとこれは賛否両論ですがgolangのissuesが昔やってた(google code時の名残だけど今はgithubに移ってやってない)、期待結果と実際の結果を説明してもらう物、とか。\r\n\r\n```\r\nWhat is the expected output?\r\n\r\nWhat do you see instead?\r\n\r\n```","created_at":1455758259},{"id":185494321,"issue_id":829,"user_id":518808,"body":"> ## OSのディストリ\r\n> \r\n> (オプションです。Linuxのように複数のディストリビューションがある場合に、報告に含めてください)\r\n> \r\n> ## OSのバージョン\r\n> \r\n> (OSのバージョンを書いてください)\r\n\r\nこんな感じに変更どうでしょうか？\r\n\r\n## OSの種類とバージョン\r\n\r\n(OSの種類バージョンを書いてください)\r\n\r\n- Windowsの場合\r\n<kbd>Windows</kbd>キー + <kbd>Pause</kbd>キー押下で表示されるシステム情報ウィンドウで確認できます。\r\n(例) Windows7SP1\r\n\r\n- Linuxの場合\r\n以下のコマンドで確認できます。\r\n`uname -a`\r\n`cat /etc/system-release`\r\n(例) fedora 23, Ubuntu 15.10 (32bit)\r\n\r\n※bit数は64bitの場合は省略可です。\r\n\r\n===\r\n質問: /etc/system-release って最近のディストリだと必ず存在する？","created_at":1455758532},{"id":185497338,"issue_id":829,"user_id":468368,"body":"@h-east Xubuntu はsystem-release ありませんでした。","created_at":1455758845},{"id":185497852,"issue_id":829,"user_id":20474,"body":"Gentoo Linux では、`/etc/system-release` はありませんでしたが `/etc/os-release` ならありました。","created_at":1455759008},{"id":185498986,"issue_id":829,"user_id":554281,"body":"Ubuntuだと `/etc/lsb-release`ですかね. Linux Standard Baseに準拠していればそのファイルか, `lsb_release -a`で確認できるはずです. (`lsb_release`は標準パッケージにないことも多いのでインストールの手間が発生してしまいますが...)","created_at":1455759354},{"id":185500346,"issue_id":829,"user_id":20474,"body":"Docker コンテナでの確認ですが、Ubuntu 14.04 と debian 8 (jessie) にも `/etc/os-release` ありました。このファイルが何準拠で置かれているものなのか私は全然知らないですが…。","created_at":1455759751},{"id":185503031,"issue_id":829,"user_id":554281,"body":"`/etc/os-release`(or /usr/lib/os-release)は freedesktop.orgで規定されているもののようです. LSBよりかはこちらに準拠している方が多そうな感じです.\r\n\r\n参考\r\n- https://www.freedesktop.org/software/systemd/man/os-release.html","created_at":1455760146},{"id":185503064,"issue_id":829,"user_id":518808,"body":"皆さん情報thanksです。\r\n\r\n`/etc/os-release`の情報は↓にあります。systemd?\r\nhttps://www.freedesktop.org/software/systemd/man/os-release.html\r\n\r\n共通で使えるのはこうかな？\r\n(頑張って共通化しなくてもいいんすけど:sweat_smile:)\r\n`grep PRETTY_NAME /etc/os-release`","created_at":1455760150},{"id":185506699,"issue_id":829,"user_id":10111,"body":"`cat /etc/*-release` とか書いておいたらだいたい伝わるかも。","created_at":1455760690},{"id":185507314,"issue_id":829,"user_id":840186,"body":"再現手順とか、使用しているプラグインとかも欲しい情報ですね。","created_at":1455760905},{"id":185516972,"issue_id":829,"user_id":518808,"body":"(興味本位メイン)\r\nArchとDebianにも`/etc/os-release`あるんだろうか？","created_at":1455763358},{"id":185520668,"issue_id":829,"user_id":554281,"body":"Debianは @thincaさんのコメントにあるように含まれています(7.0からのようです). Archは dockerの base/archlinuxイメージを見たところ, `/usr/lib/os-release`にありました.","created_at":1455764329},{"id":185523725,"issue_id":829,"user_id":518808,"body":"見落としてました。すんません:fish:さん。\r\nArchは`/usr/lib/`ですか...\r\nあと、/etc/arch-releaseあるけど中身は空らしい。","created_at":1455765095},{"id":185525524,"issue_id":829,"user_id":1595779,"body":"Vimのバージョンの他に、GUIかターミナルで発生する案件かどうかも欲しい。\r\n\r\nいっそのこと、:versionの内容を貼り付けてもらう(手順を記載しておいて)。","created_at":1455765785},{"id":185534641,"issue_id":829,"user_id":48169,"body":"`:version` 等を含んだスクリプトを実行してもらう、ってのは流石に敷居が高いですかね。\r\nそっちのが効率良いような気はするんですが、初中級者の方々がどう思うかが気になる所です (あまり情報集め過ぎるとプライバシーの問題もある？)","created_at":1455768693},{"id":185536182,"issue_id":829,"user_id":10111,"body":"手間すぎると若干嫌がられるし、僕ら分かってる人間はやらないから格差が出来る。","created_at":1455769106},{"id":185537366,"issue_id":829,"user_id":499680,"body":"Archユーザーですが/etc/os-releaseはsymlinkで存在してました。/etc/arch-releaseはおっしゃるとおり空っぽでした。\r\n\r\n```console\r\n$ ls -l /etc/os-release\r\nlrwxrwxrwx 1 root 21  7月 12  2014 /etc/os-release -> ../usr/lib/os-release\r\n$ cat /etc/os-release\r\nNAME=\"Arch Linux\"\r\nID=arch\r\nPRETTY_NAME=\"Arch Linux\"\r\nANSI_COLOR=\"0;36\"\r\nHOME_URL=\"https://www.archlinux.org/\"\r\nSUPPORT_URL=\"https://bbs.archlinux.org/\"\r\nBUG_REPORT_URL=\"https://bugs.archlinux.org/\"\r\n$ ls -l /etc/*-release\r\n-rw-r--r-- 1 root  0  2月  5 18:32 /etc/arch-release\r\nlrwxrwxrwx 1 root 21  7月 12  2014 /etc/os-release -> ../usr/lib/os-release\r\n\r\n```","created_at":1455769575},{"id":185541142,"issue_id":829,"user_id":1528093,"body":"> :version 等を含んだスクリプトを実行してもらう、ってのは流石に敷居が高いですかね。\r\n\r\nちなみにですけど、runtimeにそういうスクリプトが含まれてますね。\r\n(詳しくは [`:h bugs`](http://vim-jp.org/vimdoc-ja/intro.html#bugs) に載っています。)","created_at":1455770819},{"id":185541281,"issue_id":829,"user_id":518808,"body":"@uu59 確認ありがとうございます。\r\nということはLinuxは`grep PRETTY_NAME /etc/os-release`でOKですね。","created_at":1455770899},{"id":187759101,"issue_id":829,"user_id":48169,"body":"不具合報告ではない #835 のような issue を書く時には\r\nほとんどひな型を無視する形になっちゃいますね。","created_at":1456242654},{"id":183224843,"issue_id":821,"user_id":599164,"body":"一理あるな、という程度でそちらのほうが自然だとか便利だということはあまり感じないです。\r\n\r\n環境に依存する内容が多いので .vim 配下をリポジトリで管理している場合等やや不便かと思いますが、.gitignore に入れてしまえばいいしそもそも git で管理すること前提で議論していいのかが微妙なところです。","created_at":1455265131},{"id":183237852,"issue_id":821,"user_id":10111,"body":"メリットが実はあって、msys2 から native の vim/gvim を使った時に vimfiles(native) を .vim(msys2) に mklink しておけばホームディレクトリに _viminfo というファイルを作られて汚される事がない。というのはあります。","created_at":1455267295},{"id":183244826,"issue_id":821,"user_id":468368,"body":"ぶっちゃけ微妙な印象です。\r\nただ賛成ではないですが、反対もしません。\r\n\r\n個人的には .vim 下にはstaticなファイルだけ置きたい派なので\r\nそこに .viminfo がデフォで来るのはうーんという感じ。\r\nその意味で言えば $HOME に置かれるのも好きでないので、\r\nぼくは ~/var/vim みたいなフォルダ掘って 'viminfo' 使ってそっちに置いてます。","created_at":1455268392},{"id":183247395,"issue_id":821,"user_id":48169,"body":"そうなると互換性の観点からこれまでの `~/.viminfo` も読む事になった場合、書き込む時は `~/.vim/viminfo` に書き込まれるので、\r\n\r\n* ユーザーが「`~/.viminfo` 更新されてない？」と勘違いする\r\n* 古いエントリが `~/.viminfo` に残り続ける\r\n\r\nデフォルトを `~/.vim/viminfo` にする、という話だと\r\n\r\n* これまでの `~/.viminfo` がバージョンアップした途端無視される\r\n\r\nという懸念はあります。\r\nまた、運用でカバーする方法もある気がします。\r\n\r\n* コマンドライン引数の `-i` オプションでviminfoのファイルパスを指定\r\n* `|viminfo-n|` でviminfoのファイル名を指定","created_at":1455268921},{"id":183253028,"issue_id":821,"user_id":10111,"body":"viminfo ファイルの存在でチェックするのでなく、vimrc の存在位置から判定したらどうかなーと思ったのです。","created_at":1455269969},{"id":183315490,"issue_id":821,"user_id":48169,"body":"> viminfo ファイルの存在でチェックするのでなく、vimrc の存在位置から判定したらどうかなーと思ったのです。\r\n\r\n`~/.vim/vimrc` にあったら `~/.vim/viminfo`、`~/.vimrc` にあったら `~/.viminfo` って感じでしょうか？\r\n\\# 正直今まで `~/.vim/vimrc` みたいにvimrcを.vimの中に置けるの知りませんでしたｗ\r\n\r\nすみません、僕も反対と言うわけではなく、ここで挙げた事はパッチが適用された事にユーザー側で起こりうるだろう事とBramさんに言われるだろう事を挙げただけなので、一度 vim\\_dev で提案した方が良いかもしません (余計な茶々をすみませんでしたｗ)。","created_at":1455281929},{"id":182632962,"issue_id":820,"user_id":840186,"body":"mattnさんが #817 で入れたWindows対応ですが、リソースリークしている気がします。\r\n修正案：\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/8471979ed208dfc840c469b6605ff7c865ada903/fix-job-win32-resource-leak.patch?fileviewer=file-view-default\r\n\r\n@mattn `job_T`のメンバは、`jv_`プレフィックスがついていますが、`jf_pi`だけ`jf_`になっているのは何か理由がありますか？","created_at":1455146696},{"id":182633978,"issue_id":820,"user_id":840186,"body":"少し前のパッチで、Unixではプロセスグループをまとめてkillするようになりましたが、Windowsでも同様な機能が必要ですね。","created_at":1455146924},{"id":182662968,"issue_id":820,"user_id":943423,"body":"`job_start()` から即 `job_stop()` を呼ぶと、job プロセスを終了できない場合があります。\r\nUnix 系 OS で確認。\r\n\r\nfork-exec 時の子プロセスの動作:\r\n\r\n```\r\nfork()\r\n[a]\r\nreset_signals()\r\n[b]\r\nsetsid()\r\nexecvp()\r\n```\r\n\r\n(`job_stop` による) 終了シグナルが来るタイミングに関して、以下の問題がある。\r\n\r\n問題1. [a] ~ [b] で来た場合\r\n\r\n現在 (v7.4.1301) の実装では `kill(-job->jv_pid, sig)` でプロセスグループに投げているが、\r\n`setsid()` が実行されるまでは親プロセスのグループに属するため、`kill` は失敗する。\r\nよって、子プロセスは終了しない。\r\n\r\npatch:\r\nhttps://gist.github.com/ichizok/3939b94ab9eccff9d349#file-os_unix-c-patch-L17-L40\r\n`getpgid()` で子プロセスのプロセスグループを確認する。\r\n\r\n問題2. [a] で来た場合\r\n\r\n`reset_signals()` を完了するまでは、シグナルは (SIGKILL 以外) `deathtrap` でハンドリングされ、子プロセスは終了しない。\r\n\r\n\r\n実証用 `job.vim` (※):\r\n\r\n```vim\r\nfu! Test()\r\n  let v:errors = []\r\n  let job = job_start(['/bin/sh', '-c', 'sleep 3; echo oops'])\r\n  call assert_equal('run', job_status(job))\r\n  call append(line('$'), 'job: ' . job)\r\n  \"sleep 1m\r\n  call job_stop(job)\r\n  \"sleep 1m\r\n  call assert_equal('dead', job_status(job))\r\n  call append(line('$'), empty(v:errors) ? '[passed]' : v:errors)\r\nendfunction\r\ncall Test()\r\n```\r\n\r\n[a], [b] のタイミングでシグナルが到達しうるかは環境によるところが大きいようです。\r\n(私の場合、実機の Linux では発生せず、VirtualBox 上の Linux では発生しました)\r\n\r\n`:so job.vim` して、`oops` が表示されなければ (子プロセスが始末できていれば) 問題ない環境と思われます。\r\n\r\n(※) v7.4.1301 時点の `job_status()` はシグナルによる終了をチェックしてないので、`assert_equal('dead', job_status(job))` を満たせません。\r\n\r\npatch:\r\nhttps://gist.github.com/ichizok/3939b94ab9eccff9d349#file-os_unix-c-patch-L4-L16\r\n`jv_exitval` は仮に `-1` としています。","created_at":1455152436},{"id":182677939,"issue_id":820,"user_id":840186,"body":"Windowsでの課題をもう一つ。\r\n#819 にもちょっと書きましたが、test_channel.pyを`job_stop()`で終了できません。`\"kill\"`を指定すれば、強制終了できますが、もうちょっと安全な止め方があった方がよいかもしれません。","created_at":1455158561},{"id":182721945,"issue_id":820,"user_id":10111,"body":"windows 版はプロセスグループ作って CTRL-C 飛ばすパッチにしてたと思います。\r\n\r\nOn 2/11/16, K.Takata <notifications@github.com> wrote:\r\n> Windowsでの課題をもう一つ。\r\n> #819\r\n> にもちょっと書きましたが、test_channel.pyを`job_stop()`で終了できません。`\"kill\"`を指定すれば、強制終了できますが、もうちょっと安全な止め方があった方がよいかもしれません。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/820#issuecomment-182677939\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1455169428},{"id":182734690,"issue_id":820,"user_id":840186,"body":"困ったことに test_channel.py は Ctrl-C では終了できないんですよね。","created_at":1455171708},{"id":182737621,"issue_id":820,"user_id":10111,"body":"job_stop に HUP を送ると CTRL-BREAK になる様に仕込みましたが、それでもだめなら KILL しかないですね。それが終了専用の処理を入れるかです。","created_at":1455172609},{"id":182740481,"issue_id":820,"user_id":840186,"body":"[Job Objects](https://msdn.microsoft.com/en-us/library/windows/desktop/ms684161.aspx)はどの程度使えるのだろうか。","created_at":1455174030},{"id":182741496,"issue_id":820,"user_id":10111,"body":"TerminateJobObject は TerminateProcess 相当の様ですね。\r\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms686709(v=vs.85).aspx","created_at":1455174381},{"id":182741671,"issue_id":820,"user_id":468368,"body":"ざっくりチェックした限りだと、Job Objectならプロセスグループできそうな感じですね。\r\nたしかに止める時のシグナルがなさげなのでアレですが。","created_at":1455174486},{"id":182741887,"issue_id":820,"user_id":10111,"body":"JobObject は自分でジョブに対してプロセスハンドルを割り当てる事になるので、予めハンドルが分かってるなら自分で TerminateProcess 出来るかと思いましす。\r\n現状、job_start は新しいプロセスグループを作って job_stop(h, \"int\") で CTRL-C を送るので、それで失敗したら TerminateProcess するのが windows としては正しいかと思います。\r\n","created_at":1455174625},{"id":182742431,"issue_id":820,"user_id":840186,"body":"> 少し前のパッチで、Unixではプロセスグループをまとめてkillするようになりましたが、Windowsでも同様な機能が必要ですね。\r\n\r\nこれを実現するにはJob Objectが必要かなと。","created_at":1455174786},{"id":182742472,"issue_id":820,"user_id":142094,"body":"CTRL-BREAK は効きます > test_channel.py\r\nしかし job_stop(h, 'hup') は効かないですね。\r\nちなみに job_stop() (から呼ばれる GenerateConsoleCtrlEvent) は gvim では常に失敗してるみたいです。","created_at":1455174791},{"id":182742720,"issue_id":820,"user_id":10111,"body":"うひ","created_at":1455174824},{"id":182743722,"issue_id":820,"user_id":468368,"body":"https://msdn.microsoft.com/en-us/library/windows/desktop/ms682541(v=vs.85).aspx\r\n\r\nCTRL-C はSIGINTでpython側で上書いてそう。\r\n対してCTRL-BREAK (SIGBREAK)は常に効くと。\r\n\r\nあとは Console Process Group 単位だから、\r\nコンソールのないgvimからだとうまく制御できないのかなぁ…?","created_at":1455174985},{"id":182744126,"issue_id":820,"user_id":840186,"body":"@mattn [これ](https://github.com/vim-jp/issues/issues/820#issuecomment-182632962)の確認もお願いします。\r\n\r\n> job_Tのメンバは、jv_プレフィックスがついていますが、jf_piだけjf_になっているのは何か理由がありますか？","created_at":1455175075},{"id":182744321,"issue_id":820,"user_id":10111,"body":"jf_pi なのは Bram が入れた時点でその名前だったからです。","created_at":1455175108},{"id":182744938,"issue_id":820,"user_id":10111,"body":"個人的には、SIGBREAK してダメなら TerminateProcess がいいんじゃないかと思います。\r\n","created_at":1455175225},{"id":182745453,"issue_id":820,"user_id":10111,"body":"あと UNIX 側ですが、waitpid しないとゾンビになりそうな気がします。","created_at":1455175395},{"id":182745776,"issue_id":820,"user_id":840186,"body":"> jf_pi なのは Bram が入れた時点でその名前だったからです。\r\n\r\nおっと、mattnさんが入れたものだと勘違いしていました。","created_at":1455175441},{"id":182746518,"issue_id":820,"user_id":10111,"body":">個人的には、SIGBREAK してダメなら TerminateProcess がいいんじゃないかと思います。\r\n\r\nそれか、効くかどうか分かりませんが cmd /c PROCESS に対して CTRL-C もしくは CTRL-BREAK なら GUI からも効くかもしれないです。確認してませんが。\r\n","created_at":1455175569},{"id":182747003,"issue_id":820,"user_id":10111,"body":"ただその場合、ダメだった場合の TerminateProcess すると cmd のみ死にますが....","created_at":1455175670},{"id":182748726,"issue_id":820,"user_id":142094,"body":"簡単なプログラムで試してみましたが job_stop() でシグナル発生しないですね。vim.exe でも gvim.exe でも。","created_at":1455176115},{"id":182749320,"issue_id":820,"user_id":840186,"body":"jf_pi だけprefixが違う件は質問投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/_SbMTGshzVc/rF5nSBwbDgAJ","created_at":1455176187},{"id":182749753,"issue_id":820,"user_id":10111,"body":"f と v、キー近いから typo かもですね。","created_at":1455176255},{"id":182749991,"issue_id":820,"user_id":10111,"body":"GUI だと配列渡しでクラッシュしますね。僕がパッチ書いた時には配列サポートしてなかったのでなんかデグったか？","created_at":1455176303},{"id":182755968,"issue_id":820,"user_id":10111,"body":"んー。処理はこれと同じなんだけどな。。。\r\nhttps://github.com/mattn/batter/blob/master/batter.c","created_at":1455177622},{"id":182756554,"issue_id":820,"user_id":10111,"body":"確かにGUIだと死なないすね。","created_at":1455177706},{"id":182757437,"issue_id":820,"user_id":10111,"body":"あー処理違うわ。 batter と。0 で投げないといけない。\r\n","created_at":1455177947},{"id":182757476,"issue_id":820,"user_id":10111,"body":"だとすると他のプロセス巻き込むのでまずいな。","created_at":1455177966},{"id":182757631,"issue_id":820,"user_id":10111,"body":"あとで直してパッチ送ります。","created_at":1455178056},{"id":182759725,"issue_id":820,"user_id":840186,"body":"現状のコードだと、\"hup\" のみ CTRL_BREAK_EVENT を送っていますが、\"term\" （およびデフォルト）でも CTRL_BREAK_EVENT がいいんじゃないですか。","created_at":1455178828},{"id":182760064,"issue_id":820,"user_id":840186,"body":"で、mattnさんが直して job_stop がちゃんと効くようになると、今度は https://github.com/vim-jp/issues/issues/819#issuecomment-182639801 の問題がAppVeyor上でも発生することになると予想されます。","created_at":1455178958},{"id":182760081,"issue_id":820,"user_id":10111,"body":"たしか cat とかだと CTRL_BREAK で死ななかった気がするんです。要確認。","created_at":1455178960},{"id":182760428,"issue_id":820,"user_id":10111,"body":"んー、直せるか分からないですが windows だと kill をデフォルトにした方が良さそう。","created_at":1455179078},{"id":182761429,"issue_id":820,"user_id":142094,"body":"> windows だと kill をデフォルトにした方が良さそう。\r\n\r\nそうですね。windows でシグナルはうまくいかないにおいがします。","created_at":1455179381},{"id":182762310,"issue_id":820,"user_id":10111,"body":"まぁ、うまく行かないのはだいだい想定してたのですけどね。。。\r\n\r\nhttp://github.com/mattn/goreman\r\n\r\nでもそうでしたし、あと golang のシグナル周りの移植の時も結局断念した記憶が。。。","created_at":1455179525},{"id":182763954,"issue_id":820,"user_id":840186,"body":"課題は子プロセスを生成したときですね。\r\npython.exe の代わりに py.exe を使ったときとか。","created_at":1455179689},{"id":182781844,"issue_id":820,"user_id":142094,"body":"なるほどそれで JobObject...\r\nJobObject 試したらたしかに子プロセスも terminate できました。","created_at":1455183352},{"id":182784796,"issue_id":820,"user_id":142094,"body":"py.exe のときは TerminateProcess() でも両方 terminate できました。\r\n`cmd /c py a.py` は TerminateProcess() で cmd をころしても py.exe と python.exe が残ります。\r\nTerminateJobObject() は両方 OK。","created_at":1455183934},{"id":182795171,"issue_id":820,"user_id":10111,"body":"ほう。あざます。あとでパッチ書きます。\r\n\r\nOn 2/11/16, Yukihiro Nakadaira <notifications@github.com> wrote:\r\n> py.exe のときは TerminateProcess() でも両方 terminate できました。\r\n> `cmd /c py a.py` は TerminateProcess() で cmd をころしても py.exe と python.exe\r\n> が残ります。\r\n> TerminateJobObject() は両方 OK。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/820#issuecomment-182784796\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1455186447},{"id":182816299,"issue_id":820,"user_id":840186,"body":"パッチ書く際、上で書いたリソースリークの件も確認していただけませんか。\r\n問題ないようならまとめて出していただけるとよいです。別々にするとコンフリクトしそうですので。","created_at":1455190162},{"id":182816333,"issue_id":820,"user_id":10111,"body":"@k-takata TerminateJobObject の呼び出し部で k-takata さんのパッチ部分と被る部分があるんですが、修正取り込んでしまっていいですか？(提出時に...\r\n\r\nまで書いてました。w","created_at":1455190175},{"id":182816463,"issue_id":820,"user_id":10111,"body":"thank k-takata コメント付きで出しておきます。","created_at":1455190216},{"id":182816754,"issue_id":820,"user_id":10111,"body":"それより問題はシグナルの方か","created_at":1455190275},{"id":182825242,"issue_id":820,"user_id":840186,"body":"> jf_pi だけprefixが違う件は質問投げました。\r\n\r\nただのtypoでした。 7.4.1302\r\nhttps://groups.google.com/d/msg/vim_dev/neLzl5rTukQ/cRcV7AApDgAJ","created_at":1455191530},{"id":182827849,"issue_id":820,"user_id":10111,"body":"http://www.host.or.jp/cgi-win/webboard/wb_cont.exe?programing+g+4953+NAME\r\n\r\nGUI では GenerateConsoleCtrlEvent は使えないとのこと。","created_at":1455192207},{"id":182831459,"issue_id":820,"user_id":840186,"body":"> GUI では GenerateConsoleCtrlEvent は使えないとのこと。\r\n\r\nなんてこった。もしかしてそうかもという気はしていましたが、ちゃんとMSDNに明記してくれよと。\r\nvimrun.exe を使ってどうにかするという手もあるのでしょうが、めんどくさいですねｗ","created_at":1455192800},{"id":182836213,"issue_id":820,"user_id":10111,"body":"あ、いい方法思い浮かんだ。AttachConsole で子プロセスにアタッチして GenerateConsoleCtrlEvent の第2引数を 0 にして投げてやればいけるかも。\r\n","created_at":1455193631},{"id":182836514,"issue_id":820,"user_id":10111,"body":"ところで py.exe、msys2 だと標準で入らないぽい。","created_at":1455193733},{"id":182843091,"issue_id":820,"user_id":10111,"body":"あー、CREATE_NEW_CONSOLE してると有効な方法だったけど、そうじゃない場合は vim ごと死ぬー。","created_at":1455194492},{"id":182863326,"issue_id":820,"user_id":142094,"body":"> patch:\r\n> https://gist.github.com/ichizok/3939b94ab9eccff9d349#file-os_unix-c-patch-L17-L40\r\n> getpgid()  で子プロセスのプロセスグループを確認する。\r\n\r\nmch_job_start() 内で同期を取ったほうがよさげかなと思いました。","created_at":1455197500},{"id":182868627,"issue_id":820,"user_id":10111,"body":"皆さんにアンケートなのですが、GUI アプリケーションを job_start した場合、ウィンドウって表示されて欲しいですか？","created_at":1455197949},{"id":182872150,"issue_id":820,"user_id":468368,"body":"(ほんとは欲しく)無いです。\r\n\r\nコマンドプロンプトウィンドウが無いと止められなくなるって制約が付いちゃうんでしたっけ…\r\nそれはそれで困るんですが","created_at":1455198434},{"id":182874885,"issue_id":820,"user_id":10111,"body":"CREATE_NEW_CONSOLE して SW_HIDE するならコンソールアプリ止めれる事が分かりました。\r\nGUI アプリが非表示で良いなら完成形が見えてきました。","created_at":1455198856},{"id":182875648,"issue_id":820,"user_id":10111,"body":"https://gist.github.com/mattn/ac62af90454c084a1180\r\n\r\n@k-takata さんのと @ynkdir さんのをマージした上で、GUI 非表示ながら int とか hup で殺せるようになりました。\r\n","created_at":1455199067},{"id":182875757,"issue_id":820,"user_id":10111,"body":"WinMain の nShowWindow に従わないアプリは表示されると思いますが。","created_at":1455199098},{"id":182875783,"issue_id":820,"user_id":840186,"body":"GUIアプリをjob controlの管理下にしたい場合ってどういう場合がありますかね。\r\n普通に起動するだけなら、`:!start` を使えばいいわけですし。","created_at":1455199104},{"id":182876359,"issue_id":820,"user_id":840186,"body":"ichizokさんの間違い？","created_at":1455199201},{"id":182876474,"issue_id":820,"user_id":10111,"body":"あ、でした。すいません。","created_at":1455199227},{"id":182877293,"issue_id":820,"user_id":840186,"body":"> 現状のコードだと、\"hup\" のみ CTRL_BREAK_EVENT を送っていますが、\"term\" （およびデフォルト）でも CTRL_BREAK_EVENT がいいんじゃないですか。\r\n\r\nこれはどうします？","created_at":1455199443},{"id":182877647,"issue_id":820,"user_id":10111,"body":"> これはどうします？\r\n\r\nそうですね。修正します。\r\n\r\nところで sleep とか cat だとうまく行ったのですが、python.exe だとダメですね。つらい。","created_at":1455199536},{"id":182891388,"issue_id":820,"user_id":10111,"body":"よし！行けた！\r\n\r\nhttps://gist.github.com/mattn/ac62af90454c084a1180\r\n\r\n罠だ！ SetConsoleCtrlHandler(NULL, TRUE) が無効にするのは CTRL-C だけだw","created_at":1455201508},{"id":182891591,"issue_id":820,"user_id":10111,"body":"よろしければ確認お願いします。","created_at":1455201554},{"id":182891901,"issue_id":820,"user_id":10111,"body":"あ、あとで term 足しておきます。","created_at":1455201617},{"id":182894309,"issue_id":820,"user_id":840186,"body":"これは一体…\r\n\r\n```\r\nC:\\work\\vim-msvc\\src\\testdir>nmake -f Make_dos.mak VIMPROG=..\\gvim test_channel.res\r\n\r\nMicrosoft (R) Program Maintenance Utility Version 10.00.40219.01\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n        ..\\gvim -u NONE -U NONE -S runtest.vim test_channel.vim\r\nNMAKE : fatal error U1077: '..\\gvim.EXE' : return code '0xc000013a'\r\nStop.\r\n```","created_at":1455202049},{"id":182895036,"issue_id":820,"user_id":10111,"body":"それはこれから見ます\n\nOn 2/11/16, K.Takata <notifications@github.com> wrote:\n> これは一体…\n>\n> ```\n> C:\\work\\vim-msvc\\src\\testdir>nmake -f Make_dos.mak VIMPROG=..\\gvim\n> test_channel.res\n>\n> Microsoft (R) Program Maintenance Utility Version 10.00.40219.01\n> Copyright (C) Microsoft Corporation.  All rights reserved.\n>\n>         ..\\gvim -u NONE -U NONE -S runtest.vim test_channel.vim\n> NMAKE : fatal error U1077: '..\\gvim.EXE' : return code '0xc000013a'\n> Stop.\n> ```\n>\n> ---\n> Reply to this email directly or view it on GitHub:\n> https://github.com/vim-jp/issues/issues/820#issuecomment-182894309\n\n\n-- \n- Yasuhiro Matsumoto\n","created_at":1455202156},{"id":182895715,"issue_id":820,"user_id":10111,"body":"僕の環境だとこうなりました。\r\n```\r\nC:\\dev\\vim\\src\\testdir>nmake -f Make_dos.mak VIMPROG=..\\gvim test_channel.res\r\n\r\nMicrosoft(R) Program Maintenance Utility Version 14.00.23026.0\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n        if not exist dostmp\\NUL md dostmp\r\n        if exist dostmp\\test1.in del dostmp\\test1.in\r\n        ..\\gvim -u dos.vim -U NONE --noplugin \"+set ff=dos|f dostmp\\test1.in|wq\" test1.in\r\n        move test1.in test1.in.bak\r\n        1 個のファイルを移動しました。\r\n        copy dostmp\\test1.in test1.in\r\n        1 個のファイルをコピーしました。\r\n        copy test1.ok test.ok\r\n        1 個のファイルをコピーしました。\r\n        ..\\gvim -u dos.vim -U NONE --noplugin -s dotest.in test1.in\r\n        1 個のファイルを移動しました。\r\n        1 個のファイルを移動しました。\r\n        ..\\gvim -u dos.vim -U NONE --noplugin \"+set ff=unix|f test.out|wq\"  dostmp\\test1.out\r\n        1 個のファイルを移動しました。\r\n        ..\\gvim -u NONE -U NONE -S runtest.vim test_channel.vim\r\n```\r\n","created_at":1455202308},{"id":182896747,"issue_id":820,"user_id":943423,"body":"> mch_job_start() 内で同期を取ったほうがよさげかなと思いました。\r\n\r\n手堅くはありますが、問題の環境 (VM) だと `setsid()` 完了まで ~100ms 程度かかるので、その間ブロックしてしまうのは少し気になります。","created_at":1455202527},{"id":182896752,"issue_id":820,"user_id":840186,"body":"上のとはたぶん無関係ですが、AssignProcessToJobObject() の戻り値はちゃんと見た方がよさそう。","created_at":1455202529},{"id":182897036,"issue_id":820,"user_id":10111,"body":"@ichizok お手数ですが僕のパッチからの修正差分を貰えると助かります。ちょっと今linux準備出来そうにないので。","created_at":1455202584},{"id":182898182,"issue_id":820,"user_id":10111,"body":"@k-takata あざます。失敗したら TerminateProcess する様にしました。","created_at":1455202829},{"id":182898573,"issue_id":820,"user_id":840186,"body":"mch_free_job() で jv_jo を CloseHandle() すべきかと。","created_at":1455202878},{"id":182904915,"issue_id":820,"user_id":943423,"body":"> お手数ですが僕のパッチからの修正差分を貰えると助かります。\r\n\r\n@mattn すみません、修正差分とは？","created_at":1455203490},{"id":182905612,"issue_id":820,"user_id":10111,"body":"@ichizok 何かさらに修正が必要でしょうか？なければこのままとします。\r\n\r\n@k-takata なんですが、TerminateJobObject したあと CloseHandle してるコードが見つからなかったんですよね。。。一応入れときますか。","created_at":1455203550},{"id":182910285,"issue_id":820,"user_id":840186,"body":"AssignProcessToJobObject() に関して未確認ですが、気になる情報。\r\nhttp://glanada.asablo.jp/blog/2010/12/07/\r\n\r\n> WindowsVista以降では、起動されたプロセスは、PCA という名前（が最初につく）のJobに最初から所属している。\r\n> ...\r\n> ということで、マニフェストファイルを準備することになります。\r\n\r\nmanifestがない実行ファイルを実行すると、失敗するかも。\r\nそうだとすると、AssignProcessToJobObject() に失敗した場合はすぐに殺すのではなく、job_stop() で \"kill\" が指定された場合に、TerminateJobObject() の代わりに、TerminateProcess() するようにした方が安全かも。","created_at":1455203920},{"id":182910342,"issue_id":820,"user_id":943423,"body":"> 何かさらに修正が必要でしょうか？なければこのままとします。\r\n\r\n`reset_signals()` に関しては改めて調査検証したいので、私の分はこのままでOKです。","created_at":1455203923},{"id":182917455,"issue_id":820,"user_id":10111,"body":"@k-takata あざます。その修正を入れました。\r\n\r\n@ichizok 了解です。\r\n","created_at":1455204636},{"id":182917743,"issue_id":820,"user_id":840186,"body":"0xc000013a はよくわかりません。\r\n手で実行したら、job_stopでgvim.exeが終了してしまいました。","created_at":1455204697},{"id":182919346,"issue_id":820,"user_id":10111,"body":"パッチは最新でしょうか？","created_at":1455204951},{"id":182919641,"issue_id":820,"user_id":10111,"body":"ちなみに\r\n\r\n```\r\nnmake -f Make_dos.mak VIMPROG=..\\gvim test_channel.res\r\n```\r\nの期待結果ってなんですっけ。\r\n","created_at":1455205009},{"id":182922588,"issue_id":820,"user_id":840186,"body":"test_channel.res が生成されて、test.log が生成されないことです。","created_at":1455205399},{"id":182923672,"issue_id":820,"user_id":10111,"body":"test_channel.res は生成されていて test.log は生成されているのですが、test_channel.res が空っぽです。","created_at":1455205527},{"id":182927496,"issue_id":820,"user_id":840186,"body":"test_channel.res は空でOKです。test.log は失敗すると追記されていくので、test_channel.res と test.log を削除してから再実行してみて、test.log が生成されていなければOKです。","created_at":1455205875},{"id":182928050,"issue_id":820,"user_id":10111,"body":"test.log は出力されませんでした。","created_at":1455205919},{"id":182929244,"issue_id":820,"user_id":840186,"body":"最新パッチでダメですね。ちなみにWin10 64bit。","created_at":1455206024},{"id":182930667,"issue_id":820,"user_id":10111,"body":"ちなみにこれ、どう動くでしょうか？\r\n```vim\r\nfu! Test()\r\n  let job = job_start('python')\r\n  sleep 3\r\n  echo job_stop(job, \"hup\")\r\nendfunction\r\ncall Test()\r\n```\r\n","created_at":1455206142},{"id":182932747,"issue_id":820,"user_id":840186,"body":"3秒経ってVimが静かに終了します。","created_at":1455206329},{"id":182934414,"issue_id":820,"user_id":840186,"body":"> 現状のコードだと、\"hup\" のみ CTRL_BREAK_EVENT を送っていますが、\"term\" （およびデフォルト）でも CTRL_BREAK_EVENT がいいんじゃないですか。\r\n\r\nデフォルトの空文字列の場合も CTRL_BREAK_EVENT の方がよいと思います。","created_at":1455206502},{"id":182935512,"issue_id":820,"user_id":10111,"body":"一度 FreeConsole を抜いて実行してもらえないでしょうか？","created_at":1455206716},{"id":182939109,"issue_id":820,"user_id":10111,"body":"MSVCの環境があったので試してみます。","created_at":1455207272},{"id":182939424,"issue_id":820,"user_id":840186,"body":"落ちなくなったようです。\r\n\\# そろそろ寝ます。","created_at":1455207332},{"id":182944513,"issue_id":820,"user_id":10111,"body":"おやすみなさい。\r\n\r\nVisual Studio 2015 でビルドしてみましたが、FreeConsole ある状態でも正しく動作しました。また 0xc000013a も発生しませんでした。 win10 64bit","created_at":1455208217},{"id":183091590,"issue_id":820,"user_id":840186,"body":"FreeConsole を元に戻してから、GenerateConsoleCtrlEvent にプロセスIDを渡すようにしたところ、正しく動作するようになりました。","created_at":1455231190},{"id":183093005,"issue_id":820,"user_id":10111,"body":"ありがとうございます。\r\n後で試してみます。なんで違いがあるんだろう。ちなみに cmd の設定って変えてますか？旧バージョンを使う設定とか。\r\n\r\nOn 2/12/16, K.Takata <notifications@github.com> wrote:\r\n> FreeConsole を元に戻してから、GenerateConsoleCtrlEvent\r\n> にプロセスIDを渡すようにしたところ、正しく動作するようになりました。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/820#issuecomment-183091590\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1455231578},{"id":183095243,"issue_id":820,"user_id":840186,"body":"特に設定は変えていないです。\r\n修正前はタイミングの問題がありそうです。手で実行した場合は、たまにうまくいくときもありました。","created_at":1455232161},{"id":183101370,"issue_id":820,"user_id":142094,"body":"MEMO:\r\ntest_channel.py が CTRL-C で終了しないのはおそらく select() が EINTR で中断するかどうかの違い。","created_at":1455233271},{"id":183117711,"issue_id":820,"user_id":10111,"body":"そういえば機能 Make_mvc.mak でビルドした時に kernel32.lib が足されてないので CreateJobObject がリンクされないって問題がありました。そちらも後で足しておきます。","created_at":1455235092},{"id":183119188,"issue_id":820,"user_id":10111,"body":"@k-takata 期待通りに動きました。CREATE_NEW_PROCESS_GROUP なのでおそらく子プロセスがあっても大丈夫だと思います。今日1日触ってみて大丈夫そうなら送ります。\r\n","created_at":1455235588},{"id":183121573,"issue_id":820,"user_id":10111,"body":"あれ、環境変えてビルドしたら CreateJobObject リンク出来た。。。\r\n","created_at":1455236284},{"id":182639384,"issue_id":819,"user_id":518808,"body":"@k-takata :+1: \r\n\r\n6日ほど前にtwitterで呟いたやつです。\r\n> Vimのchannel-demoでサーバーから [\"ex\",\"echo 'foo'\"] や [\"ex\",\"colorscheme\"] を送ったら即表示更新されるのに、[\"ex\",\"set nu\"] や [\"ex\",\"set nu?\"] は更新されないのはなんでですか？\r\n\r\n> [\"redraw\",\"\"] を送れば更新されるけど違いが分からない。\r\n\r\n===\r\n再現方法: (`:h channel-demo` を見ればだいたい分かる)\r\n(1) 端末を開いてデモサーバーを起動。\r\n\r\n```bash\r\n$ python3 demoserver.py\r\n```\r\n(2) もう1つの端末でVimを起動してch_openする。\r\n```bash\r\n$ vim -Nu NONE\r\n```\r\n```vim\r\n:let handle = ch_open('localhost:8765')\r\n```\r\n(3) デモサーバーに以下の文字を入力してVimの画面表示を確認する。\r\n```\r\n[\"ex\",\"echo 'foo'\"]\r\n```\r\n→コマンドラインに`foo`と即表示される。\r\n```\r\n[\"ex\",\"colorscheme\"]\r\n```\r\n→コマンドラインに`default`と即表示される。\r\n```\r\n[\"ex\",\"set nu\"]\r\n```\r\n→表示更新されない。\r\n```\r\n[\"redraw\",\"\"]\r\n```\r\n→表示更新された。(1行目左側に`  1`が表示される)\r\n```\r\n[\"ex\",\"set nu?\"]\r\n```\r\n→表示更新されない。\r\n```\r\n[\"redraw\",\"\"]\r\n```\r\n→表示更新された。(コマンドラインに`  number`が表示される)\r\n\r\n===\r\n違いは何なのだろう。\r\n環境: Vim 7.4.1301 (Huge) on fedora via PuTTY","created_at":1455148243},{"id":182639801,"issue_id":819,"user_id":840186,"body":"Windowsで、`src/testdir/test_channel.vim` を実行すると、python.exe が残ったままになるという問題があるので、\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/2645f8ca45792207712f57fb5ff2d5fad41bdec3/fix-test_channel-vim-on-windows.patch?fileviewer=file-view-default\r\nを当ててみたところ、今度は、\r\n\r\n```\r\nFrom test_channel.vim:\r\nFound errors in Test_server_crash():\r\nfunction Test_server_crash[1]..<SNR>7_run_server line 38: 'Caught exception: Vim(sleep):E896: read from channel: The system cannot find the file specified.'\r\n```\r\n\r\nというログが残って、テストに失敗する問題が起きています。（Win32 GUIで確認。CUIは未確認。）","created_at":1455148322},{"id":182667812,"issue_id":819,"user_id":468368,"body":"> Windowsで、src/testdir/test_channel.vim を実行すると、python.exe が残ったままになる\r\n\r\nそれはどちらかというと job の問題では?","created_at":1455154168},{"id":182668102,"issue_id":819,"user_id":943423,"body":"*BSD だと test_channel.vim の `Test_connect_waittime()` で失敗します。\r\nFreeBSD 10.2, OpenBSD 5.8 で確認。\r\n\r\nNon-blocking socket が listen されてないローカルポートに `connect()` すると `ECONNREFUSED` エラーになります。\r\n\r\nBSD 以外 (Linux, OS X, Solaris で確認) だと `EWOULDBLOCK` や `EINPROGRESS` で「いったんエラーで戻って、connect 処理は継続する」という動作になるようですが...","created_at":1455154276},{"id":182671610,"issue_id":819,"user_id":840186,"body":"> それはどちらかというと job の問題では?\r\n\r\nそこは今は問題にしていません。上記のパッチにあるように、`job_stop()`に`\"kill\"`を指定すれば強制終了できます。\r\n\r\n```\r\nVim(sleep):E896: read from channel: The system cannot find the file specified.\r\n```\r\n\r\nが発生することを問題視しています。","created_at":1455156023},{"id":182680568,"issue_id":819,"user_id":468368,"body":"ああ、なるほど。","created_at":1455160195},{"id":182697426,"issue_id":819,"user_id":554281,"body":"> *BSD だと test_channel.vim の Test_connect_waittime() で失敗します。\r\n> FreeBSD 10.2, OpenBSD 5.8 で確認。\r\n> \r\n> Non-blocking socket が listen されてないローカルポートに connect() すると ECONNREFUSED エラーになります。\r\n> \r\n> BSD 以外 (Linux, OS X, Solaris で確認) だと EWOULDBLOCK や EINPROGRESS で「いったんエラーで戻って、connect 処理は継続する」という動作になるようですが...\r\n\r\nNetBSDでは, EINPROGRESSが返ってくるため, すべての *BSDというわけではないと思います. (Vimのテストが今ひとつよくわかっていませんが), NetBSDでテストを行ったところ, FreeBSDでテストしたときのように例外が上がるということはありませんでした(成功したのか失敗したのかもよくわかっていませんが, 以下のダンプが出るところまではテストは進んでいます)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/pkg/lib/python2.7/SocketServer.py\", line 599, in process_request_thread\r\n    self.finish_request(request, client_address)\r\n  File \"/usr/pkg/lib/python2.7/SocketServer.py\", line 334, in finish_request\r\n    self.RequestHandlerClass(request, client_address, self)\r\n  File \"/usr/pkg/lib/python2.7/SocketServer.py\", line 655, in __init__\r\n    self.handle()\r\n  File \"test_channel.py\", line 149, in handle\r\n    42 / 0\r\n```","created_at":1455164691},{"id":182734547,"issue_id":819,"user_id":943423,"body":"> NetBSDでは, EINPROGRESSが返ってくるため, すべての *BSDというわけではないと思います. \r\n\r\nDragonFlyBSD 4.4 も `EINPROGRESS` が返ることを確認しました。すみません ;\r\nこのコードで検証しています。\r\nhttps://gist.github.com/ichizok/04a7695a3a576f352c77","created_at":1455171598},{"id":183547869,"issue_id":819,"user_id":142094,"body":"Windows\r\nこれで落ちます。\r\n\r\n```vim\r\nfunction! F()\r\n  let h = job_start('py test_channel.py')\r\n  let port = []\r\n  while 1\r\n    try\r\n      let port = readfile('Xportnr')\r\n    catch\r\n    endtry\r\n    if len(port) >= 1\r\n      break\r\n    endif\r\n    sleep 200m\r\n  endwhile\r\n  call delete('Xportnr')\r\n  let c = ch_open('localhost:' . port[0])\r\n  call ch_sendexpr(c, 'hello!')\r\n  call job_stop(h)\r\nendfunction\r\n\r\nwhile 1\r\n  call F()\r\nendwhile\r\n```\r\n","created_at":1455324574},{"id":183560609,"issue_id":819,"user_id":10111,"body":"@ynkdir 再現しました。\r\n\r\n![](https://i.gyazo.com/d00e9c18eede42d4e2259e0f0110e41b.png)\r\n","created_at":1455329376},{"id":183656433,"issue_id":819,"user_id":142094,"body":"パッチ投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/EShklPqqY-8/Cs2aNADHDgAJ\r\n\r\nWM_NETBEANS の処理では throw しない。\r\nクラッシュ以外にも限らず全然関係ないコマンドでソケットエラーが飛ぶのはどうかというのもあります。\r\nエラーメッセージは表示されます。\r\nこれでエラーが出るときはたぶんスクリプトかサーバーに問題があるときだけなのでエラーメッセージは出たほうがいいでしょう。\r\nWM_NETBEANS があるけどデータはすでに read した後、という状況はエラーにはならないので WM_NETBEANS がメッセージキューに残る問題は問題なさげ。","created_at":1455365996},{"id":183674116,"issue_id":819,"user_id":10111,"body":":+1: ","created_at":1455372435},{"id":184688367,"issue_id":819,"user_id":840186,"body":"Win32 CUIで test_channel.vim がpassしません。\r\n\r\n```\r\nFrom test_channel.vim:\r\nFound errors in Test_channel_handler():\r\nfunction Test_channel_handler[2]..<SNR>3_run_server[36]..<SNR>3_channel_handler line 15: Expected 'we did call you' but got 'we called you'\r\nfunction Test_channel_handler[4]..<SNR>3_run_server[36]..<SNR>3_channel_handler line 15: Expected 'we did call you' but got 'we called you'\r\nFound errors in Test_close_handle():\r\nfunction Test_close_handle[1]..<SNR>3_run_server[36]..<SNR>3_close_handle line 4: Expected 'what?' but got ''\r\nFound errors in Test_communicate():\r\nfunction Test_communicate[1]..<SNR>3_run_server[36]..<SNR>3_communicate line 26: 's:responseHandle was not set'\r\nfunction Test_communicate[1]..<SNR>3_run_server[36]..<SNR>3_communicate line 30: Expected 'got it' but got ''\r\nfunction Test_communicate[1]..<SNR>3_run_server line 38: 'Caught exception: Vim(unlet):E108: No such variable: \"s:responseHandle\"'\r\nFound errors in Test_unlet_handle():\r\nfunction Test_unlet_handle[1]..<SNR>3_run_server[36]..<SNR>3_unlet_handle line 4: Expected 'what?' but got ''\r\n```\r\n\r\n詳細未確認。","created_at":1455630478},{"id":186497031,"issue_id":819,"user_id":840186,"body":"Win32 CUI 7.4.1362 でも変化なし。\r\n\r\n```\r\nFrom test_channel.vim:\r\nFound errors in Test_channel_handler():\r\nfunction Test_channel_handler[3]..<SNR>3_run_server[43]..<SNR>3_channel_handler line 15: Expected 'we did call you' but got 'we called you'\r\nfunction Test_channel_handler[5]..<SNR>3_run_server[43]..<SNR>3_channel_handler line 15: Expected 'we did call you' but got 'we called you'\r\nFound errors in Test_close_handle():\r\nfunction Test_close_handle[2]..<SNR>3_run_server[43]..<SNR>3_close_handle line 4: Expected 'what?' but got ''\r\nFound errors in Test_communicate():\r\nfunction Test_communicate[2]..<SNR>3_run_server[43]..<SNR>3_communicate line 26: 's:responseHandle was not set'\r\nfunction Test_communicate[2]..<SNR>3_run_server[43]..<SNR>3_communicate line 30: Expected 'got it' but got ''\r\nfunction Test_communicate[2]..<SNR>3_run_server line 45: 'Caught exception: Vim(unlet):E108: No such variable: \"s:responseHandle\"'\r\nFound errors in Test_unlet_handle():\r\nfunction Test_unlet_handle[2]..<SNR>3_run_server[43]..<SNR>3_unlet_handle line 4: Expected 'what?' but got ''\r\n```\r\n\r\nしかも、python.exeが大量に残ったままになっています。","created_at":1455938460},{"id":186497119,"issue_id":819,"user_id":840186,"body":"Win32 GUIでは特に問題なし。python.exeも残っていません。","created_at":1455938562},{"id":186502676,"issue_id":819,"user_id":10111,"body":"![](https://i.gyazo.com/1918a6c6249de80af0c1605bf5093682.png)\r\n\r\nうわー","created_at":1455941625},{"id":186504477,"issue_id":819,"user_id":10111,"body":"とりあえず、こうすれば python は残らない事が分かった。\r\n```diff\r\ndiff --git a/src/testdir/test_channel.py b/src/testdir/test_channel.py\r\nindex ec231e8..dc4a79f 100644\r\n--- a/src/testdir/test_channel.py\r\n+++ b/src/testdir/test_channel.py\r\n@@ -192,3 +192,8 @@ if __name__ == \"__main__\":\r\n \r\n     # Main thread terminates, but the server continues running\r\n     # until server.shutdown() is called.\r\n+    try:\r\n+      while server_thread.isAlive(): \r\n+        server_thread.join(1)\r\n+    except (KeyboardInterrupt, SystemExit):\r\n+      server.shutdown()\r\n```\r\n","created_at":1455943057},{"id":186504544,"issue_id":819,"user_id":10111,"body":"windows の場合は test_channel.py を起動している時は kill じゃないと殺せなかった。引数無しだと殺せた。\r\n","created_at":1455943095},{"id":186505199,"issue_id":819,"user_id":10111,"body":"threading 使ってるとプロセス残るのが分かったのでパッチ送付。","created_at":1455943370},{"id":186556178,"issue_id":819,"user_id":142094,"body":"windows vim.exe で `:sleep` でチャンネル読み込み発動してないです。","created_at":1455961111},{"id":186577103,"issue_id":819,"user_id":10111,"body":"あー。WaitForXX とか他の方法考えた方がいいすね。","created_at":1455968692},{"id":186577887,"issue_id":819,"user_id":10111,"body":"ん？ ex_sleep -> ui_delay ですが、GUI だと Sleep ですね。なんで GUI は成功するんだろう。","created_at":1455969607},{"id":186594869,"issue_id":819,"user_id":142094,"body":"ui_breakcheck() でメッセージループを回してるので\r\nなのでおそらくパイプを sleep で待つのは GUI でも動かないはずです","created_at":1455974537},{"id":186600224,"issue_id":819,"user_id":10111,"body":"んー。do_sleep のループの中で channel_handle_events してみたんですが\r\n```\r\nfunction Test_channel_handler[3]..<SNR>3_run_server line 45: 'Caught exception: Vim(call):E906: not an open channel'\r\nfunction Test_channel_handler[5]..<SNR>3_run_server line 45: 'Caught exception: Vim(call):E906: not an open channel'\r\n```\r\n","created_at":1455975832},{"id":186600414,"issue_id":819,"user_id":10111,"body":"現在のパッチです。\r\n\r\n```diff\r\ndiff --git a/src/ex_docmd.c b/src/ex_docmd.c\r\nindex 1321b7f..bce7eaa 100644\r\n--- a/src/ex_docmd.c\r\n+++ b/src/ex_docmd.c\r\n@@ -8910,6 +8910,10 @@ do_sleep(long msec)\r\n \t * may occur when running a test case. */\r\n \tparse_queued_messages();\r\n #endif\r\n+\r\n+#ifdef FEAT_CHANNEL\r\n+\tchannel_handle_events();\r\n+#endif\r\n     }\r\n }\r\n \r\ndiff --git a/src/testdir/runtest.vim b/src/testdir/runtest.vim\r\nindex 2d5e21c..3ea73ae 100644\r\n--- a/src/testdir/runtest.vim\r\n+++ b/src/testdir/runtest.vim\r\n@@ -93,6 +93,9 @@ redir @q\r\n silent function /^Test_\r\n redir END\r\n let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))\r\n+if argc() > 1\r\n+  let s:tests = filter(s:tests, 'v:val=~argv(1)')\r\n+endif\r\n \r\n \" Execute the tests in alphabetical order.\r\n for s:test in sort(s:tests)\r\ndiff --git a/src/testdir/test_channel.py b/src/testdir/test_channel.py\r\nindex ec231e8..c27b39e 100644\r\n--- a/src/testdir/test_channel.py\r\n+++ b/src/testdir/test_channel.py\r\n@@ -192,3 +192,8 @@ if __name__ == \"__main__\":\r\n \r\n     # Main thread terminates, but the server continues running\r\n     # until server.shutdown() is called.\r\n+    try:\r\n+      while server_thread.isAlive():\r\n+        server_thread.join(1)\r\n+    except (KeyboardInterrupt, SystemExit):\r\n+      server.shutdown()\r\n```\r\n","created_at":1455975861},{"id":186706766,"issue_id":819,"user_id":840186,"body":"7.4.1370\r\nhttps://groups.google.com/d/topic/vim_dev/FO8Le61YB7Y/discussion","created_at":1456013923},{"id":186802365,"issue_id":819,"user_id":142094,"body":"channel_handle_events() と parse_queued_messages() の呼ぶ順番。\r\n1/2 で channel_handle_events() が動かない。\r\n(CUI) channel_read() をいきなり呼ぶと WSAEWOULDBLOCK エラーでソケットを閉じてしまう。\r\n\r\nこれでいいかはわかりませんが\r\nいちおう動くと思います\r\n\r\n```diff\r\ndiff --git a/src/channel.c b/src/channel.c\r\nindex aa478f1..266b647 100644\r\n--- a/src/channel.c\r\n+++ b/src/channel.c\r\n@@ -1887,11 +1887,7 @@ channel_handle_events(void)\r\n {\r\n     channel_T\t*channel;\r\n     int\t\tpart;\r\n-    static int\tloop = 0;\r\n-\r\n-    /* Skip heavily polling */\r\n-    if (loop++ % 2)\r\n-\treturn;\r\n+    sock_T\tfd;\r\n \r\n     for (channel = first_channel; channel != NULL; channel = channel->ch_next)\r\n     {\r\n@@ -1907,7 +1903,11 @@ channel_handle_events(void)\r\n \tpart = PART_SOCK;\r\n #   endif\r\n #  endif\r\n-\tchannel_read(channel, part, \"channel_handle_events\");\r\n+\t{\r\n+\t    fd = channel->ch_part[part].ch_fd;\r\n+\t    if (fd != INVALID_FD && channel_wait(channel, fd, 0) == OK)\r\n+\t\tchannel_read(channel, part, \"channel_handle_events\");\r\n+\t}\r\n     }\r\n }\r\n # endif\r\ndiff --git a/src/ex_docmd.c b/src/ex_docmd.c\r\nindex 1321b7f..5b4c6ed 100644\r\n--- a/src/ex_docmd.c\r\n+++ b/src/ex_docmd.c\r\n@@ -8904,6 +8904,9 @@ do_sleep(long msec)\r\n     {\r\n \tui_delay(msec - done > 1000L ? 1000L : msec - done, TRUE);\r\n \tui_breakcheck();\r\n+#ifdef FEAT_CHANNEL\r\n+\tchannel_handle_events();\r\n+#endif\r\n #ifdef MESSAGE_QUEUE\r\n \t/* Process the netbeans and clientserver messages that may have been\r\n \t * received in the call to ui_breakcheck() when the GUI is in use. This\r\n```","created_at":1456053846},{"id":186803495,"issue_id":819,"user_id":10111,"body":"間引かないとカーソル移動が重たくなるんですよねー。つらい。\r\nありがとうございます。試してみます。(okそうならパッチ送付お願いします)","created_at":1456054200},{"id":186806373,"issue_id":819,"user_id":10111,"body":"んー。手元だとテスト通らないですね。\r\n\r\n```diff\r\ndiff --git a/src/channel.c b/src/channel.c\r\nindex aa478f1..4a20b9d 100644\r\n--- a/src/channel.c\r\n+++ b/src/channel.c\r\n@@ -1887,11 +1887,7 @@ channel_handle_events(void)\r\n {\r\n     channel_T\t*channel;\r\n     int\t\tpart;\r\n-    static int\tloop = 0;\r\n-\r\n-    /* Skip heavily polling */\r\n-    if (loop++ % 2)\r\n-\treturn;\r\n+    sock_T\tfd;\r\n \r\n     for (channel = first_channel; channel != NULL; channel = channel->ch_next)\r\n     {\r\n@@ -1907,7 +1903,9 @@ channel_handle_events(void)\r\n \tpart = PART_SOCK;\r\n #   endif\r\n #  endif\r\n-\tchannel_read(channel, part, \"channel_handle_events\");\r\n+\tfd = channel->ch_part[part].ch_fd;\r\n+\tif (fd != INVALID_FD && channel_wait(channel, fd, 0) == OK)\r\n+\t    channel_read(channel, part, \"channel_handle_events\");\r\n     }\r\n }\r\n # endif\r\ndiff --git a/src/ex_docmd.c b/src/ex_docmd.c\r\nindex 1321b7f..5b4c6ed 100644\r\n--- a/src/ex_docmd.c\r\n+++ b/src/ex_docmd.c\r\n@@ -8904,6 +8904,9 @@ do_sleep(long msec)\r\n     {\r\n \tui_delay(msec - done > 1000L ? 1000L : msec - done, TRUE);\r\n \tui_breakcheck();\r\n+#ifdef FEAT_CHANNEL\r\n+\tchannel_handle_events();\r\n+#endif\r\n #ifdef MESSAGE_QUEUE\r\n \t/* Process the netbeans and clientserver messages that may have been\r\n \t * received in the call to ui_breakcheck() when the GUI is in use. This\r\n```\r\n","created_at":1456054721},{"id":186808731,"issue_id":819,"user_id":142094,"body":"```\r\n+   {\r\n+       fd = channel->ch_part[part].ch_fd;\r\n+       if (fd != INVALID_FD && channel_wait(channel, fd, 0) == OK)\r\n+       channel_read(channel, part, \"channel_handle_events\");\r\n+   }\r\n```\r\n\r\nカッコが抜けてます。","created_at":1456055502},{"id":186809520,"issue_id":819,"user_id":142094,"body":"> 間引かないとカーソル移動が重たくなるんですよねー。つらい。\r\n\r\nなるほどー。むつかしい。","created_at":1456055828},{"id":186810112,"issue_id":819,"user_id":10111,"body":"おーほんとだw\r\n\r\nすいません。そしてテストパスしました。","created_at":1456056124},{"id":186815847,"issue_id":819,"user_id":10111,"body":"ちなみに channel_read の頭で channel_wait 相当をやってるので channel_read でもいいかなーと思うのですがどうでしょう。","created_at":1456057941},{"id":186815900,"issue_id":819,"user_id":10111,"body":"```diff\r\ndiff --git a/src/channel.c b/src/channel.c\r\nindex aa478f1..84356c9 100644\r\n--- a/src/channel.c\r\n+++ b/src/channel.c\r\n@@ -1582,7 +1582,7 @@ channel_wait(channel_T *channel, sock_T fd, int timeout)\r\n \t\t\t\t\t\t\t\t && nread > 0)\r\n \t\treturn OK;\r\n \t    diff = deadline - GetTickCount();\r\n-\t    if (diff < 0)\r\n+\t    if (diff <= 0)\r\n \t\tbreak;\r\n \t    /* Wait for 5 msec.\r\n \t     * TODO: increase the sleep time when looping more often */\r\n@@ -1887,11 +1887,7 @@ channel_handle_events(void)\r\n {\r\n     channel_T\t*channel;\r\n     int\t\tpart;\r\n-    static int\tloop = 0;\r\n-\r\n-    /* Skip heavily polling */\r\n-    if (loop++ % 2)\r\n-\treturn;\r\n+    sock_T\tfd;\r\n \r\n     for (channel = first_channel; channel != NULL; channel = channel->ch_next)\r\n     {\r\n@@ -1907,7 +1903,11 @@ channel_handle_events(void)\r\n \tpart = PART_SOCK;\r\n #   endif\r\n #  endif\r\n-\tchannel_read(channel, part, \"channel_handle_events\");\r\n+\t{\r\n+\t    fd = channel->ch_part[part].ch_fd;\r\n+\t    if (fd != INVALID_FD && channel_wait(channel, fd, 0) == OK)\r\n+\t\tchannel_read(channel, part, \"channel_handle_events\");\r\n+\t}\r\n     }\r\n }\r\n # endif\r\ndiff --git a/src/ex_docmd.c b/src/ex_docmd.c\r\nindex 1321b7f..5b4c6ed 100644\r\n--- a/src/ex_docmd.c\r\n+++ b/src/ex_docmd.c\r\n@@ -8904,6 +8904,9 @@ do_sleep(long msec)\r\n     {\r\n \tui_delay(msec - done > 1000L ? 1000L : msec - done, TRUE);\r\n \tui_breakcheck();\r\n+#ifdef FEAT_CHANNEL\r\n+\tchannel_handle_events();\r\n+#endif\r\n #ifdef MESSAGE_QUEUE\r\n \t/* Process the netbeans and clientserver messages that may have been\r\n \t * received in the call to ui_breakcheck() when the GUI is in use. This\r\n```\r\n\r\nこれで改善しました。","created_at":1456058012},{"id":186817495,"issue_id":819,"user_id":142094,"body":"channel_read() の中で channel_wait() が FAIL を返すとエラー扱いになってチャンネルが閉じられます。\r\nGUI でソケットの場合だけ特別扱いで入力がなくてもエラーにしないようになってます。","created_at":1456058740},{"id":186823075,"issue_id":819,"user_id":10111,"body":"https://github.com/mattn/vim-tail\r\n\r\nこれ使って編集しながらでも問題なく tail 出来るレベルになりました。:+1:\r\nパッチの送付よろしくお願いします。\r\n","created_at":1456061325},{"id":186832516,"issue_id":819,"user_id":142094,"body":"投げました\r\nhttps://groups.google.com/d/msg/vim_dev/ncRD_JnVaR4/MC4Vr7VDEQAJ","created_at":1456065204},{"id":186854760,"issue_id":819,"user_id":518808,"body":"そして取り込まれました:+1:\r\nPatch 7.4.1379\r\nhttps://groups.google.com/d/topic/vim_dev/NRhVGNPv3To/discussion","created_at":1456072287},{"id":188186762,"issue_id":819,"user_id":142094,"body":"Windows の実装は 7.4.1404 で WSAAsyncSelect() をやめて入力待ちのときに 100ms (適当) 毎にポーリングする形になりました。\r\nウェイト時間が問題になるようなら Overlapped I/O に切り替えるしかないと思います。\r\n\r\nCUI はあとは Test_exit_callback() が失敗してます。","created_at":1456310245},{"id":188188732,"issue_id":819,"user_id":10111,"body":"僕が投げたパッチだと即検知してたんですが、Bram が戻してしまったからですかね。\r\n10秒間隔でしかチェックされないので 10ms では到底検知出来ないすね。","created_at":1456310762},{"id":188189158,"issue_id":819,"user_id":10111,"body":"ちがうな。死ぬ継起が無いわ。","created_at":1456310880},{"id":188192472,"issue_id":819,"user_id":10111,"body":"あれ、でもGUIだとパスする","created_at":1456311604},{"id":188195781,"issue_id":819,"user_id":10111,"body":"これで通る様ですね。\r\n```diff\r\ndiff --git a/src/testdir/test_channel.vim b/src/testdir/test_channel.vim\r\nindex 69922b1..d328742 100644\r\n--- a/src/testdir/test_channel.vim\r\n+++ b/src/testdir/test_channel.vim\r\n@@ -483,6 +483,8 @@ func Test_exit_callback()\r\n   if has('job')\r\n     call s:run_server('s:test_exit_callback')\r\n \r\n+    sleep 1\r\n+    call job_stop(s:exit_job, \"kill\")\r\n     \" the job may take a little while to exit\r\n     sleep 50m\r\n \r\n```\r\n","created_at":1456312018},{"id":188197906,"issue_id":819,"user_id":10111,"body":"https://groups.google.com/forum/#!topic/vim_dev/JhaQGrrOTnk","created_at":1456312336},{"id":188208723,"issue_id":819,"user_id":142094,"body":"CUI だと job_stop(job, 'hup') が効かないのか。\r\nAttachConsole() が失敗している。","created_at":1456313457},{"id":188213599,"issue_id":819,"user_id":142094,"body":"こんなんどうですか。\r\nVim と同じコンソールで動くとまずいんでしたっけ。\r\n\r\n```diff\r\ndiff --git a/src/os_win32.c b/src/os_win32.c\r\nindex e93e6d0..89921e0 100644\r\n--- a/src/os_win32.c\r\n+++ b/src/os_win32.c\r\n@@ -5071,8 +5071,10 @@ mch_start_job(char *cmd, job_T *job, jobopt_T *options)\r\n     if (!vim_create_process(cmd, TRUE,\r\n \t    CREATE_SUSPENDED |\r\n \t    CREATE_DEFAULT_ERROR_MODE |\r\n-\t    CREATE_NEW_PROCESS_GROUP |\r\n-\t    CREATE_NEW_CONSOLE,\r\n+#ifdef FEAT_GUI_W32\r\n+\t    CREATE_NEW_CONSOLE |\r\n+#endif\r\n+\t    CREATE_NEW_PROCESS_GROUP,\r\n \t    &si, &pi))\r\n     {\r\n \tCloseHandle(jo);\r\n@@ -5152,13 +5154,17 @@ mch_stop_job(job_T *job, char_u *how)\r\n \t    return TerminateProcess(job->jv_proc_info.hProcess, 0) ? OK : FAIL;\r\n     }\r\n \r\n+#ifdef FEAT_GUI_W32\r\n     if (!AttachConsole(job->jv_proc_info.dwProcessId))\r\n \treturn FAIL;\r\n+#endif\r\n     ret = GenerateConsoleCtrlEvent(\r\n \t    ctrl_c ? CTRL_C_EVENT : CTRL_BREAK_EVENT,\r\n \t    job->jv_proc_info.dwProcessId)\r\n \t? OK : FAIL;\r\n+#ifdef FEAT_GUI_W32\r\n     FreeConsole();\r\n+#endif\r\n     return ret;\r\n }\r\n```","created_at":1456313954},{"id":188233782,"issue_id":819,"user_id":840186,"body":"7.4.1370 以降もpython.exeが大量に残ったままになる現象が起きていてなぜだろうと思っていましたが、なるほどそういうことでしたか。\r\n\r\n> Vim と同じコンソールで動くとまずいんでしたっけ。\r\n\r\n問題ないのではないでしょうか。","created_at":1456317674},{"id":188243070,"issue_id":819,"user_id":142094,"body":"投げてみました。","created_at":1456318306},{"id":188245743,"issue_id":819,"user_id":142094,"body":"じつは CreateProcess() に CREATE_NO_WINDOW つけても大丈夫ぽい","created_at":1456318586},{"id":188252881,"issue_id":819,"user_id":142094,"body":"> じつは CreateProcess() に CREATE_NO_WINDOW つけても大丈夫ぽい\r\n\r\nうそでした。GUI は OK で CUI は job_stop() が効かなくなる。","created_at":1456320238},{"id":188262158,"issue_id":819,"user_id":142094,"body":"つまり GUI のときだけ CREATE_NO_WINDOW をつければ SW_HIDE がいらなくなる\r\nいつかウィンドウ付きのジョブを動かしたいとう話が出たら\r\n\r\nちなみに CUI で CREATE_NO_WINDOW をつけると子プロセスでは GetConsoleWindow() が NULL を返すのでコンソールの関連付けが外れるみたいです。","created_at":1456321666},{"id":188320949,"issue_id":819,"user_id":142094,"body":"ジョブのコンソールを別に表示する機能も入れたいらしいです。\r\nたぶんソケットで通信しつつデバッグ出力だしたりとか。\r\n\r\nまあどうしても CTRL コードでないといけないわけでもないと思うので kill でもいいのか。\r\n\r\nやるとしたら CTRL コード送信用のヘルパー exe を用意するとかですかね。\r\n\r\nFreeConsole() -> AttachProcess(child) -> FreeConsole() -> AttachConsole(parent) を試してみましたが vim.exe を直接起動してるとダメでした。コンソール維持用の子プロセスを一時的に立ち上げればいけるかも……。","created_at":1456329816},{"id":188492843,"issue_id":819,"user_id":840186,"body":"> やるとしたら CTRL コード送信用のヘルパー exe を用意するとかですかね。\r\n\r\nもしその方法で行くのであれば、すでにvimrun.exeがあるのでそれを改造するのがよさそうです。","created_at":1456353694},{"id":188493261,"issue_id":819,"user_id":840186,"body":"ま、Windows版は kill をデフォルトにするのが簡単でよさそうな気がしますが。","created_at":1456353794},{"id":188503923,"issue_id":819,"user_id":142094,"body":"> ま、Windows版は kill をデフォルトにするのが簡単でよさそうな気がしますが。\r\n\r\nそうですね。\r\nふつうに止めたい場合は stop コマンドかなんかを送って終了させるのが手順だと思うので job_stop() は kill がデフォルトがいいと思います。","created_at":1456355287},{"id":188528438,"issue_id":819,"user_id":10111,"body":"僕もいいと思います。違う止め方がしたい場合に選択しがあるだけで十分ですし。","created_at":1456358925},{"id":188649701,"issue_id":819,"user_id":840186,"body":"https://groups.google.com/d/msg/vim_dev/JhaQGrrOTnk/4HiUCHxmEgAJ\r\n> I prefer to include nakadaira's patch and set kill as default.\r\n\r\nおや、ynkdirさんのパッチを入れずに、killをデフォルトにするという話だと思っていましたが。","created_at":1456385168},{"id":188814663,"issue_id":819,"user_id":840186,"body":"killをデフォルトにするパッチを送付。\r\nhttps://groups.google.com/d/msg/vim_dev/JhaQGrrOTnk/qmMx1F1-EgAJ","created_at":1456411335},{"id":189006343,"issue_id":819,"user_id":840186,"body":"7.4.1418\r\nhttps://groups.google.com/d/topic/vim_dev/8crcKJoFqAQ/discussion\r\n大幅に書き換わったにもかかわらず名前が入ったｗ","created_at":1456437944},{"id":189269489,"issue_id":819,"user_id":943423,"body":"気になる点\r\n\r\n1) https://github.com/vim/vim/blob/4cafa6d/src/channel.c#L679 (on OS X)\r\n\r\nここ、`FD_ISSET(sd, &rfds) && FD_ISSET(sd, &wfds)` が成立するときは `ret == 2` なので、\r\nこの if ブロックに入ることはありません。\r\nしかし、 `ret == 0` を消すと listen されていないローカルポートに接続しようとした時に\r\nif ブロックに入って return NULL する（他の環境のように waittime を待たない）ので、`Test_open_delay()` が失敗します。\r\n\r\n2) https://github.com/vim/vim/blob/4cafa6d/src/channel.c#L681\r\n\r\nそもそも、この挙動 (error が発生したら readable & writeable になる) は OS X だけのことではなく、\r\n4.4BSD の実装が由来らしい\r\n(https://books.google.co.jp/books?id=ptSC4LpwGA0C&pg=PA449&lpg=PA449&dq=tcp+socket+writable+on+error&source=bl&ots=Kr5DRiimUu&sig=LPaFAJzjQUN4Cmhp-VCLsvVmApM&hl=en&sa=X&ei=EYLcUM3wO9HW0gGb44GABw&redir_esc=y#v=onepage&q=tcp%20socket%20writable%20on%20error&f=false\r\nTCP/IP illustrated vol.2 を参照している記述があったのですが、箇所を失念しました)\r\n\r\n実際、各種 Unix 系環境 (*) で同じ動作 (connection-refused &rarr; readable & writeable) を確認しました。\r\nただし逆 (readable & writeable &rarr; error) は成立しないので、`getsockopt` でエラーチェックする必要があります。\r\n\r\n*) Ubuntu 14.04/15.10, CentOS 7, FreeBSD 10.2, NetBSD 6, OpenBSD, DragonFlyBSD, OpenIndiana\r\n\r\n3) 以上を踏まえた patch\r\n\r\nhttps://gist.github.com/ichizok/e68a5b850df8362a0dbb\r\n\r\n* Win32 では `FD_ISSET(sd, &rfds) && FD_ISSET(sd, &wfds)` のチェックを除外しているが、実際必要ないのか？\r\n* 全環境で `rfds` を追加したが、&uarr; チェック不要とすると Win32 は除外すべきか？","created_at":1456492800},{"id":189296046,"issue_id":819,"user_id":10111,"body":"WIN32 の場合で、EINPROGRESS は WSAEINPROGRESS で #define したほうがいいです。channel.c の冒頭でやってると思います。","created_at":1456495962},{"id":189314495,"issue_id":819,"user_id":943423,"body":"@mattn \r\n> WIN32 の場合で、EINPROGRESS は WSAEINPROGRESS で #define したほうがいいです。\r\n\r\nそうするとして、Win32 でも `FD_ISSET(sd, &rfds) && FD_ISSET(sd, &wfds)` + `getsockopt (SO_ERROR)` をチェックするということでいいですか？","created_at":1456498846},{"id":189550625,"issue_id":819,"user_id":10111,"body":"した方がいいと思います。","created_at":1456537296},{"id":189600770,"issue_id":819,"user_id":943423,"body":"https://gist.github.com/ichizok/e68a5b850df8362a0dbb\r\nアップデートしました。","created_at":1456558761},{"id":189839758,"issue_id":819,"user_id":943423,"body":"https://groups.google.com/forum/#!topic/vim_dev/E1cMiR4-iGk\r\n報告しました。","created_at":1456657152},{"id":189841159,"issue_id":819,"user_id":10111,"body":":+1: ","created_at":1456657594},{"id":190075183,"issue_id":819,"user_id":943423,"body":"7.4.1457\r\nhttps://groups.google.com/forum/#!topic/vim_dev/KrIVNfHlJcg\r\n7.4.1459\r\nhttps://groups.google.com/forum/#!topic/vim_dev/awXLbuhOZds\r\n\r\n`typedef int socklen_t;` ではダメですかね？","created_at":1456731080},{"id":190087720,"issue_id":819,"user_id":10111,"body":"引数が int なのでどちみちキャストが必要になるので define の方がいいかもしれません。\r\n\r\nhttps://msdn.microsoft.com/ja-jp/library/windows/desktop/ms740476(v=vs.85).aspx","created_at":1456733466},{"id":190099855,"issue_id":819,"user_id":840186,"body":"> 引数が int なのでどちみちキャストが必要になるので\r\n\r\ntypedefしても実体が同じなので、特にwarningとかは出ないようです。\r\nただ、`getsockopt()` の第4引数が、`void *`ではなく`char *`なので、`&so_error`をそのまま渡すと、warningが出てしまいます。`(void *)&so_error`にしておけばよさそうです。","created_at":1456734684},{"id":190176954,"issue_id":819,"user_id":840186,"body":"投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/awXLbuhOZds/rl5ziGGvEwAJ","created_at":1456746642},{"id":190846547,"issue_id":819,"user_id":943423,"body":"https://github.com/vim/vim/blob/10b369f/src/channel.c#L656\r\n`connect()` が成功した場合 (`ret == 0`) 、それ以降の if-block に入らないので、接続できているのに while ループを出ません。\r\n\r\nFreeBSD/OpenBSD ではローカルの listening port への `connect()` は成功する一方、listening してない port の場合は `ECONNREFUSED` エラーになり、`select()` 後の `getsockopt()` はエラーを報告しません (というか `ECONNREFUSED` だと `select()` 呼んでも意味ないのでは) 。\r\nそのため、FreeBSD/OpenBSD ではローカルホストへの socket channel が利用出来ず、テストが通りません。\r\n\r\nパッチ:\r\nhttps://gist.github.com/ichizok/72beca23d8f505723c52\r\n","created_at":1456857634},{"id":191530834,"issue_id":819,"user_id":10111,"body":"Windows で ch_open がエラーを返すようになったみたい","created_at":1456968945},{"id":191532075,"issue_id":819,"user_id":10111,"body":"あ、すいません。確認間違い。","created_at":1456969051},{"id":191875179,"issue_id":819,"user_id":943423,"body":"https://github.com/vim/vim/blob/da94fdf/src/channel.c#L763-L775\r\nここ、`mch_delay()` の前に `waittime` を減らさないと余分に sleep してしまうのでは","created_at":1457026285},{"id":193126936,"issue_id":819,"user_id":10111,"body":"io-file の windows 実装。テストパスしてるのでそのまま出します。\r\nhttps://gist.github.com/mattn/e615c6d8a79faf8ba010","created_at":1457333187},{"id":193131063,"issue_id":819,"user_id":840186,"body":"`CreateFileW` 使うべきでは？","created_at":1457333567},{"id":193131217,"issue_id":819,"user_id":10111,"body":"出しときます","created_at":1457333703},{"id":193134649,"issue_id":819,"user_id":840186,"body":"成功時に`wn`がリークしている気がします。\r\nあと、WideからANSIにフォールバックするのは、`GetLastError() == ERROR_CALL_NOT_IMPLEMENTED`の時だけ（=Win9xの時だけ）にしたほうがよいです。","created_at":1457335257},{"id":193135614,"issue_id":819,"user_id":10111,"body":"9X ってまだサポートするんでしたっけ(わすれ...","created_at":1457335594},{"id":193136207,"issue_id":819,"user_id":10111,"body":"この ERROR_CALL_NOT_IMPLEMENTED が返るケースってなんなんでしょう？\r\nwide char をサポートしていないのに enc_to_utf16(fname, NULL) が != NULL を返すケースが良く分からなくて。","created_at":1457335804},{"id":193138776,"issue_id":819,"user_id":840186,"body":"> 9X ってまだサポートするんでしたっけ(わすれ...\r\n\r\nWinXP以降しかサポートしないという割には、最近もメモリサイズ取得APIで新旧API対応していたり、なんか曖昧ですね。\r\n\r\n> この ERROR_CALL_NOT_IMPLEMENTED が返るケースってなんなんでしょう？\r\n\r\n`enc_to_utf16()`自体は、Win9xでも動く（すなわち != NULLを返しうる）はずだったと思います。","created_at":1457336413},{"id":193140306,"issue_id":819,"user_id":10111,"body":"なるほど。更新しました。","created_at":1457336935},{"id":193140403,"issue_id":819,"user_id":840186,"body":"```diff\r\n+\t\tif (ifd[0] == INVALID_HANDLE_VALUE\r\n+\t\t\t&& GetLastError() == ERROR_CALL_NOT_IMPLEMENTED)\r\n+\t\t    wn = NULL;\r\n```\r\n\r\nWin9xを完全無視するなら、この行は不要になってちょっとすっきりするんですがねぇ。\r\nさらに、`FEAT_MBYTE`が常に有効になれば、ANSI APIを削除できるのに…。","created_at":1457336974},{"id":194235605,"issue_id":819,"user_id":840186,"body":"https://groups.google.com/d/msg/vim_dev/tvY2eX1CJ9A/yM5YbdxsFgAJ\r\n> The plan is to remove the old code after the\r\n> 7.5 release, so that Win 9x users can use 7.5 as the last one that works\r\n> for them.\r\n\r\nWin9x向けのコード削除は 7.5 のリリースの後だそうです。（少なくともvim.exeは 7.4.852 で既にWin9xでは動かなくなってしまっていますけどねｗ）","created_at":1457520261},{"id":194316275,"issue_id":819,"user_id":468368,"body":"\\# 7.5 いつ出すんだろう (ﾟＡﾟ;)ｺﾞｸﾘ","created_at":1457533415},{"id":194323170,"issue_id":819,"user_id":840186,"body":"> The 7.5 release is still at least a month away.  The new features need\r\n> to settle down and there are still quite a few patches to include. \r\n\r\n少なくとも1か月は先だそうですが、いつになりますかね。\r\n新機能が落ち着く必要があるのと、取り込まなければならないパッチがかなり多数あるとのことですが。","created_at":1457534405},{"id":180403593,"issue_id":816,"user_id":10111,"body":"増えるの新しい","created_at":1454686440},{"id":180098969,"issue_id":815,"user_id":943423,"body":"https://github.com/vim/vim/blob/4b6a6dc/src/option.c#3784\r\n\r\nここで `scroll` のデフォルト値 (`options[*].def_val[VI_DEFAULT]`) が `Rows >> 1` に設定されます。\r\nこの値がウインドウによらずプロセス中固定値になることが原因です。\r\n\r\nhttps://github.com/vim/vim/blob/4b6a6dc/src/option.c#4556\r\n\r\n`set scroll&` すると上記の値が設定されますが、\r\n\r\nhttps://github.com/vim/vim/blob/4b6a6dc/src/option.c#8843\r\n\r\nここで検証され `curwin->w_height` より大きい場合はエラーになります。\r\n\r\nまた、(端末サイズを変更するなどして) Vim の表示行数を減らした場合も `scroll` のデフォルト値は変わらないため、この状態ではウインドウ分割なしでも `set scroll&` はエラーになります。","created_at":1454628062},{"id":180100119,"issue_id":815,"user_id":943423,"body":"https://gist.github.com/ichizok/393a939d48c26a03768c\r\n\r\n`set scroll=0` すると `win_comp_scroll()` で (本来の仕様の) デフォルト値 = `w_height/2` になるので、`options[*].def_val[VI_DEFAULT]` を設定する必要はないのでは、という変更。","created_at":1454628302},{"id":180123702,"issue_id":815,"user_id":518808,"body":"あっ、すっかり忘れてた。↓見て思い出したけどまた忘れっちゃった。follow-upありがとうございます。:stuck_out_tongue_winking_eye:\r\nhttps://groups.google.com/d/topic/vim_dev/Njb5RruNQ2Q/discussion\r\n\r\npatch LGTM:+1:です。\r\ntestを添えるとperfectですね。","created_at":1454632321},{"id":180151714,"issue_id":815,"user_id":943423,"body":"ありがとうございます。\r\nあとで test 出しておきます。","created_at":1454637134},{"id":180519946,"issue_id":815,"user_id":943423,"body":"https://gist.github.com/ichizok/0f99eaee993a58ef9487\r\n\r\ntest.\r\nウインドウの状態が違うので単独と `test_alot.vim` 両方に入れましたが、片方だけで十分？\r\n\r\n書いてて気づいたんですが、patch 前は `&scroll` の初期値と `set scroll&` 後の値が違いました。\r\n\r\n80x24 の端末上で\r\n\r\n```\r\nvim -Nu NONE\r\n:set scroll?\r\n11\r\n:set scroll&\r\n12\r\n```\r\n\r\n初期値は `w_height/2` でデフォルト値は `Rows/2` だからですね\r\n","created_at":1454701396},{"id":178305279,"issue_id":813,"user_id":10111,"body":"```diff\r\ndiff --git a/runtime/syntax/vim.vim b/runtime/syntax/vim.vim\r\nindex ebed5be..b3e55ce 100644\r\n--- a/runtime/syntax/vim.vim\r\n+++ b/runtime/syntax/vim.vim\r\n@@ -289,8 +289,8 @@ syn region\tvimPatSepZone\toneline   contained   matchgroup=vimPatSepZ start=\"\\\\%\\\r\n syn region\tvimPatRegion\tcontained transparent matchgroup=vimPatSepR start=\"\\\\[z%]\\=(\" end=\"\\\\)\"\tcontains=@vimSubstList oneline\r\n syn match\tvimNotPatSep\tcontained\t\"\\\\\\\\\"\r\n syn cluster\tvimStringGroup\tcontains=vimEscapeBrace,vimPatSep,vimNotPatSep,vimPatSepErr,vimPatSepZone,@Spell\r\n-syn region\tvimString\toneline keepend\tstart=+[^:a-zA-Z>!\\\\@]\"+lc=1 skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\tcontains=@vimStringGroup\r\n-syn region\tvimString\toneline keepend\tstart=+[^:a-zA-Z>!\\\\@]'+lc=1 end=+'+\r\n+syn region\tvimString\toneline keepend\tstart=+[^a-zA-Z>!\\\\@]\"+lc=1 skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\tcontains=@vimStringGroup\r\n+syn region\tvimString\toneline keepend\tstart=+[^a-zA-Z>!\\\\@]'+lc=1 end=+'+\r\n syn region\tvimString\toneline\tstart=+=!+lc=1\tskip=+\\\\\\\\\\|\\\\!+ end=+!+\tcontains=@vimStringGroup\r\n syn region\tvimString\toneline\tstart=\"=+\"lc=1\tskip=\"\\\\\\\\\\|\\\\+\" end=\"+\"\tcontains=@vimStringGroup\r\n syn region\tvimString\toneline\tstart=\"\\s/\\s*\\A\"lc=1 skip=\"\\\\\\\\\\|\\\\+\" end=\"/\"\tcontains=@vimStringGroup\r\n```\r\nたぶんこれで直るけど、なぜ意図的に `:` をスキップしてあったのか確認が必要。\r\n","created_at":1454377772},{"id":178975548,"issue_id":813,"user_id":10111,"body":"https://groups.google.com/forum/#!topic/vim_dev/1D-wzFoi3Wo","created_at":1454468719},{"id":176283538,"issue_id":808,"user_id":840186,"body":"関連todo\r\n\r\n> Windows installer should install 32-bit version of right-click handler also on\r\n> 64-bit systems. (Brian Cunningham, 2011 Dec 28)\r\n\r\nあとは #508 も。","created_at":1454000494},{"id":176560449,"issue_id":808,"user_id":840186,"body":"> （32bit Windowsであれば問題ありません。）\r\n\r\n最新ナイトリービルドの、\r\nhttps://github.com/vim/vim-win32-installer/releases/tag/v7.4.1194\r\nを使うと、32bit Windowsでもメニュー項目が日本語化されません。\r\n\r\n原因:\r\n* 同梱しているgettext DLLの名前が、libintl.dll から libintl-8.dll に変更されたが、GvimExtがそれに対応できていない。\r\n* gettext DLLがiconv DLLに依存しているバージョンに変更されたが、iconv DLLがDLLの検索パス上に存在しないため、iconv DLLがロードできず、その結果gettext DLLがロードできない。","created_at":1454039408},{"id":176582666,"issue_id":808,"user_id":10111,"body":"ディレクトリ直指定は1個でいいかな。\r\n\r\n```diff\r\ndiff --git a/src/GvimExt/gvimext.cpp b/src/GvimExt/gvimext.cpp\r\nindex e644443..81d4cfc 100644\r\n--- a/src/GvimExt/gvimext.cpp\r\n+++ b/src/GvimExt/gvimext.cpp\r\n@@ -158,6 +158,7 @@ HBITMAP IconToBitmap(HICON hIcon, HBRUSH hBackground, int width, int height)\r\n # define VIMPACKAGE \"vim\"\r\n # ifndef GETTEXT_DLL\r\n #  define GETTEXT_DLL \"libintl.dll\"\r\n+#  define GETTEXT_DLL_ALT \"libintl-8.dll\"\r\n # endif\r\n \r\n // Dummy functions\r\n@@ -206,6 +207,10 @@ dyn_libintl_init(char *dir)\r\n     if (!hLibintlDLL)\r\n     {\r\n \thLibintlDLL = LoadLibrary(GETTEXT_DLL);\r\n+#ifdef GETTEXT_DLL_ALT\r\n+\tif (!hLibintlDLL)\r\n+\t    hLibintlDLL = LoadLibrary(GETTEXT_DLL_ALT);\r\n+#endif\r\n \tif (!hLibintlDLL)\r\n \t    return 0;\r\n     }\r\n```\r\n","created_at":1454045910},{"id":176610748,"issue_id":808,"user_id":10111,"body":"https://github.com/vim/vim/pull/608","created_at":1454051690},{"id":176613185,"issue_id":808,"user_id":840186,"body":"残念ながらそれでは不十分なのです。","created_at":1454051923},{"id":176616173,"issue_id":808,"user_id":10111,"body":"どの件でしょうか？","created_at":1454052109},{"id":176641493,"issue_id":808,"user_id":840186,"body":"これです。\r\n\r\n> gettext DLLがiconv DLLに依存しているバージョンに変更されたが、iconv DLLがDLLの検索パス上に存在しないため、iconv DLLがロードできず、その結果gettext DLLがロードできない。\r\n\r\n現象の説明としては、以下が分かりやすいですね。\r\nDLLからDLLを呼ぶのはこんなに難しい - kawanon\r\nhttp://d.hatena.ne.jp/m_kawanon/20110731/1312116123\r\n\r\ngvimext.dll は、explorer.exe (あるいは同様のファイラー等) のプロセスで動くので、DLLの検索パスには、gvim.exe のあるディレクトリは含まれない点がはまりどころです。\r\nパッチは準備中。","created_at":1454056650},{"id":176682567,"issue_id":808,"user_id":10111,"body":"なるほど。パッチお願いします。","created_at":1454062981},{"id":176699555,"issue_id":808,"user_id":840186,"body":"このパッチを投げました。\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/479934b94fd56b064c9e4bd8737585c5df69d56a/fix-gvimext-loadlibrary.patch?fileviewer=file-view-default\r\nPATHの先頭に、一時的にVimのruntimeディレクトリを追加してから、libintl.dll, libintl-8.dll の順でロードを試みます。","created_at":1454066448},{"id":178988444,"issue_id":808,"user_id":840186,"body":"64bit Windowsで日本語表示されない問題は、32bit版の問題が修正されてからレポート予定。\r\nどう直すか（そもそも直すのか）はvim_devの反応しだいかなー。","created_at":1454471709},{"id":186939949,"issue_id":808,"user_id":840186,"body":"7.4.1383\r\nhttps://groups.google.com/d/topic/vim_dev/VLAesI_qfwI/discussion\r\n32bit版は直りました。","created_at":1456095794},{"id":173738614,"issue_id":804,"user_id":840186,"body":"同じ問題が本家に報告されました。 https://github.com/vim/vim/issues/574","created_at":1453416015},{"id":166118058,"issue_id":798,"user_id":943423,"body":"`so test.vim` 直後では `curwin->w_skipcol` は 25 になっています（カーソルは行末）。\r\n`set number` 後は `curwin->w_skipcol` は 21 (行数表示を除く表示桁数) になるべきですが、25 のままです。\r\nこのため、`gg` しても `curwin->w_skipcol - 21 > 0` であるため、継続行であると誤判定されます。 ","created_at":1450619199},{"id":166167222,"issue_id":798,"user_id":943423,"body":"https://gist.github.com/ichizok/dfd1eeecb150e68bf3a1\r\n\r\n* `curwin->w_skipcol` が `width` (行数表示を除く表示桁数) の倍数でない場合は再計算","created_at":1450657066},{"id":172310498,"issue_id":798,"user_id":943423,"body":"https://gist.github.com/ichizok/dfd1eeecb150e68bf3a1/ec381ac8d6f6ebc6d7214be82d110b4d11d4fa72\r\n\r\n`:set nu` &rarr; `:set nonu` でカーソル行がずれてしまう。\r\n\r\ntest.vim:\r\n\r\n```vim\r\nset wrap\r\nsplit\r\nresize 3\r\nvsplit\r\nvertical resize 25\r\nnormal! 25ia\r\nnormal! 25ab\r\nnormal! 25ac\r\nnormal! 25ad\r\nnormal! 25ae\r\nnormal! $74h\r\n```\r\n\r\n`vim -u NONE -N -S test.vim`\r\n\r\n`|`: カーソル位置 (カーソル下は `c`)\r\n\r\n```\r\n|cccccccccccccccccccccccc\r\nddddddddddddddddddddddddd\r\neeeeeeeeeeeeeeeeeeeeeeeee\r\n```\r\n\r\n`:set nu`\r\n\r\n```\r\n--1 aaaabbbbbbbbbbbbbbbbb\r\n    bbbbbbbb|cccccccccccc\r\n    ccccccccccccddddddddd\r\n```\r\n\r\n`:set nonu`\r\n\r\n```\r\nbbbbbbbbbbbbbbbbbbbbbbbbb\r\n|cccccccccccccccccccccccc\r\nddddddddddddddddddddddddd\r\n```","created_at":1453026652},{"id":172311162,"issue_id":798,"user_id":943423,"body":"https://gist.github.com/ichizok/dfd1eeecb150e68bf3a1\r\nRev.4\r\n\r\n* https://github.com/vim-jp/issues/issues/798#issuecomment-172310498 の件を修正\r\n* `win_T` の `w_skipcol` を `w_skiprow` に変更。`skipcol` は `w_skiprow * width` で算出する\r\n\r\n`width` : 行数表示を除いた1行の表示桁数 ` = W_WIDTH(wp) - win_col_off(wp) + win_col_off2(wp)`","created_at":1453027209},{"id":179522045,"issue_id":798,"user_id":943423,"body":"https://gist.github.com/ichizok/dfd1eeecb150e68bf3a1\r\nRev.5\r\n\r\n* `w_skipcol` に戻した\r\n* `w_wrow` の値をもとに `w_skipcol` を調整\r\n\r\nhttps://groups.google.com/forum/#!topic/vim_dev/tzNKP7EDWYI\r\n報告しました。","created_at":1454540922},{"id":160590493,"issue_id":793,"user_id":142094,"body":"screenrow(), screencol() はどうですか。","created_at":1448879534},{"id":160625456,"issue_id":793,"user_id":10111,"body":"screencol,screenrow、たまに 10000 って数字が返ってきますね。","created_at":1448889714},{"id":161681682,"issue_id":793,"user_id":10111,"body":"バックスペースを押したときの TextChangedI は必ず 10000 になるっぽいです。再描画時にカーソルがまだ確定してないのかな。","created_at":1449157486},{"id":154885010,"issue_id":788,"user_id":41495,"body":"ウイルス対策ソフトウェアの誤検知だと思います。\r\n例外指定を追加した上でノートン側に誤検知を報告するくらいしか思いつきませんね。\r\n","created_at":1447023893},{"id":161377141,"issue_id":788,"user_id":1528093,"body":"#190 再発ですか...","created_at":1449078206},{"id":146543771,"issue_id":779,"user_id":10111,"body":"Windows10 です。再現せずでした。","created_at":1444310563},{"id":146545114,"issue_id":779,"user_id":480049,"body":"試してみると、自分でオプション最小にしてビルドしたものだと同じ環境、同じパッチ数で再現しませんでした。Kaoriya パッチ関係かもしれません。","created_at":1444310910},{"id":146545965,"issue_id":779,"user_id":10111,"body":"ping @koron ","created_at":1444311134},{"id":146553723,"issue_id":779,"user_id":518808,"body":"再現しました。 GVIM 7.4.884 kaoriya 64bit on Windows 10\r\n```\r\ngvim -N -u NONE -c \"simalt ~x\" -c \"colorscheme desert\"\r\n```\r\n\r\n左スクロールバーを表示しないようにしたら再現しないです。\r\n```\r\ngvim -N -u NONE -c \"simalt ~x\" -c \"colorscheme desert\" --cmd \"set guioptions-=L\"\r\n```","created_at":1444312677},{"id":146557747,"issue_id":779,"user_id":480049,"body":"ひたすらパッチをあててビルドしてみた結果、patch-7.4.874 からのようです。","created_at":1444313483},{"id":146558316,"issue_id":779,"user_id":480049,"body":"すいません、 patch-7.4.873 でパッチエラーが出ていたので正確ではないかもしれないです。","created_at":1444313617},{"id":147021954,"issue_id":779,"user_id":468368,"body":"captionを消すパッチのせいかも。\r\nhttps://github.com/koron/vim-kaoriya-patches/blob/master/master/2004-caption_switch.diff","created_at":1444442287},{"id":147022725,"issue_id":779,"user_id":468368,"body":"うーん…たしかに `'go-L'` はトリガーなんだけど、それ以外にも何かある感じ。\r\n\r\n    gvim -c \"simalt ~x\" --cmd \"set guioptions-=L\"\r\n\r\nだと、起動直後から、下の方2行が使われていない。\r\n\r\nもうちょい切り分けます。","created_at":1444443181},{"id":147022843,"issue_id":779,"user_id":468368,"body":"`simlalt ~x` の前に `go` いじったほうが良いか。初回のレイアウトに影響するので。","created_at":1444443340},{"id":147023155,"issue_id":779,"user_id":468368,"body":"`'go-m'` が含まれている時に `simalt ~x` すると下に **余白** が… (；´∀｀)\r\n\r\n    gvim -c \"set go&\" -c \"set go-=m\" -c \"simalt ~x\"\r\n\r\nこのようにメニューを表示しないと、起動直後には余白がなく、 \r\n`'go-L'` があるときは `:vsplit` 後に余白ができる。\r\n\r\n    gvim -c \"set go&\" -c \"simalt ~x\"\r\n\r\nだと、起動直後から余白があるため `'go-L'` に関係なく `:vsplit` 後の余白は変化しない。","created_at":1444443853},{"id":147023229,"issue_id":779,"user_id":468368,"body":"起動時に `'go-m'` があるときに余白ができるのは、やっぱフォントサイズ依存かなぁ…\r\nやってみるか","created_at":1444443963},{"id":147023266,"issue_id":779,"user_id":468368,"body":"ちょいと時間切れ。あとでやります。","created_at":1444444007},{"id":145364339,"issue_id":776,"user_id":468368,"body":"単語境界とかの指定にも流用できそうだけど、やはりまずは正規表現かね。","created_at":1443976243},{"id":145364677,"issue_id":776,"user_id":468368,"body":"方式の提案、2つ\r\n\r\n* 定義ファイル(Scripts.txt)を実行時に読み込んでテーブルを作る\r\n  * メリット: 使わない時は読み込まないで済むので、メモリが減らせそう\r\n  * デメリット: 読み込むのに時間かかりそう\r\n* Scripts.txtからCのソースコード(テーブル)を作成するプログラムを書く\r\n  * メリット: 多少起動が速そう\r\n  * デメリット: それなりにはメモリ食いそう","created_at":1443976622},{"id":168176523,"issue_id":774,"user_id":142094,"body":"報告しました。\r\nhttps://groups.google.com/d/msg/vim_dev/7EBupyOfj8k/l3FsLu9CAQAJ","created_at":1451560954},{"id":133315042,"issue_id":759,"user_id":10111,"body":"まず香り屋パッチかどうかを切り分けたいのですが、非香り屋版で1行目と2行目の I/A それぞれで vas を実行した結果は以下の通りです。\r\n\r\n![](http://go-gyazo.appspot.com/694ae25d2049896a.png)\r\n\r\n![](http://go-gyazo.appspot.com/4048509c2c1ecbae.png)\r\n\r\n![](http://go-gyazo.appspot.com/480e8f6399b36429.png)\r\n\r\n![](http://go-gyazo.appspot.com/239131e4ab87b1c6.png)\r\n\r\nこちらは期待通りでしょうか？\r\n","created_at":1440142104},{"id":133318171,"issue_id":759,"user_id":518808,"body":"`enc`が`utf-8`だと再現しました。(GVim 7.4.826 64bit kaoriya on Win7)\r\n\r\n`gvim -N -u NONE --cmd \"set enc=utf-8 ambw=double\"`\r\n\r\n`enc`が`cp932`の場合は再現しませんでした。\r\n","created_at":1440143526},{"id":133318942,"issue_id":759,"user_id":10111,"body":"@h-east kaoriya パッチだけ、という事でいいでしょうか？僕のは enc=utf-8 で non-kaoriya","created_at":1440143743},{"id":133329199,"issue_id":759,"user_id":840186,"body":"元発言をたどると、[2008-sentence_until_punctuation.diff](https://bitbucket.org/koron/vim-kaoriya-patches/src/32dc7fa41a918dc275cdbae248b0d4393c83632c/2008-sentence_until_punctuation.diff?at=default) が適用されていることによる挙動ですよね。","created_at":1440145833},{"id":133350424,"issue_id":759,"user_id":204623,"body":"記述に曖昧なところが多く申し訳ありません……\r\n\r\n@mattn \r\n掲載していただいたスクショは期待通りの挙動です。\r\n\r\n@k-takata \r\n仰るとおりです。","created_at":1440149736},{"id":132966018,"issue_id":757,"user_id":142094,"body":"メモ https://groups.google.com/d/msg/vim_dev/Ym6D-kWIsyo/xAZPrkp99moJ","created_at":1440065988},{"id":132966203,"issue_id":757,"user_id":1154870,"body":"Win32に余り詳しくは無いですが\r\nWM_CHARで来た時点でC-BとC-S-Bの区別が無さそうに見えました\r\n邪道且つ汚いパッチなので参考程度に\r\nCtrlとShiftが両方押されていた際は無理矢理_OnSysCharに投げる事で認識できました\r\n```diff\r\ndiff --git a/src/gui_w48.c b/src/gui_w48.c\r\nindex 1096ec8..bcc85e5 100644\r\n--- a/src/gui_w48.c\r\n+++ b/src/gui_w48.c\r\n@@ -137,6 +137,7 @@ typedef int WNDPROC;\r\n #endif\r\n \r\n static void _OnPaint( HWND hwnd);\r\n+static void _OnSysChar( HWND hwnd, UINT cch, int cRepeat);\r\n static void clear_rect(RECT *rcp);\r\n static int gui_mswin_get_menu_height(int fix_window);\r\n \r\n@@ -616,6 +617,12 @@ _OnChar(\r\n \r\n     dead_key = 0;\r\n \r\n+    if ((GetKeyState(VK_SHIFT) & 0x8000) && (GetKeyState(VK_CONTROL) & 0x8000))\r\n+    {\r\n+    \t_OnSysChar(hwnd, ch, cRepeat);\r\n+    \treturn;\r\n+    }\r\n+\r\n     len = char_to_string(ch, string, 40, FALSE);\r\n     if (len == 1 && string[0] == Ctrl_C && ctrl_c_interrupts)\r\n     {\r\n@@ -638,7 +645,7 @@ _OnSysChar(\r\n {\r\n     char_u\tstring[40]; /* Enough for multibyte character */\r\n     int\t\tlen;\r\n-    int\t\tmodifiers;\r\n+    int\t\tmodifiers = 0;\r\n     int\t\tch = cch;   /* special keys are negative */\r\n \r\n     /* TRACE(\"OnSysChar(%d, %c)\\n\", ch, ch); */\r\n@@ -648,7 +655,8 @@ _OnSysChar(\r\n      * that the system distinguishes Alt-a and Alt-A (Alt-Shift-a unless\r\n      * CAPSLOCK is pressed) at this point.\r\n      */\r\n-    modifiers = MOD_MASK_ALT;\r\n+    if (GetKeyState(VK_MENU) & 0x8000)\r\n+\tmodifiers |= MOD_MASK_ALT;\r\n     if (GetKeyState(VK_SHIFT) & 0x8000)\r\n \tmodifiers |= MOD_MASK_SHIFT;\r\n     if (GetKeyState(VK_CONTROL) & 0x8000)\r\n@@ -660,6 +668,9 @@ _OnSysChar(\r\n     if (ch < 0x100 && !isalpha(ch) && isprint(ch))\r\n \tmodifiers &= ~MOD_MASK_SHIFT;\r\n \r\n+    if (ch < 0x20)\r\n+\tmodifiers &= ~MOD_MASK_CTRL;\r\n+\r\n     /* Interpret the ALT key as making the key META, include SHIFT, etc. */\r\n     ch = extract_modifiers(ch, &modifiers);\r\n     if (ch == CSI)\r\n```","created_at":1440066066},{"id":133032991,"issue_id":757,"user_id":10111,"body":"試していませんが、良いと思います。","created_at":1440081436},{"id":133040665,"issue_id":757,"user_id":7686579,"body":"かなり記憶が不確かですが、この辺って ynkdir さんが引用された投稿の古い端末コードか特殊キーコード絡みの話だったりしません？\r\n\r\nvim は古い環境も考慮するので互換的になかなか難しい、\r\nneovim の方は古い仕様とのしがらみを割と捨てていっているところがあるので可能になっている、という話のような気もします。\r\n","created_at":1440082662},{"id":133047819,"issue_id":757,"user_id":1154870,"body":"弄ったのがgui_w48.cなので16bit環境が確認できれば、って感じなんですかね\r\n(持って)ないです","created_at":1440084123},{"id":133053127,"issue_id":757,"user_id":10111,"body":"WindowsXP を捨てようって Bram が言ってるくらいなので16bitは捨てでいいと思います。","created_at":1440084833},{"id":133057033,"issue_id":757,"user_id":840186,"body":"XPはまだ捨てないです。それより前を捨てることになりました。","created_at":1440085640},{"id":133320452,"issue_id":757,"user_id":1154870,"body":"微妙に別件ですが`<S-^B>`ではなく`<C-S-B>`で認識してくれるようになるpatch\r\nしかしセットで無いと「どうやってmappingするんです？」と帰ってきそうなので\r\n```diff\r\ndiff --git a/src/misc2.c b/src/misc2.c\r\nindex 79bc379..27dc9c3 100644\r\n--- a/src/misc2.c\r\n+++ b/src/misc2.c\r\n@@ -2886,7 +2886,7 @@ extract_modifiers(key, modp)\r\n     /* Command-key really special, no fancynest */\r\n     if (!(modifiers & MOD_MASK_CMD))\r\n #endif\r\n-    if ((modifiers & MOD_MASK_SHIFT) && ASCII_ISALPHA(key))\r\n+    if ((modifiers & MOD_MASK_SHIFT) && !(modifiers & MOD_MASK_CTRL) && ASCII_ISALPHA(key))\r\n     {\r\n        key = TOUPPER_ASC(key);\r\n        modifiers &= ~MOD_MASK_SHIFT;\r\n```\r\nしかし結局「このOSだと押しても反応しないんですが」なんてのは出てくるのは想像に難くない","created_at":1440144049},{"id":133446072,"issue_id":757,"user_id":7686579,"body":"> 弄ったのがgui_w48.cなので16bit環境が確認できれば、って感じなんですかね\r\n\r\n失礼、先で古い環境と言ったのはリモート端末環境(端末コード)の方の話のつもりでした。\r\n端末によっては Shift と Ctrl の同時押しを処理出来ないのがあったような…という話です。\r\n\r\nちょっと手の届く環境で pageup/pagedown を逆転させて簡易的に試してみたのですが\r\n\r\nCentOS7.1, vim7.4.160 &lt;--&gt; Windows 7(32) Teraterm 4.87 kaoriya vim7.4.798\r\n\r\n:nnoremap &lt;C-S-F&gt; &lt;C-B&gt;\r\n:nnoremap &lt;C-S-B&gt; &lt;C-F&gt;\r\n:nnoremap &lt;C-S-PageDown&gt; &lt;C-B&gt;\r\n:nnoremap &lt;C-S-PageUp&gt; &lt;C-F&gt;\r\n\r\n&lt;C-S-F&gt; と &lt;C-S-B&gt; の動きは\r\nwindows-gvim (x) teraterm (x) gnome-terminal (x) gnome-gvim (x)\r\n(全て C-F, C-B 相当) となりました。\r\n\r\n一方、&lt;C-S-PageDown&gt; &lt;C-S-PageUp&gt; の方は\r\nwindows-gvim (o) teraterm (x) gnome-terminal (x) gnome-gvim (o)\r\nといった感じで GUI は特殊キーの方がちゃんと動きそう…。\r\n\r\nこの組み合わせで考えると GUI 版なら Ctrl-Shift が有効、というのは有り得るのかも知れないですね。\r\n(端末の方もオプション次第で動くのかも知れませんが、さすがにそこまでは確認していません…)","created_at":1440167727},{"id":133496929,"issue_id":757,"user_id":1154870,"body":"> 失礼、先で古い環境と言ったのはリモート端末環境(端末コード)の方の話のつもりでした。\r\n> 端末によっては Shift と Ctrl の同時押しを処理出来ないのがあったような…という話です。\r\n\r\n端末環境は端末自体にもよっちゃったりで厳しそうな気はします\r\nただ、Windowsのvim.exeではキー反応するのに、gvim.exeではキー反応しないのは何でや\r\nってのが私の作業動機です\r\n\r\n> :nnoremap &lt;C-S-F&gt; &lt;C-B&gt;\r\n> :nnoremap &lt;C-S-B&gt; &lt;C-F&gt;\r\n\r\n上にあるmisc2.cに対するpatchを適用しない場合\r\n`<C-S-F>`ではなく`<S-^F>`じゃないと`<C-F>`と解釈されてしまいmapできないです\r\n(`^F`は`<C-Q><C-F>`で入力)\r\n\r\n> &lt;C-S-F&gt; と &lt;C-S-B&gt; の動きは\r\n> windows-gvim (x) teraterm (x) gnome-terminal (x) gnome-gvim (x)\r\n> (全て C-F, C-B 相当) となりました。\r\n\r\nちゃんとmapさせた上でgnome-gvimがどうなのかは少し興味あります\r\n\r\n> 一方、&lt;C-S-PageDown&gt; &lt;C-S-PageUp&gt; の方は\r\n> windows-gvim (o) teraterm (x) gnome-terminal (x) gnome-gvim (o)\r\n> といった感じで GUI は特殊キーの方がちゃんと動きそう…。\r\n\r\nCtrlとShiftが除かれた`<PageUp>`,`<PageDown>`自体が\r\nisalphaやらisprintやらの結果が違う故にmapできたり\r\nWM_SYSCHARで飛んでくる故に反応したりしてるかな(推測で適当言ってます)","created_at":1440176953},{"id":133534876,"issue_id":757,"user_id":1162739,"body":"端末方面の事情ですが、NeoVimはPaul Evansさんの提案するlibtermkeyのエンコード方式だと思いますが、\r\nhttp://www.leonerd.org.uk/hacks/fixterms/\r\n\r\nむしろ普及が進んでいるmodify{Cursor,Function,Other}Keysという\r\n方式に対応させればTeraTermとかXTermとかでもいますぐ使えるようになり、\r\n現時点で一番実用的だと思います。\r\nhttp://invisible-island.net/xterm/ctlseqs/ctlseqs.html\r\nこの方式は、MinEdやEmacs、tmux方面でも採用が進んでおり、エコーバック時に出力コードと被らないような考慮がある分、筋の上でもこちらの方が良いと感じます。\r\n\r\n変わり所ではcygwin consoleのraw keyboard modeがあり、全部対応するのもありかと思います。\r\nhttps://cygwin.com/ml/cygwin-patches/2001-q1/msg00079/raw-win32-keyboard-mode.diff","created_at":1440184464},{"id":134215849,"issue_id":757,"user_id":7686579,"body":"> ただ、Windowsのvim.exeではキー反応するのに、gvim.exeではキー反応しないのは何でや\r\n> ってのが私の作業動機です\r\n\r\nはい。逆に私のコメントの方は\r\n「なぜ出来ない様になっているのか、なぜ neovim は出来る(らしい)のか」を受けて、のつもりでした＾＾；\r\n\r\n> ちゃんとmapさせた上でgnome-gvimがどうなのかは少し興味あります\r\n\r\n同じ結果だったはずなので略していましたが(ちょっと不安になってきたので)念のため再確認してきました。\r\n\r\n:nnoremap &lt;S-^F&gt; &lt;C-B&gt;\r\n:nnoremap &lt;S-^B&gt; &lt;C-F&gt;\r\n\r\n結果は同じ。\r\nwindows-gvim (x) teraterm (x) gnome-terminal (x) gnome-gvim (x)\r\nで全て C-F, C-B と同じ動作でした。\r\n(但し、gnome-terminal については S-C-F で gnome-terminal 自身が拾ってしまって検索ダイアログが出る)\r\n\r\nちなみに map とは無関係ですが\r\nS-PageUp/S-PageDown\r\nwindows-gvim (o) teraterm (x) gnome-terminal (x) gnome-gvim (o)\r\nC-PageUp/C-PageDown\r\nwindows-gvim (x) teraterm (x) gnome-terminal (x) gnome-gvim (x)\r\nという動きになるようです。\r\n(特に teraterm では C-PageUp/C-PageDown が変な動きになった…)\r\n\r\n> CtrlとShiftが除かれた<PageUp>,<PageDown>自体が\r\n> isalphaやらisprintやらの結果が違う故にmapできたり\r\n\r\nS-C-PageUp, S-C-PageDown は misc2.c:find_special_key():2863L (7.4.827) の\r\nextract_modifiers() を通らないので C- S- 共に認識されているようです。\r\n\r\n> WM_SYSCHARで飛んでくる故に反応したりしてるかな(推測で適当言ってます)\r\n\r\nまた、特殊キーのキー入力の方は WM_SYSCHAR ではなく、WM_KEYDOWN を拾っていて\r\ngui_w48.c:process_message():1834L (7.4.827) 付近で\r\nMOD_MASK_SHIFT, MOD_MASK_CTRL が両方とも認識されます。\r\n\r\n> 端末方面の事情ですが、NeoVimはPaul Evansさんの提案するlibtermkeyのエンコード方式だと思いますが、\r\n\r\n情報有難うございます。＞ saitoha さん\r\nneovim の方との差はそこらへんから来ているのかも知れませんね。\r\n時間があるときに内容を追っかけてみたいと思います。","created_at":1440424995},{"id":137095809,"issue_id":757,"user_id":1154870,"body":"> はい。逆に私のコメントの方は\r\n> 「なぜ出来ない様になっているのか、なぜ neovim は出来る(らしい)のか」を受けて、のつもりでした＾＾；\r\n\r\n私の見解としては\"出来ない様になっている\"のではなく\"出来る様にしていない\"という感じです\r\n実際私のも丸投げするなんて大胆不敵で滅茶苦茶な感じですし\r\n需要と危険性、CapsLockとの関係の説明なんても考えると微妙な感じ\r\n原因自体は割愛\r\n\r\n\r\n\r\n> S-PageUp/S-PageDown\r\n> windows-gvim (o) teraterm (x) gnome-terminal (x) gnome-gvim (o)\r\n> C-PageUp/C-PageDown\r\n> windows-gvim (x) teraterm (x) gnome-terminal (x) gnome-gvim (x)\r\n\r\nあれ、私の方だとwindows-gvimでどちらも反応してるんですが…\r\n\r\n\r\n\r\n> S-C-PageUp, S-C-PageDown は misc2.c:find_special_key():2863L (7.4.827) の\r\n> extract_modifiers() を通らないので C- S- 共に認識されているようです。\r\n> また、特殊キーのキー入力の方は WM_SYSCHAR ではなく、WM_KEYDOWN を拾っていて\r\n> gui_w48.c:process_message():1834L (7.4.827) 付近で\r\n> MOD_MASK_SHIFT, MOD_MASK_CTRL が両方とも認識されます。\r\n\r\nこちらでも確認しました\r\n文字では無いキー故の全く別ルートなんですね","created_at":1441203273},{"id":120733814,"issue_id":749,"user_id":10111,"body":"```\r\n:set termencoding=char\r\n```\r\nをvimrcに書いてみて貰えますか。\r\n","created_at":1436716686},{"id":120734265,"issue_id":749,"user_id":13287230,"body":"ありがとうございます。しかし変化はありませんでした。","created_at":1436717139},{"id":120735506,"issue_id":749,"user_id":10111,"body":"すみません。\r\n```\r\nset termencoding=cp932\r\n```\r\nだとどうでしょか？","created_at":1436717608},{"id":120738232,"issue_id":749,"user_id":13287230,"body":"変化なし、です","created_at":1436718198},{"id":120738608,"issue_id":749,"user_id":10111,"body":"fileencodingsに何を設定されておられますか？","created_at":1436718367},{"id":120738949,"issue_id":749,"user_id":13287230,"body":":set fileencodingsで\r\nfileencodings=guess,iso-2022-jp-3,cp932,euc-jisx0213,ucs-bom\r\n\r\nと出ました","created_at":1436718597},{"id":120740457,"issue_id":749,"user_id":840186,"body":"#9 と同件ですね。","created_at":1436720093},{"id":120767844,"issue_id":749,"user_id":13287230,"body":"まったく同じで驚きました。結局fileencodingsが反映されるようになったのでしょうか？私のfileencodingsに何か問題がありますか？","created_at":1436738895},{"id":120780556,"issue_id":749,"user_id":840186,"body":"> 結局fileencodingsが反映されるようになったのでしょうか？\r\n\r\n残念ながらなっていないはずです。","created_at":1436751161},{"id":120790522,"issue_id":749,"user_id":10111,"body":"あー、msvc ですか。最近 mingw しか使って無かったので気付かなかった。","created_at":1436755395},{"id":120792360,"issue_id":749,"user_id":13287230,"body":"どなたか実装をお願い出来ましたら幸いです...非力で申し訳ございません","created_at":1436756093},{"id":120793839,"issue_id":749,"user_id":10111,"body":"いえいえ、ユーザ的な目線でご意見下さる事で十分助かります。","created_at":1436757327},{"id":120825496,"issue_id":749,"user_id":10137,"body":"これだったらいいなという部分、貼り付けます\r\nhttp://vim-jp.org/vimdoc-ja/quickfix.html\r\n\r\nQuickFixCmdPost を使ってエンコーディングを修正する\r\n\r\n ビルドプログラムが出力するメッセージと 'encoding' の値が異なる場合がある。この\r\n例は、Vim がそのエラーメッセージを読み込んだ後でエンコーディングを変換する方法\r\nを示している:\r\n\r\n\r\n        function QfMakeConv()\r\n            let qflist = getqflist()\r\n            for i in qflist\r\n               let i.text = iconv(i.text, \"cp936\", \"utf-8\")\r\n            endfor\r\n            call setqflist(qflist)\r\n         endfunction\r\n\r\n\r\n        au QuickfixCmdPost make call QfMakeConv()\r\n\r\n (Faque Cheng による例)\r\n","created_at":1436768536},{"id":127087797,"issue_id":749,"user_id":10111,"body":"@okapixel  make で実行されるプログラムを手動で実行することは可能でしょか？であれば一度 `set makeprg` で make コマンドを確認頂きコマンドプロンプトから\r\n\r\n```\r\nnmake > output\r\n```\r\n※nmake の部分は上記の確認結果でお願いします。\r\n\r\nを実行、その output がどんなエンコーディングになっているか確認頂けますか。","created_at":1438561012},{"id":127095148,"issue_id":749,"user_id":13287230,"body":"当方アホすぎて分かりません…\r\nとりあえず\r\n:set makeprg=make\r\nでした。ここからどうすればよろしいでしょう？","created_at":1438565505},{"id":127105877,"issue_id":749,"user_id":10111,"body":"```\r\n:sh\r\n```\r\nでコマンドプロンプトに入って `make > output.log` とし、他のエディタ等で `output.log` がどんなエンコーディングが確認頂けますか。","created_at":1438569923},{"id":127106061,"issue_id":749,"user_id":13287230,"body":"makeが内部パッチとして認識されていないと出たのですが…","created_at":1438570087},{"id":127114589,"issue_id":749,"user_id":10111,"body":"あ、そうなのですね。どのコンパイラをお使いかわかりませんが、 Visual Studio ならば `set makeprg=nmake`、mingw をお使いならば `set makeprg=mingw32-make` として試してください。","created_at":1438573896},{"id":127114603,"issue_id":749,"user_id":840186,"body":"スクリーンショットを見る限り、明らかにcp932ですね。\r\n```\r\n'make' は、内部コマンドまたは外部コマンド、\r\n操作可能なプログラムまたはバッチ ファイルとして認識されていません。\r\n```\r\nと出たのではないでしょうか。","created_at":1438573907},{"id":127451433,"issue_id":749,"user_id":13287230,"body":"k-takataさんのおっしゃる通りのメッセージが出ました。\r\nあと申し訳ないのですが、nmakeもmingw32-makeも同様のメッセージでした...本当申し訳ないです。\r\nえっと、参考になるか分かりませんが、確かコンパイラはgcc？かg++というのを使ってるんだぜという話を聞いたことがあるような気がします。\r\nこの面はド素人の癖にネットから見よう見まねで頑張っているのであまりしっかりした知識が身についていなくてお恥ずかしいです...一応Cygwinでコマンドを入れまくってパスを通して使っているだけなのですが、いかがでしょうか？mingw32というものも入れるべきなのでしょうか？\r\n","created_at":1438652368},{"id":127465478,"issue_id":749,"user_id":10111,"body":"結論で言いますと設定不備という事になります。\r\ncygwinですとmakeになります。makeを入手して頂いた上で出力結果を確認し、そのエンコーディングをtermencodingに設定して下さい。\r\nmake が無い場合(かつcygwinでないvimの場合)はコマンドプロンプトのエラーメッセージ(こちらは sjis 固定)が出ますが、そちらは make が出力するエンコーディングと異なる場合があります。\r\nこれは私の経験則ですが cygwin や msys を使う場合は cygwin/msys に付属の vim を使った方が良いです。また逆に cygwin/msys でない vim を使う場合は cygwin/msys 系のツールを使わない方が良い(mingw32 や mingw64 を検討)です。\r\n","created_at":1438658912},{"id":127484801,"issue_id":749,"user_id":840186,"body":"> そのエンコーディングをtermencodingに設定して下さい。\r\n\r\nWin32版でenc=utf-8時に、`:make`の実行結果が文字化けするのは、tenc, fencs等を設定しても改善しないのではないでしょうか。設定すべきは以下の2点だと思います。\r\n\r\n1. PATH等を適切に設定して、makeコマンドが正常に動作するようにする。\r\n2. https://github.com/vim-jp/issues/issues/749#issuecomment-120825496 の指摘を適用する。\r\nただし、makeコマンドのエンコーディングに合わせて、`\"cp936\"` の部分を適切に修正する必要あり。","created_at":1438666587},{"id":127491300,"issue_id":749,"user_id":10111,"body":"個人的には、コンパイラが吐く出力はコンパイラベンダ次第だし、gcc の場合それすらも変更可能なのでユーザがmakeprgで対応すべきだと思います。(vimは対応すべきではない)","created_at":1438668958},{"id":127496903,"issue_id":749,"user_id":10111,"body":"例えば出力utf-8を強制したいなら\r\n\r\nhttps://github.com/mattn/utf8run\r\n\r\nこれを使って\r\n```\r\n:set makeprg=utf8run\\ make\r\n```\r\nっていう方法はありますね。","created_at":1438670295},{"id":127516111,"issue_id":749,"user_id":255021,"body":"もし、英語のメッセージを読むのがそれほど苦でないのであれば、\r\n.vimrc の先頭に、\r\n\r\n```\r\nlet $LC_ALL=\"C\"\r\nlet $LANG=\"C\"\r\n```\r\n\r\nと書いてしまって、makeを含む、cygwinのコマンドが出力するメッセージを全て英語化してしまうのも一つの手です。\r\n","created_at":1438675949},{"id":120685537,"issue_id":748,"user_id":7686579,"body":"vim の ClearType をオフにする、のとは逆ですが\r\nvim の DirectWrite が有効になっていないというお話だったりしませんか？\r\nhttp://www.kaoriya.net/blog/2013/05/05/","created_at":1436674853},{"id":120726580,"issue_id":748,"user_id":13287230,"body":"あ、文字コードをutf8にしたら出来ました、ありがとうございます！","created_at":1436713005},{"id":120771051,"issue_id":748,"user_id":10111,"body":"utf-8 でしか動作しないという問題として reopen した方が良いかと\r\n\r\nOn 7/13/15, okapixel <notifications@github.com> wrote:\r\n> Closed #748.\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/748#event-353882787\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1436741646},{"id":120771582,"issue_id":748,"user_id":13287230,"body":"reopenさせていただきました\r\nマニュアルにはutf8のみで動作とありましたが、utf8以外でも動いていただければ嬉しいです\r\nご検討よろしくお願いします","created_at":1436742358},{"id":120771786,"issue_id":748,"user_id":41495,"body":"@okapixel タイトルを「UTF-8 以外で DirectWrite を有効にできないか」と変更したほうがよいと思います。\r\n","created_at":1436742638},{"id":120780296,"issue_id":748,"user_id":13287230,"body":"了解です","created_at":1436750917},{"id":116741096,"issue_id":744,"user_id":6366270,"body":"Macについては\r\nhttps://github.com/vim-jp/vim/blob/318083ec08ce7b586ba564deccd0a59256e632d9/src/getchar.c#L5358-L5367\r\nの部分でお間違いないでしょうか?\r\n\r\n記述項目が足りないissueということですので、Macの定義についても一応+1させて頂きます。","created_at":1435593455},{"id":116891460,"issue_id":744,"user_id":468368,"body":"`MACOS` が、「(懐かしの)MacOS9の意味であってOSXではない」可能性を考えました。\r\n詳細を忘れてしまったので。\r\n\r\nもしも OSX の場合が含まれるならば当然ドキュメントを書いたほうが良いです。\r\n含まれない(=MacOS9用の設定)ならば、別に良いかなぁってw","created_at":1435625133},{"id":116901236,"issue_id":744,"user_id":840186,"body":"> MACOS が、「(懐かしの)MacOS9の意味であってOSXではない」可能性を考えました。\r\n\r\nvim.hを見ると、\r\n\r\n```c\r\n#if defined(MACOS_X) || defined(MACOS_CLASSIC)\r\n# define MACOS\r\n#endif\r\n```\r\n\r\nとなっているので、新旧両方のように見えます。","created_at":1435627276},{"id":117400616,"issue_id":744,"user_id":468368,"body":":bow:\n","created_at":1435716914},{"id":185116505,"issue_id":744,"user_id":840186,"body":"`v_CTRL-X` について、投げました。\r\nhttps://groups.google.com/d/topic/vim_dev/2zTn_PgJ_Ys/discussion\r\nMacについては、（書くのが面倒だったので）ヘルプに記載されていないことを指摘するにとどめています。","created_at":1455701683},{"id":185116866,"issue_id":744,"user_id":840186,"body":"> ソースコードで言うと https://github.com/vim-jp/vim/blob/318083ec08ce7b586ba564deccd0a59256e632d9/src/getchar.c#L5306 このあたり。\r\n\r\nvim-jp/vim が、vim-jp/vim-obsoleted に移動したことでリンクが切れてしまって悲しい。","created_at":1455701796},{"id":192514415,"issue_id":744,"user_id":840186,"body":"当初の dos-standard-mappings に関しては修正済み。\r\nhttps://github.com/vim/vim/commit/e0fa3742ead676a3074a10edadbc955e1a89153d\r\nMacについてはMacを分かっている人に書いてもらいたいところ。\r\n\r\nhttps://groups.google.com/d/msg/vim_dev/2zTn_PgJ_Ys/ndBIfKMaEAAJ\r\n> I hope someone can do that.  I like complete docs. ","created_at":1457132945},{"id":111895225,"issue_id":741,"user_id":468368,"body":"ポイントは 源ノ角ゴシック JP がプロポーショナルになってるらしいことです。なので、このissueは本質的に gvimでプロポーショナルフォントを利用する手段を提供すること、と等価になります。\r\n\r\nVim 側のポイントとして、[`CF_FIXEDPITCHONLY`](https://github.com/vim-jp/vim/blob/master/src/os_mswin.c#L2951) が指定されているため\r\n\r\n```viml\r\n:set gfn=*\r\n```\r\n\r\nでは選択できなくなっています。このフラグを無理矢理外して選択すると、横幅(ピッチ)が広い状態になります。\r\n\r\nよって手っ取り早く使えるようにするには、何らかの形で以下を実現する必要があるでしょう。\r\n\r\n*   プロポーショナルなフォントも選択できるようにする\r\n*   ピッチを設定できるようにする\r\n\r\n真面目にやる方法は、ちょっと今は思いつきません。","created_at":1434330848},{"id":111895321,"issue_id":741,"user_id":468368,"body":"源ノ角ゴシック JP のほうでfixed pitchのフラグをつけてビルドするという手もありそうですが、Vimとしては、プロポーショナルフォントを使う手段を提供する、という視点で捉えるべきです。\r\n\r\nプロポーショナルに表示するというわけではなく、プロポーショナルフォントを使って等幅表示をするという意味です。","created_at":1434330967},{"id":111895438,"issue_id":741,"user_id":20474,"body":"過去にプロポーショナルフォントに挑戦した記事が Vim Hacks にあるので、リンクを貼っておきます。\r\n\r\n[vim-jp » Hack #92: Vimでプロポーショナルフォントを使う (Mac OS X編)](http://vim-jp.org/vim-users-jp/2009/10/24/Hack-92.html)\r\n\r\n見ての通り、縦分割が死にます。","created_at":1434331094},{"id":111991427,"issue_id":741,"user_id":51972,"body":"これって源ノ角ゴシックではなくてコーディング用に最適化された源ノ角ゴシック Code JPの話なので、等幅を期待してたんですが違うんですかね？","created_at":1434360435},{"id":111999293,"issue_id":741,"user_id":10111,"body":"フォントは自身でプロポーショナルかどうかのフラグを持っているので、vim はそれが固定幅の物だけしか扱わないという処理になっています。\r\nhttps://msdn.microsoft.com/ja-jp/library/cc428368.aspx?f=255&MSPPError=-2147217396\r\nWindowsであれば、この FIXED_PITCH しか扱わない様になっています。","created_at":1434361302},{"id":112024681,"issue_id":741,"user_id":3213998,"body":"> これって源ノ角ゴシックではなくてコーディング用に最適化された源ノ角ゴシック Code JPの話なので、等幅を期待してたんですが違うんですかね？\r\n\r\n源ノ角ゴシック Code JP は等幅フォントではなくプロポーショナルフォントのようです。\r\n以下の記事で作者の方が「思い切って 2/3（667 ユニット）字幅を採用することにしました」と書いているように、半角三文字と全角二文字が同じ幅になっています。\r\nhttp://blogs.adobe.com/CCJKType/files/2015/06/shc-vs-shs.jpg\r\n\r\n[githubのページ](https://github.com/adobe-fonts/source-han-code-jp)のスクリーンショットの以下の部分がわかりやすいかと思います。\r\n![pfont](https://cloud.githubusercontent.com/assets/3213998/8158740/e65148e0-139a-11e5-8a44-53f309f6e94b.png)\r\n半角文字の \"ttp\" と全角文字の \"アド\" でおおよそ同じ幅になっています。","created_at":1434367747},{"id":112100499,"issue_id":741,"user_id":7686579,"body":"> 等幅を期待してたんですが違うんですかね？\r\n\r\n既に明らかですが、手元で一応 tmPitchAndFamily を見てみました。\r\n\r\n源ノ角ゴシック Code JP\r\ntmPitchAndFamily = 0x2b = TMPF_FIXED_PITCH|TMPF_VECTOR|TMPF_DEVICE\r\n\r\nWindows では TMPF_FIXED_PITCH のフラグが「設定されていない」場合が fixed pitch font になるので\r\nこれは variable pitch font (プロポーショナルフォント)ですね。","created_at":1434380897},{"id":112117597,"issue_id":741,"user_id":468368,"body":"Vimのほうで、無理矢理1セルずつ描画、みたいなことを考えたけど\r\nそういやけっこうまとめて書いてましたね…\r\n\r\nDirectWriteでは文字ごとの位置を調整して書いてた気がするから、\r\nそれが流用できるかもしれないけど…半角が2/3となるとちょっとややこしいですねw","created_at":1434383565},{"id":112125836,"issue_id":741,"user_id":7686579,"body":"脱線ですがちょっと koron さんの言われていたやり方で\r\n源ノ角ゴシック Code JP の表示テストをしてみました。\r\n\r\n> プロポーショナルに表示するというわけではなく、プロポーショナルフォントを使って等幅表示をするという意味です。\r\n\r\n等幅前提のエディタで無理やり源ノ角ゴシック Code JP を等幅扱いで表示。(1 行目のみが半角文字)\r\n\r\n![han-code-jp-01](https://cloud.githubusercontent.com/assets/7686579/8164265/e0525d08-13c2-11e5-8285-97a3dc97bf27.png)\r\n\r\n上部に表示されているルーラーのひと目盛が tmAveCharWidth に相当。\r\n全角の幅がひどいので、更に無理やり半角全角を同一幅で表示させるとこんな感じになります。\r\n\r\n![han-code-jp-02](https://cloud.githubusercontent.com/assets/7686579/8164354/78b9dff8-13c3-11e5-8d7d-f4aed78710d9.png)\r\n\r\nこれなら割とまともに見られる？\r\nただ、おそらく文字によっては隣の文字と重なっちゃったりするのかも知れませんけど。","created_at":1434385289},{"id":112241317,"issue_id":741,"user_id":10111,"body":"ソースコードを弄ってむりやり表示してみましたが...\r\n\r\n![](http://go-gyazo.appspot.com/954ab940b09cab9e.png)\r\n","created_at":1434413020},{"id":112243611,"issue_id":741,"user_id":3213998,"body":"Linux (Ubuntu 15.04) ですが、`guifont` で等幅フォントを指定し、`guifontwide` で全角用のプロポーショナルフォントを指定すると、幅が広くなりすぎる件は改善されました。\r\nただし、半角文字の表示は `guifont` で指定している等幅フォントになります。\r\n（Windowsで同じことができない、ということが本issueの本題でしたら以下無視して下さい。）\r\n\r\n以前から Ubuntu の GVim や MacVim は普通にプロポーショナルフォントも指定できますが、これは想定外の動作なのでしょうか？\r\n\r\n画像ものせておきます。画像は２枚とも以下の設定です。\r\n\r\n```vim\r\n\" 上のウィンドウの設定\r\nset guifont=Source\\ Han\\ Code\\ JP\\ 12\r\nset guifontwide=\r\n```\r\n```vim\r\n\" 下のウィンドウの設定\r\nset guifont=Source\\ Code\\ Pro\\ 12\r\nset guifontwide=Source\\ Han\\ Code\\ JP\\ 12\r\n```\r\n\r\n![both1](https://cloud.githubusercontent.com/assets/3213998/8173468/bacc1074-1408-11e5-9751-7deb846a22c7.png)\r\n![both2](https://cloud.githubusercontent.com/assets/3213998/8173469/bedc3b62-1408-11e5-88f2-969a8aa244a3.png)\r\n\r\nフォントサイズを調整すればもう少し見やすくなるかもしれません。\r\nフォントの組み合わせによっては文字の一部が欠けてしまう場合があります・・・\r\n","created_at":1434414357},{"id":112243919,"issue_id":741,"user_id":10111,"body":"> 以前から Ubuntu の GVim や MacVim は普通にプロポーショナルフォントも指定できますが、これは想定外の動作なのでしょうか？\r\n\r\nはい。例えば`a`が`α`と同じ幅で作られたフォントを指定出来る様にする為です。","created_at":1434414513},{"id":112244084,"issue_id":741,"user_id":10111,"body":"ちなみに Windows でも guifontwide は使えます。","created_at":1434414621},{"id":112247690,"issue_id":741,"user_id":3213998,"body":"ありがとうございます。\r\nguifontwideのヘルプに\r\n> \tNote: 指定したフォントの幅は、オプション 'guifont' で指定したフォント\r\n\tのちょうど2倍の幅で、同じ高さのものでなければならない。\r\n\r\nという注意書きがありました。\r\n先ほどのコメントでの使い方はVim的には不適切ということですね。","created_at":1434416447},{"id":111769426,"issue_id":739,"user_id":468368,"body":"原因を簡単に言うと「IMがオンになったというイベントが取れないから(ちゃんとした方法がない)」という理由だったと記憶してます。","created_at":1434246138},{"id":111769548,"issue_id":739,"user_id":1528093,"body":"おぅふ","created_at":1434246476},{"id":111769566,"issue_id":739,"user_id":1528093,"body":"'imactivatekey' で取れないんですかね？","created_at":1434246534},{"id":111891063,"issue_id":739,"user_id":10111,"body":"imactivatekey は最近の IM だと間違いなく動かないと思います。","created_at":1434327272},{"id":111891100,"issue_id":739,"user_id":10111,"body":"ちなみに、たしか昔動いてと記憶しているのでどこかで壊れたんじゃないかと思ってます。","created_at":1434327323},{"id":111891284,"issue_id":739,"user_id":1528093,"body":"おぅふ (2度目","created_at":1434327614},{"id":111891696,"issue_id":739,"user_id":1528093,"body":"mbyte.txt 流し読みしてたけど、情報の鮮度が悪くなっていて**アッアッ**している","created_at":1434328120},{"id":111892303,"issue_id":739,"user_id":10111,"body":"gtk を使ってる限り動かないんですよねー。imactivatekey\r\nimactivatekey は純粋な XIM を使っていて、デスクトップにキーイベントを送信したら反応する XIM しか動かない。\r\ngtk はキースヌーファーという機能を使ってキーを盗み取っているのでそもそも動かない。\r\nあと、IMがアクティブかどうかを知る方法ですが、SKK タイプの物だとタイプした文字が大文字の場合に初めてIMがアクティブになるので皆が期待している物でない可能性もあります。","created_at":1434328773},{"id":111892729,"issue_id":739,"user_id":1528093,"body":"もしかして #53 のことですか? ","created_at":1434329326},{"id":111894380,"issue_id":739,"user_id":10111,"body":"はい。もうimakはあるだけユーザを惑わしてしまうので消してしまった方がいいんじゃないかと思ってます。\r\nkinput2 ユーザがまだいるって話なら別ですが。","created_at":1434330042},{"id":112672421,"issue_id":739,"user_id":7233193,"body":"CursorIM が、Linuxで有効に効かないのは、前々から気になっていたのですが\r\nimactivatefunc や、 imstatusfunc が追加された今なら、どうにかなるかと思って少しみてみました。\r\n\r\nimsf が正しく設定されていれば、下記の変更だけで、IMEをOnにして、文字入力しなくてもカーソルの色は変わるようです。\r\n```diff\r\ndiff -r 7723aee605b0 src/gui.c\r\n--- a/src/gui.c\tWed Jun 17 13:27:55 2015 +0900\r\n+++ b/src/gui.c\tWed Jun 17 15:07:21 2015 +0900\r\n@@ -1126,7 +1126,7 @@\r\n \r\n \t\tif (\r\n # if defined(FEAT_GUI_GTK) && !defined(FEAT_HANGULIN)\r\n-\t\t\tpreedit_get_status()\r\n+\t\t\tpreedit_get_status() || im_get_status()\r\n # else\r\n \t\t\tim_get_status()\r\n # endif\r\n```\r\npreedit_get_status() は、必要なのかよくわからないので、そのまま残しておきました…","created_at":1434522750},{"id":112673505,"issue_id":739,"user_id":1528093,"body":"その手があったか!","created_at":1434523057},{"id":122893189,"issue_id":739,"user_id":468368,"body":"たぶんですが、ユーザがホットキーを押してIMをONにしたその瞬間は\r\n`imsf` が呼ばれない=呼ぶ契機がないので\r\nやはり即時には反映されないんじゃないかなぁ、という懸念があります。\r\n\r\nWindowsではIMEの内部状態がユーザによって切り替えられた瞬間に飛んで来るイベント\r\nがあるのですぐに反映させられる=しているんですけど、\r\nGTK方面だとそのイベントに相当するものが無いんですよね…\r\n\r\nX11方面はCBがあった気もするけど、ほとんどのIMで正しく呼ばれないみたいな…\r\n\r\nなお、ONにしたあとカーソルが動いた時点で反映される、みたいな挙動はいまでも動いているハズ。\r\n","created_at":1437400584},{"id":122895936,"issue_id":739,"user_id":10111,"body":"preedit が active かどうかは IM が決めます。\r\nなのでまちまちなのです。例えば skk の場合、IM をONにしただけではアクティブ扱いになりません。\r\n実際には大文字で入力を開始したその瞬間にアクティブになります。","created_at":1437401178},{"id":122902374,"issue_id":739,"user_id":1528093,"body":"> なお、ONにしたあとカーソルが動いた時点で反映される、みたいな挙動はいまでも動いているハズ。\r\n\r\n現状ではpreeditが出ないとCursorIMにならないです。","created_at":1437402453},{"id":122903524,"issue_id":739,"user_id":1528093,"body":"@presuku さんのパッチを当てた状態で\r\n```vim\r\nset imactivatefunc=ImActivate\r\nfunction! ImActivate(active)\r\n  if a:active\r\n    call system('fcitx-remote -o')\r\n  else\r\n    call system('fcitx-remote -c')\r\n  endif\r\nendfunction\r\nset imstatusfunc=ImStatus\r\nfunction! ImStatus()\r\n  return system('fcitx-remote')[0] is# '2'\r\nendfunction\r\n```\r\n上記の設定をして、`vim -g`でIMをオンにすると即座にCursorIMが反映されました。\r\n追記: IMはfcitx-mozc","created_at":1437402756},{"id":122906391,"issue_id":739,"user_id":1528093,"body":"skkの場合はわざと`imaf`と`imsf`を設定しなければ、preeditの有無で判別されるので良いのではないでしょうか。\r\nGTK以外(Windows)ではコードを見るにIMのステータスで判定されているようですが...","created_at":1437403393},{"id":122957671,"issue_id":739,"user_id":1528093,"body":"> skkの場合はわざとimafとimsfを設定しなければ、preeditの有無で判別されるので良いのではないでしょうか。\r\n\r\nあれ、skkの場合でもIMのステータスで判別した方がいいのでしょうか？","created_at":1437412819},{"id":107266052,"issue_id":737,"user_id":10111,"body":"LGTM\r\n\r\ntgetch の方も check_shellsize してないので `_check` を呼ぶのが正解だと思います。\r\n","created_at":1433118447},{"id":107267138,"issue_id":737,"user_id":10111,"body":"あれ、でもパッチ済みでも再現しますね。","created_at":1433118531},{"id":107270569,"issue_id":737,"user_id":10111,"body":"EXモードの時は ENABLE_WINDOW_INPUT を外した方がいいかもしれませんね。","created_at":1433119388},{"id":121229693,"issue_id":737,"user_id":839237,"body":"リサイズすると OS に関係なく画面がクリアされることがわかり、こんな感じになりました。\r\nhttps://gist.github.com/hattya/0faab344335d3df6b6e0\r\n\r\nhttps://github.com/vim/vim/blob/v7-4-781/src/term.c#L3150-L3161\r\nで Ex モードの時には再描画しないと書いてあるのに、画面をクリアする処理で Ex モードかどうかのチェックがされていませんでした。","created_at":1436878101},{"id":106269820,"issue_id":736,"user_id":10111,"body":"僕んところだとさらに矢印`↓`も出る様で...\r\n\r\n![](http://go-gyazo.appspot.com/a9f0cd2c6c3faf8f.png)","created_at":1432810157},{"id":106270732,"issue_id":736,"user_id":10111,"body":"矢印はnormalが起因してるらしい。下をコメントアウトしたらでなくなる。良く分からない。\r\n```\r\nnormal! \"ihi\\<CR>\\<Esc>\"\r\n```\r\n","created_at":1432810311},{"id":106287105,"issue_id":736,"user_id":839237,"body":"`test.vim` の 1 行目を\r\n```vim\r\nexecute \"normal! ihi\\<CR>\\<Esc>\"\r\n```\r\nとして下さい。再現手順の方も直しておきます。\r\n\r\n矢印は `vim_beep()` が出力した `\\a` みたいです。","created_at":1432813518},{"id":107157140,"issue_id":736,"user_id":839237,"body":"https://gist.github.com/hattya/421d28c51c819a3b882e\r\nWindows の場合、制御文字はシステムが処理ししないとそのまま出力されるだけなので、`ENABLE_PROCESSED_OUTPUT` は無効にしない方がいいと思います。","created_at":1433070833},{"id":120613844,"issue_id":736,"user_id":839237,"body":"vim_dev に投稿しました。\r\nhttps://groups.google.com/d/msg/vim_dev/Qoe77A3s_YM/n-ev9tCOCo4J","created_at":1436617678},{"id":99754672,"issue_id":731,"user_id":10111,"body":"\r\nhttp://ftp.vim.org/vim/patches/7.4/7.4.682\r\n\r\n[この](https://github.com/vim-jp/issues/issues/670)修正ですね。\r\n\r\n\r\n","created_at":1430983844},{"id":99754696,"issue_id":731,"user_id":10111,"body":"失礼、ボタン間違えました。","created_at":1430983855},{"id":99760876,"issue_id":731,"user_id":10111,"body":"私の所なとこんな感じです。\r\n\r\n![](http://go-gyazo.appspot.com/db8c081b805fe5a1.png)\r\n\r\nキャプチャ見せて貰ってよろしいですか？","created_at":1430985555},{"id":99795112,"issue_id":731,"user_id":518808,"body":"@mattn 真ん中の`aaa`がボールドになっているのが「前と違うぜ！」とのことなのでmattnさんのキャプチャでも再現しているということになります。","created_at":1430991541},{"id":99795967,"issue_id":731,"user_id":10111,"body":"再現というか、matchadd で 11122233344455 のうち 22233344 を(※1)、さらに matchadd で 333 だけを(※2)ハイライトした場合に、僕は 333 が ※1 と※2 の合成になるべきだと思っているのですが、どうでしょうか？","created_at":1430991709},{"id":99797718,"issue_id":731,"user_id":518808,"body":"ということは7.4.682で挙動が変わったけど今の挙動が正しいので報告の件は「仕様です」ということですね。\r\n確かにそうかも。任せました！","created_at":1430992160},{"id":99800573,"issue_id":731,"user_id":3096934,"body":"自ら matchadd() していれば、どちらかをクリアすればよいのですが、diff の場合はどうにもできないので困っています。","created_at":1430992791},{"id":99801857,"issue_id":731,"user_id":518808,"body":"そうそう、diffモードの時って`:syntax off`が聞かないんですよね。これを対応するの難しいんでしょうか？","created_at":1430993018},{"id":99802136,"issue_id":731,"user_id":3096934,"body":"こんな感じです。\r\n\r\n7.4.648\r\n![7 4 648](https://cloud.githubusercontent.com/assets/3096934/7512982/c42a2c82-f4eb-11e4-91f9-577087c24397.png)\r\n\r\n7.4.725\r\n![7 4 725](https://cloud.githubusercontent.com/assets/3096934/7513011/f94c9b02-f4eb-11e4-8820-bf020da9ed66.png)\r\n","created_at":1430993137},{"id":99802400,"issue_id":731,"user_id":10111,"body":"MatchParen で bold を打ち消す standout を設定すれば上書き出来ます。\r\n\r\n```\r\nhi MatchParen term=reverse cterm=standout ctermbg=3 guibg=DarkCyan\r\n```\r\n","created_at":1430993199},{"id":99802959,"issue_id":731,"user_id":10111,"body":"MatchParen が fg を設定していないので、この動作は個人的には期待動作です。","created_at":1430993326},{"id":99803735,"issue_id":731,"user_id":3096934,"body":"MatchParen は説明のための一例です。DiffText がどのようなものでも、以前のように matchadd のハイライトで完全に上書きできないでしょうか。","created_at":1430993607},{"id":99803904,"issue_id":731,"user_id":10111,"body":"DiffText だけ特例処置を入れて fg 属性をコピーしないという意味でしょうか？","created_at":1430993679},{"id":99804007,"issue_id":731,"user_id":10111,"body":"それなりの説明をしないと変更させては貰えませんので、出来ればどの様に困っているのかを教えて貰えませんか？教えて貰えると助かります。","created_at":1430993723},{"id":99808742,"issue_id":731,"user_id":3096934,"body":"diffchar.vim (http://www.vim.org/scripts/script.php?script_id=4932) というプラグインを投稿しているのですが、次のようになってしまいました。\r\nまず行全体を DiffChange で matchadd() し、その後、実際の diff の部分を DiffText や DiffAdd で matchadd() していますが、diff のハイライトが version によって上書きできなくなってしまい困っています。\r\n\r\n7.4.648\r\n![7 4 648](https://cloud.githubusercontent.com/assets/3096934/7513612/945f6972-f4f0-11e4-8b35-7f9c37706c23.png)\r\n\r\n7.4.725\r\n![7 4 725](https://cloud.githubusercontent.com/assets/3096934/7513619/9a6bbca8-f4f0-11e4-8420-53cc0ced2b1a.png)","created_at":1430995140},{"id":99811085,"issue_id":731,"user_id":10111,"body":"> diff のハイライトが version によって上書きできなくなってしまい\r\n\r\nこの部分ですが、上書きしようとしているのはどの部分で、どの様にでしょうか？","created_at":1430995665},{"id":99813710,"issue_id":731,"user_id":3096934,"body":"この例ですと、DiffChange で行全体を matchadd() していますが、\" fox jumped over the \" と DiffAdd (LightBlue) で matchadd() した \"brown\" の部分が bold のまま残ってしまいます。DiffText (Red) でも matchadd() していますが、diff と同じ部分ですので上書きできなくても問題ないです。","created_at":1430996290},{"id":99817963,"issue_id":731,"user_id":10111,"body":"hihight の結果を教えて貰えますか？\r\n```vim\r\nredir > highlight.log\r\nsilent highlight\r\nredir END\r\n```\r\nで取れます。おそらくですが、DiffAdd の gui もしくは guifgが指定されていないのだと思います。","created_at":1430997164},{"id":99848858,"issue_id":731,"user_id":3096934,"body":"diff を含めてハイライトはデフォルトのままです。各ユーザーがスキームをカスタマイズしている場合が多いので、プラグインでこれを変えてしまうのはまずいです。\r\n要はどのハイライトでも、これまでできていたように diff ハイライトを上書きしたのですが、7.4.682 のパッチではこの上書きができていたことが不具合と認識されたのでしょうか、それとも結果的にたまたまそうなってしまったのでしょうか。","created_at":1431002332},{"id":100056411,"issue_id":731,"user_id":3096934,"body":"> 再現というか、matchadd で 11122233344455 のうち 22233344 を(※1)、さらに matchadd で 333 だけを(※2)ハイライトした場合に、僕は 333 が ※1 と※2 の合成になるべきだと思っているのですが、どうでしょうか？\r\n\r\nについてですが、matchadd() の priority 指定で上書きされる仕様なので、合成されてはまずいです。","created_at":1431045963},{"id":100061621,"issue_id":731,"user_id":10111,"body":"```\r\nhighlight MyGroup1 ctermbg=green guibg=green ctermfg=yellow\r\nhighlight MyGroup2 ctermfg=red guifg=red\r\ncall matchadd(\"MyGroup1\", \"FOOBARBAZ\")\r\ncall matchadd(\"MyGroup2\", \"BAR\")\r\n\r\n\" FOOBARBAZ\r\n```\r\nこれの動作を見る限り、matchadd 同士だと上書き動作になっている様です。\r\n問題は行色属性の場合だけの様ですが、いかがでしょうか？","created_at":1431048086},{"id":100068578,"issue_id":731,"user_id":3096934,"body":"7.4.682 以降でも matchadd() 同志の問題はありません。\r\n問題は、matchadd() は合成する機能がないにもかかわらず、diff でハイライトされた部分全体が matchadd() と合成されてしまうようになったことだと思います。\r\n行色属性とは gui のことでしょうか。試してみると guifg も guibg も diff ハイライトと合成されてしまいます。","created_at":1431049208},{"id":100069498,"issue_id":731,"user_id":10111,"body":"行色属性は、cursorline や DiffChanged 等だけ特例として内部で使われている物で、本来 vim のハイライトは1行丸ごと塗りつぶす機能は無いのですが、これらだけそれを実現する為に特例処置が入っています。7.4.682 はこの行色属性と match に限らない表側の色を合成する修正ですが、行色属性の前景属性を抜いた値で合成すればうまく修正されるかもしれません。","created_at":1431049559},{"id":100078083,"issue_id":731,"user_id":3096934,"body":"内部のメカニズムは不案内なのでよくわかりませんが、\r\ngui も guifg も guibg も合成されてしまいますので\r\n前景以外の属性も関係あるのでしょうか。\r\nそれはともかく、修正いただければ助かります。","created_at":1431052744},{"id":100079097,"issue_id":731,"user_id":10111,"body":"合成されるのが正しいと思う人もいるかもしれませんので、修正するかどうかは、一度 vim-dev で相談して決めたいと思います。\r\n","created_at":1431053158},{"id":100083891,"issue_id":731,"user_id":10111,"body":"説明に画像をお借りしたいのですが良いでしょうか？","created_at":1431054131},{"id":100098203,"issue_id":731,"user_id":3096934,"body":"> 合成されるのが正しいと思う人もいるかもしれませんので、\r\n\r\nの真意は不明ですが、まずは matchadd() の上書き仕様変更の是非を確認していただきたいと思います。MatchParen の例でいかがでしょうか。\r\n次に diff は例外ということになれば、その実害ととして diffchar.vim の例を使ってください。ある程度ダウンロードされているようですのでそのうちユーザーからクレームがあると思いますが、現状ではワークアラウンドもありません。","created_at":1431059600},{"id":100107714,"issue_id":731,"user_id":10111,"body":"えと、画像は使って良いでしょうか？","created_at":1431064189},{"id":100114486,"issue_id":731,"user_id":10111,"body":">> 合成されるのが正しいと思う人もいるかもしれませんので、\r\n> の真意は不明ですが\r\n\r\nくどい返しにご立腹かと思います。Bramの判断にもよりますが、皆の反応次第で修正方法が異なってくるので、くどくなって申し訳ないのですが確認させて頂いてます。\r\n上記の`aaa`がboldになっている件の何が問題なのかにより\r\n\r\n* 真ん中の`aaa`は、DiffText なので bold、上から matchadd でかぶされても残るべきだ\r\n* 真ん中の `aaa` は matchadd が勝るべきだ\r\n* ハイライトの属性に nonbold を足すべきだ\r\n\r\nなど色んな修正案があり、またZBryceさんからお聞きした1意見だけで修正方針を決定する内容でもないと思っています。「修正したよ」とパッチを投げても「何がイケてないのか」を説明しないといけないですからね。\r\n\r\n","created_at":1431065573},{"id":100118694,"issue_id":731,"user_id":3096934,"body":"誤解を与えてしまったら申し訳ありません。立腹してませんのでご安心ください。\r\n画像は使えるのでしたらお使いください。\r\n問題は matchadd() は合成する仕様でなく、上書きする仕様なのになぜ dIff だけ例外になるのかということです。しかもパッチレベルで急に仕様を変更することで実害が出ていると思いますが、これでは説得力に欠けるでしょうか？","created_at":1431067005},{"id":100123377,"issue_id":731,"user_id":10111,"body":"元々、cursorline 上にハイライトを行うと、そこが欠けるという不具合がありました。\r\nそれを直したのが 7.4.682 なのです。ですので、「合成されていなかった」が故障内容で「合成される様になった」という修正内容になります。個人的には仕様変更ではなく「動かなかった物が動くようになった」という意識です。\r\n\r\nですが、7.4.682 は内部が使っている行色属性を使っている為、cursorline の問題は直りましたが、DiffChanged にも影響します。つまり、上記で仰られている内容は DiffChanged だけでなく CursorLine でも確認出来るはずです。これが今回の issue の内容と理解しています。\r\n\r\nこれに対して vim-dev の皆が\r\n\r\n* DiffChanged も cursorline と同じであるべきだ(現状が正しい)\r\n* 7.4.682 の修正は CursorLine だけに適用されるべきだ\r\n\r\nのどちらを言うのか次第だと思っています。ですのでまずは「どう思います？」という所から始める予定です。\r\n","created_at":1431067620},{"id":100128696,"issue_id":731,"user_id":10111,"body":"https://groups.google.com/forum/#!topic/vim_dev/BOAkHUFophc","created_at":1431068804},{"id":100150896,"issue_id":731,"user_id":3096934,"body":"CurorLine の場合は統合したほうが良いと判断されたのですね。diff ではこれと同じ基準を適用するのが正しいかどうかでぜひご判断ください。私個人としては逆に実害が出ていますので、実装上の都合だけから単に判断されないようによろしくお願いします。","created_at":1431073506},{"id":100152528,"issue_id":731,"user_id":10111,"body":"何度もすみません。その害と仰られる部分が聞きたいのですが、何が害なんでしょうか？上記の例の真ん中の`aaa`で言えば、DiffTextの一部と表現出来る方法があるとも取れるのですが。\r\n","created_at":1431073976},{"id":100168370,"issue_id":731,"user_id":3096934,"body":"了解しました。上記の diffchar.vim の画像で、DiffChange と DIffAdd でもボールドが残ってしまう部分です。別の例ですが、diff 部分が多いと、そこに残ったボールドとそれ以外の部分に何らかの違いがあるように見えてしまいます。ユーザーから見ると、vim を更新したことが理由であるとは納得されないように思うのですが、どうでしょうか。\r\n\r\n7.4.648 と 7.4.725 での diff  直後\r\n![before](https://cloud.githubusercontent.com/assets/3096934/7533393/0523285e-f5ac-11e4-9468-51b7dc79156e.png)\r\n\r\n7.4.648 での diffchar 抽出\r\n![after648](https://cloud.githubusercontent.com/assets/3096934/7533396/09fc0828-f5ac-11e4-9023-823dbf4debd9.png)\r\n\r\n7.4.725 での diffchar 抽出\r\n![after725](https://cloud.githubusercontent.com/assets/3096934/7533399/0eb543a2-f5ac-11e4-8ce8-28e4826998d4.png)\r\n","created_at":1431076330},{"id":100170533,"issue_id":731,"user_id":10111,"body":"こちらの画像もお借りして追記します。ありがとうございました。\r\n","created_at":1431077019},{"id":100172319,"issue_id":731,"user_id":3096934,"body":"よろしくお願いします。この例はデフォルトのままのハイライトで bold ですが、違いを目立たせるように bold, underline, italic を組み合わせている場合も多くあるようで、その場合はそれも残ってしまいます。","created_at":1431077348},{"id":100175043,"issue_id":731,"user_id":3096934,"body":"一応その画像も載せておきます。\r\n\r\n![before2](https://cloud.githubusercontent.com/assets/3096934/7534084/12dddb32-f5b2-11e4-9c8b-329b7732c5ec.png)\r\n\r\n![after6482](https://cloud.githubusercontent.com/assets/3096934/7534093/2bffec04-f5b2-11e4-8335-452a736513ec.png)\r\n\r\n![after7252](https://cloud.githubusercontent.com/assets/3096934/7534095/32157a5a-f5b2-11e4-9407-f2f17814dce1.png)\r\n","created_at":1431078279},{"id":100863151,"issue_id":731,"user_id":3096934,"body":"私1人だけでは何なので、vim_use で関心のある人の意見を聞いています。","created_at":1431340803},{"id":100871451,"issue_id":731,"user_id":518808,"body":"@ZBryce ++\r\n\r\nオフトピックになりますが1点だけ。\r\n\r\nfrom this issue's comment\r\n> しかもパッチレベルで急に仕様を変更すること\r\n\r\nfrom your vim_use post\r\n> I am a bit surprised at such a sudden change of the behavior anyway\r\n\r\nこれらはVimに関しては通常営業になります。(それが良いか悪いかの議論は別として)\r\nパッチレベルですごく変化がおこります。\r\n- [新しい正規表現エンジンが追加されたり (Patch 7.3.970)](https://groups.google.com/d/msg/vim_dev/niZ0QTP1ucw/xQbEuUzJ_yYJ)\r\n- [新しい組み込み関数が追加されたり (Patch 7.3.816)](https://groups.google.com/d/msg/vim_dev/AzxyThSaK1E/pb2Qz0urSmEJ)\r\n- 新しいオプションが追加されたり\r\n- [`:tabmove`のタブ移動パターンが変わったり (Patch 7.4.709)](https://groups.google.com/d/msg/vim_dev/aQBMHHRuyPg/wJwXqAKiXyMJ)\r\n- ...\r\n\r\n以上、事実をお伝えしました。\r\n","created_at":1431342781},{"id":105414454,"issue_id":731,"user_id":3096934,"body":"この回避策を考えているのですが、不明な動作がありましたので報告いたします。\r\nこれは vgim (7.4.729) の話です。colo default の状態です。\r\n\r\n一番最初に取り上げた例で diff 後に matchadd(\"Search\", \"aaa\") を行うと、中央の aaa は DiffText のボールドが残り、両側の aaa のハイライトとは異なります。これが7.4.682 での変更でした。\r\n![1](https://cloud.githubusercontent.com/assets/3096934/7806386/1a332e34-03bb-11e5-9edd-b1ea4885c9cb.png)\r\n\r\n(1) そこでこのボールドを上書きできないかと、hi serach font= で guifont オプションのフォントを指定してみたら、ボールドは消えてすべての aaa は同じハイライトになりました。\r\n![2](https://cloud.githubusercontent.com/assets/3096934/7806389/1f682bfc-03bb-11e5-97c1-c58a88e4d57f.png)\r\n\r\n(2) 次にボールド以外を試そうとして hi DiffText gui=italic にしたら、中央の aaa になぜかアンダーラインが付きました。\r\n![3](https://cloud.githubusercontent.com/assets/3096934/7806393/258eb46a-03bb-11e5-9c53-f0a9e67f9efb.png)\r\n\r\n(1) これは意図された動きなのでしょうか？\r\n(2) アンダーラインはどこにも指定されていないので不具合のようですが、いかがでしょうか？\r\n","created_at":1432621445},{"id":105435942,"issue_id":731,"user_id":10111,"body":"何度かやってるのですが再現しませんね。\r\n\r\n![](http://go-gyazo.appspot.com/3f1a2870981f8131.png)\r\n\r\nFixedSys で試しました。","created_at":1432627654},{"id":105446326,"issue_id":731,"user_id":3096934,"body":"Search がデフォルトのままですとこのようになりますが、font 属性は消えてないでしょうか？\r\n私の使っている 7.4.729 では FixedSys でも同じようにアンダーラインが付きます。\r\ngvim -u NONE で試してみました。\r\n![4](https://cloud.githubusercontent.com/assets/3096934/7808430/11eabd1a-03ce-11e5-8038-0b86082a0e34.png)","created_at":1432629664},{"id":105454595,"issue_id":731,"user_id":142094,"body":"再現できました\r\nvim-7.4.729 64bit on windows10tp\r\n\r\n```\r\n> gvim -u NONE -N\r\n:e a.txt\r\n:diffsplit b.txt\r\n:call matchadd(\"Search\", \"aaa\")\r\n:hi Search font=FixedSys\r\n:hi DiffText gui=italic\r\n```","created_at":1432630666},{"id":105459916,"issue_id":731,"user_id":10111,"body":"僕も再現出来ました。\r\nデフォルトでは `guifont` が設定されてなかったので自分で設定したのと、`h14:cSHIFTJIS` まで足さないと再現しなかったです。","created_at":1432631932},{"id":105472999,"issue_id":731,"user_id":3096934,"body":"diff 後の DiffText ハイライト部分を上書きする方法を模索しています。guifg、guibg は色を明示的に指定すればよいのですが、gui は迷っています。bold は font を指定することで消えるようですが、italic はこのような状態であり、underline は font を指定しても消えません。undercurl、reserve も同様に消えず、standout は bold が消えます。何が仕様で何が不具合なのか、確認させていただければと思います。\r\ncterm については font という概念がないですし、どうしたものかと悩んでいます。","created_at":1432634040},{"id":107181291,"issue_id":731,"user_id":3096934,"body":"いろいろと模索しましたが、色やフォント属性を指定して上書きするには限界がありそうなので、やめました。私の場合、DiffText の部分だけが問題ですので、まず highlight オプションを \"Tn\" に設定し、同じ部分を DiffText で matchadd することで見かけ上同じようにし、上書きできるようにしました。highlight オプションを変更すると、その都度 redraw されるので、ちらつくのがやや気になりますが、何とかなりました。プラグインも更新しました。いろいろとありがとうございました。","created_at":1433079482},{"id":133018789,"issue_id":731,"user_id":142094,"body":"フォント指定 + italic で下線が付く件\r\n\r\nフォントの斜体描画を下線で疑似表現してるらしいです。\r\n\r\nこのへん。\r\n\r\n```c\r\ngui.c:gui_outstr_nowrap()\r\n2376 #if defined(FEAT_GUI_GTK)\r\n2377     /* If there's no italic font, then fake it.\r\n2378      * For GTK2, we don't need a different font for italic style. */\r\n2379     if (hl_mask_todo & HL_ITALIC)\r\n2380         draw_flags |= DRAW_ITALIC;\r\n2381\r\n2382     /* Do we underline the text? */\r\n2383     if (hl_mask_todo & HL_UNDERLINE)\r\n2384         draw_flags |= DRAW_UNDERL;\r\n2385 #else\r\n2386     /* Do we underline the text? */\r\n2387     if ((hl_mask_todo & HL_UNDERLINE)\r\n2388 # ifndef MSWIN16_FASTTEXT\r\n2389             || (hl_mask_todo & HL_ITALIC)\r\n2390 # endif\r\n2391        )\r\n2392         draw_flags |= DRAW_UNDERL;\r\n2393 #endif\r\n```\r\n\r\nWindows でもフォントを切り替えるようにすればうまくできるのかもしれません。よくわかりませんが。","created_at":1440079254},{"id":96550530,"issue_id":730,"user_id":10111,"body":"fork しているのは gui.c の gui_do_fork(main.c からは gui_start 経由で呼ばれる)が、それよりも先に gui_init_check/gui_mch_init_check が呼ばれており、gtk_init_check が呼ばれてしまう。子側でも再度 gtk_init を呼び出せば直るんじゃないかと思ってるけど、誰か試して貰えませんか。","created_at":1430122580},{"id":96554352,"issue_id":730,"user_id":1528093,"body":"![screenshot from 2015-04-27 17 22 38](https://cloud.githubusercontent.com/assets/1528093/7343914/10fbe2ea-ed02-11e4-8358-d0a318017fe0.png)\r\n","created_at":1430122998},{"id":96556849,"issue_id":730,"user_id":10111,"body":"@crazymaster 再現します？\r\n","created_at":1430123238},{"id":96559317,"issue_id":730,"user_id":1528093,"body":"スクリーンショットの通り再現しますね","created_at":1430123417},{"id":96561518,"issue_id":730,"user_id":10111,"body":"同じ様に vim -gf だと表示されたりしますか？","created_at":1430123537},{"id":96563573,"issue_id":730,"user_id":1528093,"body":"vim -gf だと大丈夫ですね\r\n![screenshot from 2015-04-27 17 33 52](https://cloud.githubusercontent.com/assets/1528093/7344087/a0dfa45e-ed03-11e4-9b3e-88392bf3b9c6.png)\r\n","created_at":1430123664},{"id":96564680,"issue_id":730,"user_id":10111,"body":"ふむ。ありがとうございます。","created_at":1430123764},{"id":96567724,"issue_id":730,"user_id":41495,"body":"Ubuntu 14.04 上の Vim 7.4.688 ですが、`vim -gf`, `gvim`のどちらともGVim側には変換候補は表示されません。\r\n\r\n私はFcitxのXIM設定が「OnTheSpot」ではなく「OverTheSpot」になっているからだと理解していました。","created_at":1430124100},{"id":96580718,"issue_id":730,"user_id":11596277,"body":"Fcitxがそのようにしているからだと思います。\r\nhttps://github.com/fcitx/fcitx/pull/125/files","created_at":1430126468},{"id":96582245,"issue_id":730,"user_id":10111,"body":"つまりアプリケーション名が gvim である限り、治らないと。\r\nで、`vim -gf` はアプリケーション名が vim だから再現しないんですかね。","created_at":1430126821},{"id":96582306,"issue_id":730,"user_id":10111,"body":"環境変数 FCITX_NO_PREEDIT_APPS で直せるっぽく見えますね。\r\n","created_at":1430126853},{"id":96584360,"issue_id":730,"user_id":11596277,"body":"$ FCITX_NO_PREEDIT_APPS=\"tekitou\" fcitx -r\r\n$ gvim\r\nだと確かにプレエディットが出てくるようになりました。\r\nただ、選択部分が反転しないなどの問題があり、これは確かにブラックリストに放り込んだほうがいいのかなとは思いました。\r\nUbuntu 14.04のgvimで確認してます。","created_at":1430127325},{"id":96587166,"issue_id":730,"user_id":1528093,"body":"> 選択部分が反転しないなどの問題\r\n\r\nすみませんよく分からないのですが、どういう状況ですか？","created_at":1430128112},{"id":96588055,"issue_id":730,"user_id":11596277,"body":"![gedit-preedit](https://cloud.githubusercontent.com/assets/11596277/7345356/cd176b3c-ed0e-11e4-9c53-178d5418182e.png)\r\n![gvim-preedit](https://cloud.githubusercontent.com/assets/11596277/7345357/cd1fd5b0-ed0e-11e4-97ea-eacf037846d2.png)\r\n上がgeditでのプレエディット、下がgvimでのプレエディットです。","created_at":1430128498},{"id":96589045,"issue_id":730,"user_id":11596277,"body":"![gvim-preedit-off](https://cloud.githubusercontent.com/assets/11596277/7345429/672c4710-ed0f-11e4-881b-3554a3f7e825.png)\r\n現在のgvimのデフォルトです。これはテーマの関係で若干見にくいですが。","created_at":1430128750},{"id":96589383,"issue_id":730,"user_id":10111,"body":"fcitx に申し入れて、ブラックリストから外して貰うようにお願いた方がいいのかな。","created_at":1430128844},{"id":96596839,"issue_id":730,"user_id":11596277,"body":"個人的には、gvimのプレエディットが修正されない限りは今のままがいいのではないかと思います。","created_at":1430129594},{"id":96598442,"issue_id":730,"user_id":1528093,"body":"> gvimのプレエディット\r\n\r\n補完ウインドウがずれるという問題もありますか","created_at":1430130071},{"id":96602275,"issue_id":730,"user_id":1528093,"body":"> 補完ウインドウがずれるという問題もありますか\r\n\r\nおっと、gedit(3.10.4)でも起きるぞ","created_at":1430130943},{"id":96618898,"issue_id":730,"user_id":11596277,"body":"> 補完ウインドウがずれるという問題もありますか\r\n\r\nこれに対する回答は現段階では持ちあわせていません。すみません。","created_at":1430135331},{"id":96623209,"issue_id":730,"user_id":1528093,"body":"> 補完ウインドウがずれるという問題もありますか\r\n\r\n補足すると、サジェスト機能(mozcのみ存在？)で自動的に補完ウインドウが出る場合のみですね。\r\n変換キーを押して変換する場合はずれないです。\r\n","created_at":1430136551},{"id":96642839,"issue_id":730,"user_id":1528093,"body":"そもそも https://github.com/fcitx/fcitx/pull/125 が入った理由って\r\nsome problems としか書いてないけれど、\r\n[Re: Problem with gvim, latexsuite and japanese input - Google グループ](https://groups.google.com/d/topic/vim_dev/SK3t_RsWMqM/discussion)\r\nこれが理由だったのですかね？","created_at":1430139829},{"id":99514873,"issue_id":730,"user_id":1528093,"body":">選択部分が反転しないの問題\r\n\r\n[Re: Problem with gvim, latexsuite and japanese input - Google グループ](https://groups.google.com/d/topic/vim_dev/SK3t_RsWMqM/discussion)\r\nここのパッチを適用すると反転するようになります。\r\nただし、描画に[問題](https://github.com/vim-jp/issues/issues/545#issuecomment-99509617)があります。\r\n","created_at":1430926259},{"id":100411136,"issue_id":728,"user_id":518808,"body":"```\r\n  # TO tag         FROM line  in file/text\r\n  1  1 maketitle        3299  buffer.c\r\n  2  1 trunc_string     3420  buffer.c\r\n```\r\n`trunc_string()`の第3引数`room`が最大表示セル数かな？\r\n\r\nそれで第3引数に渡している`maxlen`を設定しているのが以下のコード。\r\nsrc/buffer.c: 3324~\r\n```c\r\n    if (p_title)\r\n    {\r\n        if (p_titlelen > 0)\r\n        {\r\n            maxlen = p_titlelen * Columns / 100;          //●\r\n            if (maxlen < 10)\r\n                maxlen = 10;\r\n        }\r\n        ～\r\n```\r\n`Columns`が出てくるのおかしくないですか？\r\n`Columns`ってGVimの時は`guifont`で変わるけどWindowタイトルのフォントサイズは`guifont`に影響しないから`Columns`を参照しちゃいかんでしょ？","created_at":1431137152},{"id":100580332,"issue_id":728,"user_id":518808,"body":"'titlelen'オプションの単位は ％ なのかー!! だから100で割っているんだね。\r\n\r\nsrc/gui_mac.c の'gui_mch_settitle()'の冒頭に以下のコメントが書いてた。\r\n```c\r\n    /* TODO: Get vim to make sure maxlen (from p_titlelen) is smaller\r\n     *       that 256. Even better get it to fit nicely in the titlebar.\r\n     */\r\n```\r\n\r\n`set titlelen=3000`としておけば大概は切り詰められずに全部表示される訳か。全部表示しきれないかもしれんけどｗ\r\n\r\n各プラットフォームで正確なｗｉｎｄｏｗタイトル長を取得出来ないんでしょうか？","created_at":1431228945},{"id":105253795,"issue_id":728,"user_id":10111,"body":"buffer.c の 3438\r\n```c\r\n\t    if (maxlen > 0)\r\n\t    {\r\n\t\t/* make it shorter by removing a bit in the middle */\r\n\t\tif (vim_strsize(buf) > maxlen)\r\n\t\t    trunc_string(buf, buf, maxlen, IOSIZE);\r\n\t    }\r\n```\r\nmaxlen はカラム数(ウィンドウ幅に対してフォントの大きさで割った物)とtitlelen(%)で計算した値です。これはタイトルは vim を起動しているのと同じ端末で表示されることを期待した処理ですね。まぁ、screen/tmux 等で表示される場合の事も考えるともっともな気がしますね。\r\ngvimの場合は端末幅は関係無いですし、Window Manager によっては `...` 処理などはそっちがよろしくやってくれる場合もあります。コードを見る限り、`...`を使ってでもサーバ名は出すという仕様ですが、ウィンドウマネージャのタイトルフォントがどの大きさかなんて分かり得ないので、省略しようが無いと思いますね。\r\nなので\r\n* CUI の場合はタイトルはコンソールで表示されるはずなのでColumns内に収まる様に\r\n* GUI の場合は省略のやりようが無いのでWindow Managerに任せる\r\nというのが良いと思います。\r\n\r\n```diff\r\ndiff -r 9782a8aa2d7f src/buffer.c\r\n--- a/src/buffer.c\tWed May 06 11:33:47 2015 +0200\r\n+++ b/src/buffer.c\tTue May 26 00:39:26 2015 +0900\r\n@@ -3435,7 +3435,11 @@\r\n #endif\r\n \t\tSTRCAT(buf, \" - VIM\");\r\n \r\n-\t    if (maxlen > 0)\r\n+\t    if (maxlen > 0\r\n+#if defined(FEAT_GUI)\r\n+\t\t&& !gui.in_use\r\n+#endif\r\n+\t\t)\r\n \t    {\r\n \t\t/* make it shorter by removing a bit in the middle */\r\n \t\tif (vim_strsize(buf) > maxlen)\r\n```\r\n","created_at":1432568562},{"id":105253883,"issue_id":728,"user_id":10111,"body":"linux 前提で書きましたが、windows でも同じですね。","created_at":1432568611},{"id":105258808,"issue_id":728,"user_id":10111,"body":"別解として、guifont が大きくなったら titlelen を大きくするスクリプトを書けば良さそう。","created_at":1432570392},{"id":105351300,"issue_id":728,"user_id":518808,"body":"@mattn コメントthanks!\r\n\r\n> ウィンドウマネージャのタイトルフォントがどの大きさかなんて分かり得ない\r\n\r\nWindows 7だと\r\nコントロール パネル→個人設定→ウィンドウの色とデザイン→デザインの詳細設定 で表示される画面で `アクティブ タイトル バー` を選ぶとfontサイズが参照/設定出来るので、プログラムからも取得可能だと思ってます...けどアクティブ/非アクティブとかあって面倒そう。\r\n![win_title_fontsize](https://cloud.githubusercontent.com/assets/518808/7803806/c33c36ec-0393-11e5-880d-b006e1679d1f.png)\r\n\r\nGetSystemMetrics（）\r\nhttps://msdn.microsoft.com/ja-jp/library/cc429812.aspx\r\n","created_at":1432604583},{"id":105359061,"issue_id":728,"user_id":10111,"body":"API で取れるのは知ってるんですが、テーマを使うとタイトルの両端が装飾によりいくらかけずられて、実際どれくらい描画出来るのか分からないんですよね。`[＿][□][×]`ボタンの大きさも違ってくるので。","created_at":1432605777},{"id":105381921,"issue_id":728,"user_id":840186,"body":"ファイル名を適当に省略してくれるWin32 APIがあったはずと思って調べてみたのですが、今回の用途には合っていないですね。\r\nhttp://miya.s60.xrea.com/vc01.html#label5\r\n* PathSetDlgItemPath()\r\n* PathCompactPath()\r\n* DrawText() で DT_PATH_ELLIPSIS を指定","created_at":1432612401},{"id":105388971,"issue_id":728,"user_id":518808,"body":"> API で取れるのは知ってるんですが、テーマを使うとタイトルの両端が装飾によりいくらかけずられて、実際どれくらい描画出来るのか分からないんですよね。[＿][□][×]ボタンの大きさも違ってくるので。\r\n\r\nそのための'titlelen'オプション(デフォルト85%)な気がします。\r\n(guiの場合は) windowの横ピクセルサイズ ／ タイトルバーのフォントピクセルサイズ で大体のタイトル表示可能文字数をアバウトに求めて、それに'titlelen'オプションの値(％)を考慮したものをmaxlenに設定するようにすればいいんじゃないでしょうか。\r\n\r\n@k-takata thanks.\r\n> 今回の用途には合っていないですね。\r\n\r\nそうですね。今回の問題は「表示領域いっぱいあるのにちょびっとしか使っていない」なので。","created_at":1432614084},{"id":105389915,"issue_id":728,"user_id":10111,"body":"タイトルのフォントがアンプロポーショナルフォントとは限りませんからね。\r\nその意味でも titlelen が % なんだと思います。\r\n","created_at":1432614690},{"id":91844337,"issue_id":723,"user_id":518808,"body":"私はdiff.exeは[DiffUtils for Windows](http://gnuwin32.sourceforge.net/packages/diffutils.htm)のを使ってます。\r\n\r\nもしかしてその外国人さん、vimの`-d`オプションを知らないとか、`:vert diffsplit`を知らないとかはないですよね？","created_at":1428758795},{"id":91845519,"issue_id":723,"user_id":1528093,"body":">[DiffUtils for Windows](http://gnuwin32.sourceforge.net/packages/diffutils.htm)\r\n\r\nバージョンが古いんですよねえ","created_at":1428759667},{"id":91845816,"issue_id":723,"user_id":518808,"body":"@crazymaster あっ、ほんとだ。上記サイトで配布してるの 2.8.7 だけど最新は 3.3 ですね。","created_at":1428759952},{"id":91864655,"issue_id":723,"user_id":468368,"body":"> Yes, I am using gnu utils for windows. I have infact installed them in the same directory as vim and done some additions to the paths so that vimdiff will use the gnu diff.\r\n\r\nってそのあとのメールで言ってました。\r\n\r\n単に diff.exe (を別に入れるの面倒だから) 一緒に入ってたら、もっと便利なんじゃないか\r\nっていう suggestion だと捉えています。\r\n\r\nなので MSVC でコンパイル(できるならば)した diff.exe を入れるか vim-diff かくらいが良いのかなぁ、と。","created_at":1428763720},{"id":91866147,"issue_id":723,"user_id":518808,"body":"@koron 理解しました。そして全部同意:+1:\r\nvim-diffは使ったことないのですけど、処理速度はdiff.exeと比べてどうなんでしょう。\r\nそこまで違いがなければvim-diffでいいかも。","created_at":1428764119},{"id":91866890,"issue_id":723,"user_id":468368,"body":"以前試した時は、小さなファイルだと気にならない & 大きなファイルだと、うーんみたいな\r\n予想の範囲だとは思います。\r\n\r\ndiff.exe を入れる場合は場合は…やっぱMSVCランタイム使いたいですよね。","created_at":1428764231},{"id":91869454,"issue_id":723,"user_id":468368,"body":"…vim-diffからC89レベルに再移植するって考え方もあるかw","created_at":1428766011},{"id":110728234,"issue_id":723,"user_id":518808,"body":"ちょっとだけ関係ありそうなのでリンク貼っておく。\r\n\r\nHow to force Vim to use more advance diff between two files?\r\nhttps://groups.google.com/d/msg/vim_use/oeHABkm94hM/Wk9ohW2XAGoJ\r\n","created_at":1433938898},{"id":173216219,"issue_id":723,"user_id":840186,"body":"Bramが、外部プログラムを使わないようにできれば最善だろうと。\r\nhttps://groups.google.com/d/msg/vim_dev/dAXpcpHmVw4/5WUM6Y6gAQAJ\r\n\r\n> BTW: If someone wants to spend time on this, the best solution would be\r\n> not to use an external diff program.  Writing the temp files, invoking\r\n> diff and parsing the result has a lot of overhead. \r\n\r\nで、それに対して、やってみたいという人が。\r\nhttps://groups.google.com/d/msg/vim_dev/dAXpcpHmVw4/YRTt1h0sBAAJ","created_at":1453299449},{"id":195965635,"issue_id":723,"user_id":10111,"body":"関連?\r\n\r\nhttps://groups.google.com/forum/#!topic/vim_dev/kKqMdCGLfhg","created_at":1457879830},{"id":195966741,"issue_id":723,"user_id":518808,"body":"@mattn なんで急にAppVeyorがエラーになったんでしょうか？","created_at":1457880241},{"id":195967547,"issue_id":723,"user_id":10111,"body":"わかんないんです。一瞬\r\n\r\nhttps://groups.google.com/forum/#!topic/vim_dev/bZwZ_PD263U\r\n\r\nこれでテスト足された物の中に失敗する in/out/ok がいるのかな？と思ったんですが(これまで失敗してなかった\r\nだけ？)、そうでもなさそうですしね。","created_at":1457880501},{"id":195970983,"issue_id":723,"user_id":518808,"body":"@mattn 発端のpatch(7.4.1554)が自分が書いたpatchだったので焦りました。特にtrickyな変更を入れたつもりは無かったので(汗)","created_at":1457880935},{"id":195991508,"issue_id":723,"user_id":840186,"body":"AppVeyorのビルドイメージの更新があったようで、その際にデグレしたように思われます。すでに直ったようですが。","created_at":1457887086},{"id":195993893,"issue_id":723,"user_id":840186,"body":"ちなみに、AppVeyorでは（確か）少なくとも4つ、diff.exeが入っています。\r\n\r\n* Git for Windows 同梱\r\n* Cygwin\r\n* MSYS2\r\n* MSYS\r\n\r\nで、Git for Windowsの`C:\\Program Files\\Git\\usr\\bin\\` がPATHに入っています。","created_at":1457887551},{"id":92554211,"issue_id":722,"user_id":1528093,"body":"@hail2u さんが詳しそう","created_at":1428974891},{"id":92655676,"issue_id":722,"user_id":68940,"body":"[コロンとセミコロンを使ってレンジを作る][1]ようにすることで、プロパティーの`left` (例えば`left: 10px;`)と値の`left` (例えば`float: left;`)のハイライトを区別できるようになった(多分7.3系のやつから)影響によるregressionバグだと思う。\r\n\r\nエスケープの方もセミコロンのエスケープ他で崩れているように見えるので、この辺りをエスケープを考慮して`}`でもレンジが終了するように修正すれば直りそう。ただかなり難易度は高いような気がする。\r\n\r\nいずれにしても[メンテナーさんが開発してるGitHubのリポジトリー][2]でやった方が良さそう。\r\n\r\n[1]: https://github.com/vim/vim/blob/master/runtime/syntax/css.vim#L496\r\n[2]: https://github.com/JulesWang/css.vim","created_at":1428994278},{"id":92657563,"issue_id":722,"user_id":10111,"body":"https://github.com/JulesWang/css.vim/issues/53","created_at":1428994790},{"id":93952508,"issue_id":722,"user_id":10111,"body":"2件は既に直ってた様です。最新版を vim-dev に送ってくれるとの事。","created_at":1429263214},{"id":86430255,"issue_id":721,"user_id":10111,"body":"例では`き`をタイプしましたが、`k` では発生せず `i` をタイプした際に発生する。","created_at":1427363795},{"id":86431236,"issue_id":721,"user_id":10111,"body":"あともう1点言える事があって、`()` が無いと再現しないのです。","created_at":1427363970},{"id":86438943,"issue_id":721,"user_id":10111,"body":"```\r\n2015年2月28日(土)　(日)\r\n```\r\nでも再現","created_at":1427365092},{"id":86439484,"issue_id":721,"user_id":10111,"body":"```\r\n日(土)　(日)\r\n```\r\nでも再現\r\n","created_at":1427365171},{"id":86440624,"issue_id":721,"user_id":10111,"body":"```\r\n日(土)(日)\r\n```\r\nでは再現せず","created_at":1427365420},{"id":86440679,"issue_id":721,"user_id":468368,"body":"さいげんしたw","created_at":1427365436},{"id":86440838,"issue_id":721,"user_id":10111,"body":"数年越しのﾅｶｰﾏ!","created_at":1427365454},{"id":86440848,"issue_id":721,"user_id":468368,"body":"ごめんこうふんしすぎて、とじちゃった(；´∀｀)","created_at":1427365455},{"id":86441605,"issue_id":721,"user_id":518808,"body":"```\r\n$ vim -N -u NONE\r\n```\r\nでも再現します？\r\n画像を見る限り`matchparen.vim`は動いてそう。","created_at":1427365526},{"id":86441780,"issue_id":721,"user_id":468368,"body":"ちなみに私が使ったのは Google IME\r\n\r\n未確定なんだけど `:e test.txt` で開いた時は大丈夫で、 \r\n`vim test.txt` で開くと発生したのかもしれない。","created_at":1427365545},{"id":86443724,"issue_id":721,"user_id":10111,"body":">>$ vim -N -u NONE\r\n>でも再現します？\r\n>画像を見る限りmatchparen.vimは動いてそう。\r\n\r\n`vim -N -u NONE` では再現してなさそうです。元々再現率がよろしくないので確定かどうか分かりませんが。","created_at":1427365803},{"id":86444020,"issue_id":721,"user_id":10111,"body":"ちなみに、色んな現象が出ます。一番ひどい時はチカチカと愛生会病院みたいになりました。\r\n","created_at":1427365841},{"id":86445686,"issue_id":721,"user_id":518808,"body":"`enc`と`fenc`の値を教えて下さい。","created_at":1427366257},{"id":86447037,"issue_id":721,"user_id":10111,"body":"再現可能な最少のvimrc作るのでお待ちください。","created_at":1427366509},{"id":86447840,"issue_id":721,"user_id":10111,"body":"出来ました！\r\n```\r\nset nocp\r\n```\r\nだけでok!\r\n```\r\n日(土)　(日)\r\n```\r\nと書かれたファイルを\r\n```\r\nC:\\>vim -u bugrc.vim -N bug.txt\r\n```\r\nで開いて上の手順で再現します。デフォルトなのでcp932ですが、上では自分のvimrc(encoding=utf-8)を使っても再現するのでエンコーディング依存ではなさそうです。\r\n","created_at":1427366665},{"id":86451563,"issue_id":721,"user_id":518808,"body":"ファイルのエンコードは`cp932`ですね。\r\n\r\n```\r\nvim -N -u NORC bug.txt\r\n```\r\nで再現しました！！(Vim 7.4.648 kaoriya 32bit on Windows 7sp1 32bit via コマンドプロンプト)\r\n\r\n```\r\nvim -N -u NORC bug.txt --cmd \"let loaded_matchparen = 1\"\r\n```\r\n↑これで再現するか確認お願いします。私のとこでは今のところ再現してません(十数回程度)","created_at":1427367323},{"id":86453273,"issue_id":721,"user_id":10111,"body":"再現してないっぽいです。matchparen.vim の174行目\r\n```\r\n      call matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10, 3)\r\n```\r\nこの行止めたら再現しなくなります。\r\n","created_at":1427367960},{"id":86453932,"issue_id":721,"user_id":10111,"body":"これguiでも再現する人いるんだろうか","created_at":1427368114},{"id":86461896,"issue_id":721,"user_id":10111,"body":"たぶん上で書いた入力途中とかはあまり関係なくて、特定のmatchaddposの条件に入った時にメモリ破壊してるんじゃないかと思う。","created_at":1427368777},{"id":86470485,"issue_id":721,"user_id":10111,"body":"一応、デバッグされる皆さんにお伝えしておくと、この現象に入った後コマンドプロンプトが強制で閉じます。\r\nでも後ろで vim.exe が CPU100% (2コアなら片方が100%)で生きてるので、プロセス強制終了して下さい。","created_at":1427369335},{"id":86472260,"issue_id":721,"user_id":10111,"body":"再現パターン続報、挿入する文字は英数字では再現しない。マルチバイトで再現する。","created_at":1427369441},{"id":86480428,"issue_id":721,"user_id":10111,"body":"Linux で再現しないなー。なんでだろ。あと gvim.exe でも再現しない。","created_at":1427370751},{"id":86485352,"issue_id":721,"user_id":840186,"body":"香り屋版vim.exeだと再現したのですが、自前ビルドのvim.exeでは再現せず…。\r\nCPU100%になった時点でデバッガでアタッチして、どこでCPUを食っているのか調べようかと思ったのですが断念。","created_at":1427371654},{"id":86485421,"issue_id":721,"user_id":468368,"body":"CUIのIME経由の入力で、中途半端なバイトが挿入されて、それが正規表現エンジンを暴走させてる、とかとか。","created_at":1427371689},{"id":86487738,"issue_id":721,"user_id":468368,"body":"デバッガから起動すると発生しにくい。\r\n\r\nただ発生した時に止めたら、\r\n`read_console_input()` の `nLength` が `4294967295` になってた。\r\nこれは `peek_console_input()` から呼ばれる時なので、1つ上のスタックでは-1 だった。","created_at":1427372573},{"id":86495059,"issue_id":721,"user_id":468368,"body":"とりあえず私のほうで試したこと。\r\n\r\nファイル(721.txt)の内容\r\n\r\n    2015年2月28日(土)　(日)\r\n\r\n実行したVim:  64ビットデバッグ版 - MSVC 10\r\n\r\n起動コマンド:\r\n\r\n    vimd.exe -N -u NORC 721.txt\r\n\r\n操作手順\r\n\r\n   1. `%` で `(土)` の `)` にジャンプ\r\n   2. `b` で `土` にカーソルをあわせる\r\n   3. `cw` で挿入モードに入り、Google IMEを起動\r\n   4. `き` (`ki`) を入力\r\n\r\nデバッグ手順\r\n\r\n1.  `f_matchaddpos()` の先頭にブレイクポイントを設置し、無効化\r\n2.  操作手順3までを実行する\r\n3.  デバッグ1で設置したブレイクポイントを有効化\r\n4.  操作手順4を実行\r\n   *   `2015年2月28日(き)　(` あたりまでの描画が乱れる\r\n   *   上記ブレイクポイントには引っかからない & 落ちない\r\n\r\n5. あるぇ? (´・ω・`)","created_at":1427373636},{"id":86497536,"issue_id":721,"user_id":10111,"body":"そうそうそれなった。試しに200とかにしても再現した。\r\n\r\nOn 3/26/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> デバッガから起動すると発生しにくい。\r\n>\r\n> ただ発生した時に止めたら、\r\n> `read_console_input()` の `nLength` が `4294967295` になってた。\r\n> これは `peek_console_input()` から呼ばれる時なので、1つ上のスタックでは-1 だった。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86487738\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427373947},{"id":86497743,"issue_id":721,"user_id":9251039,"body":"VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Feb  4 2015 08:59:43)\r\nwin8.1 64bit\r\n\r\n何度か以下のようなダイアログを出しつつ落ちました。\r\n![vim-jp-721_03](https://cloud.githubusercontent.com/assets/9251039/6846154/3944f7e4-d3ff-11e4-9a69-1e0d7e4f3664.png)\r\n\r\n以下のVersionだとあまり落ちない＆＆ダイアログでないです。\r\nVIM - Vi IMproved 7.4 (2013 Aug 10, compiled Mar  1 2015 11:38:31)\r\nMS-Windows 32 ビット コンソール 版\r\n適用済パッチ: 1-648\r\n\r\nCPUは貼りつかないです。","created_at":1427373971},{"id":86502148,"issue_id":721,"user_id":468368,"body":"現時点の予想だと、コンソールにおいてIMEとVim(matchparenによるシンタックス)の操作がかち合って、\r\n内部状態を破壊しているんじゃなかろうか。\r\n\r\n`ki` とか `ta` とかをそれなりに高速にタイプした時に、ハングしているみたい。","created_at":1427374478},{"id":86572921,"issue_id":721,"user_id":468368,"body":"アプリケーションログに以下のような記録が残ってた。\r\n\r\n```\r\nVersion=1\r\nEventType=APPCRASH\r\nEventTime=130718480922303873\r\nReportType=2\r\nConsent=1\r\nUploadTime=130718480922593890\r\nReportIdentifier=4a99e843-d3b7-11e4-a9fb-f46d048e0c48\r\nIntegratorReportIdentifier=4a99e842-d3b7-11e4-a9fb-f46d048e0c48\r\nResponse.BucketId=135483079\r\nResponse.BucketTable=20\r\nResponse.type=4\r\nSig[0].Name=アプリケーション名\r\nSig[0].Value=conhost.exe\r\nSig[1].Name=アプリケーションのバージョン\r\nSig[1].Value=6.1.7601.18229\r\nSig[2].Name=アプリケーションのタイムスタンプ\r\nSig[2].Value=51fb06ba\r\nSig[3].Name=障害モジュールの名前\r\nSig[3].Value=StackHash_8eeb\r\nSig[4].Name=障害モジュールのバージョン\r\nSig[4].Value=6.1.7601.18247\r\nSig[5].Name=障害モジュールのタイムスタンプ\r\nSig[5].Value=521eaf24\r\nSig[6].Name=例外コード\r\nSig[6].Value=c0000374\r\nSig[7].Name=例外オフセット\r\nSig[7].Value=00000000000c4102\r\nDynamicSig[1].Name=OS バージョン\r\nDynamicSig[1].Value=6.1.7601.2.1.0.256.1\r\nDynamicSig[2].Name=ロケール ID\r\nDynamicSig[2].Value=1041\r\nDynamicSig[22].Name=追加情報 1\r\nDynamicSig[22].Value=8eeb\r\nDynamicSig[23].Name=追加情報 2\r\nDynamicSig[23].Value=8eeb811742fc7164afcf990286d51768\r\nDynamicSig[24].Name=追加情報 3\r\nDynamicSig[24].Value=0e49\r\nDynamicSig[25].Name=追加情報 4\r\nDynamicSig[25].Value=0e494e7cfc8c0cb398a9c921fe606956\r\nUI[2]=C:\\Windows\\system32\\conhost.exe\r\nUI[3]=コンソール ウィンドウ ホスト は動作を停止しました\r\nUI[4]=問題の解決策をオンラインで確認できます。\r\nUI[5]=オンラインで解決策を確認してプログラムを終了します\r\nUI[6]=オンラインで解決策を後で確認してプログラムを終了します\r\nUI[7]=プログラムを終了します\r\nLoadedModule[0]=C:\\Windows\\system32\\conhost.exe\r\nLoadedModule[1]=C:\\Windows\\SYSTEM32\\ntdll.dll\r\nLoadedModule[2]=C:\\Windows\\system32\\kernel32.dll\r\nLoadedModule[3]=C:\\Windows\\system32\\KERNELBASE.dll\r\nLoadedModule[4]=C:\\Windows\\system32\\GDI32.dll\r\nLoadedModule[5]=C:\\Windows\\system32\\USER32.dll\r\nLoadedModule[6]=C:\\Windows\\system32\\LPK.dll\r\nLoadedModule[7]=C:\\Windows\\system32\\USP10.dll\r\nLoadedModule[8]=C:\\Windows\\system32\\msvcrt.dll\r\nLoadedModule[9]=C:\\Windows\\system32\\IMM32.dll\r\nLoadedModule[10]=C:\\Windows\\system32\\MSCTF.dll\r\nLoadedModule[11]=C:\\Windows\\system32\\ole32.dll\r\nLoadedModule[12]=C:\\Windows\\system32\\RPCRT4.dll\r\nLoadedModule[13]=C:\\Windows\\system32\\OLEAUT32.dll\r\nLoadedModule[14]=C:\\Windows\\system32\\uxtheme.dll\r\nLoadedModule[15]=C:\\Windows\\system32\\apphelp.dll\r\nLoadedModule[16]=C:\\Windows\\system32\\GIMEJA.IME\r\nLoadedModule[17]=C:\\Windows\\system32\\ADVAPI32.dll\r\nLoadedModule[18]=C:\\Windows\\SYSTEM32\\sechost.dll\r\nLoadedModule[19]=C:\\Windows\\system32\\PSAPI.DLL\r\nLoadedModule[20]=C:\\Windows\\system32\\SHELL32.dll\r\nLoadedModule[21]=C:\\Windows\\system32\\SHLWAPI.dll\r\nLoadedModule[22]=C:\\Windows\\system32\\dbghelp.dll\r\nLoadedModule[23]=C:\\Windows\\system32\\OLEACC.dll\r\nLoadedModule[24]=C:\\Windows\\system32\\profapi.dll\r\nLoadedModule[25]=C:\\Windows\\system32\\dwmapi.dll\r\nLoadedModule[26]=C:\\Windows\\WinSxS\\amd64_microsoft.windows.common-controls_6595b\r\n64144ccf1df_6.0.7601.17514_none_fa396087175ac9ac\\comctl32.DLL\r\nLoadedModule[27]=C:\\Windows\\system32\\CRYPTBASE.dll\r\nLoadedModule[28]=C:\\Windows\\system32\\CLBCatQ.DLL\r\nState[0].Key=Transport.DoneStage1\r\nState[0].Value=1\r\nState[1].Key=DataRequest\r\nState[1].Value=Bucket=135483079/nBucketTable=20/nResponse=1/n\r\nFriendlyEventName=動作が停止しました\r\nConsentKey=APPCRASH\r\nAppName=コンソール ウィンドウ ホスト\r\nAppPath=C:\\Windows\\system32\\conhost.exe\r\n```\r\n\r\n相方のconhost.exeが落ちてvimがおかしくなってるんじゃないかな。\r\nだとすればVimを追って辿り着くのは…一般的にはかなり難しそう。","created_at":1427383976},{"id":86756265,"issue_id":721,"user_id":468368,"body":"vimを起動して conhost.exe にデバッガアタッチすると、例外捕捉してこうなりました。\r\n\r\n![conhost-attached](https://cloud.githubusercontent.com/assets/468368/6859613/36d6a5fc-d45e-11e4-8fb0-a0a4144cb14b.png)\r\n\r\n0x3DD00 (RCX) に AX を書こうとして、書けなくて落ちてます。\r\n","created_at":1427413842},{"id":86816394,"issue_id":721,"user_id":10111,"body":"```diff\r\ndiff -r 88b829656499 src/screen.c\r\n--- a/src/screen.c\tTue Mar 24 18:22:42 2015 +0100\r\n+++ b/src/screen.c\tFri Mar 27 13:31:53 2015 +0900\r\n@@ -3916,12 +3916,6 @@\r\n \t\t\t\t&& v >= (long)shl->startcol\r\n \t\t\t\t&& v < (long)shl->endcol)\r\n \t\t\t{\r\n-#ifdef FEAT_MBYTE\r\n-\t\t\t    int tmp_col = v + MB_PTR2LEN(ptr);\r\n-\r\n-\t\t\t    if (shl->endcol < tmp_col)\r\n-\t\t\t\tshl->endcol = tmp_col;\r\n-#endif\r\n \t\t\t    shl->attr_cur = shl->attr;\r\n \t\t\t}\r\n \t\t\telse if (v == (long)shl->endcol)\r\n```\r\nこれじゃね？\r\nendcol が本来指しちゃいけないバッファの終端に移動してしまう事でコンソールに不正なバッファを書いてコンソールが死ぬ。どうでしょ？","created_at":1427430778},{"id":86817356,"issue_id":721,"user_id":10111,"body":"うむ。なんかまだおかしい。","created_at":1427431290},{"id":86818748,"issue_id":721,"user_id":518808,"body":"@mattn その部分、私がVim 7.4.545で追加したとこですね。\r\nhttps://groups.google.com/d/msg/vim_dev/HA2Lc7FTkLw/cLrcrK483-cJ","created_at":1427431773},{"id":86820103,"issue_id":721,"user_id":10111,"body":"@h-east これなんで FEAT_MBYTE の場合だけなんでしょ？","created_at":1427431950},{"id":86821154,"issue_id":721,"user_id":468368,"body":"\\# ここ数年悩んでいた問題なら 7.4.545 で追加したところ以外でも、問題は出そう…","created_at":1427432083},{"id":86821780,"issue_id":721,"user_id":518808,"body":"関連するvim_devの投稿\r\nhttps://groups.google.com/d/msg/vim_dev/48Ib2OE6h6c/YmYZ0CGn3CcJ\r\n\r\nPatch 7.4.361以前でもバグが再現すれば私は無実だと思うんです。","created_at":1427432170},{"id":86822085,"issue_id":721,"user_id":10111,"body":"怪しんでる訳じゃないんです。\r\nなんでこの辺があやしいと感じたかというと\r\n```c\r\n\t\t\t\t/* Loop to check if the match starts at the\r\n\t\t\t\t * current position */\r\n\t\t\t\tcontinue;\r\n```\r\nこのcontinue抜くと途端に落ちなくなるんです。\r\n","created_at":1427432266},{"id":86823366,"issue_id":721,"user_id":518808,"body":"> これなんで FEAT_MBYTE の場合だけなんでしょ？\r\n\r\nsingle byteの場合はいつか必ず 3927行の\r\n```c\r\nelse if (v == (long)shl->endcol)\r\n```\r\nの条件に一致するけど、マルチバイトの場合にはそうじゃないからですね。","created_at":1427432504},{"id":86824012,"issue_id":721,"user_id":10111,"body":"シングルバイトの場合は `+1` どこかでされているはずだと思うんですが、どこでしょうか？\r\nそこが `has_mbyte` になるべきだと思うのですが。","created_at":1427432584},{"id":86828601,"issue_id":721,"user_id":518808,"body":"`v`の更新は3894行目\r\n```c\r\n                v = (long)(ptr - line);\r\n```\r\n`line`は3517行目\r\n```c\r\n        line = ml_get_buf(wp->w_buffer, lnum, FALSE);\r\n```\r\nで更新されてずっと変わらない。\r\n\r\nそして`ptr`は4335行目\r\n```c\r\n++ptr;\r\n```\r\nをはじめいろんなところでいじられている。\r\n\r\n===\r\n\r\n>> 怪しんでる訳じゃないんです。\r\n\r\n> \\# ここ数年悩んでいた問題なら 7.4.545 で追加したところ以外でも、問題は出そう…\r\n\r\n同意見です。\r\nscript実行とキー入力のタイミングの問題だと思うのでまずPatch 7.4.361以前で試して欲しい。\r\n","created_at":1427433591},{"id":86829017,"issue_id":721,"user_id":10111,"body":"僕の↑はこのissueと関係ない質問です。すんません。`++ptr` してるとこを has_mbyte だと問題があったのかなーという程度の疑問です。","created_at":1427433745},{"id":86829211,"issue_id":721,"user_id":518808,"body":"@mattn Sure. :ok_hand:","created_at":1427433855},{"id":86833666,"issue_id":721,"user_id":10111,"body":"解せないのが\r\n```vim\r\nscriptencoding utf-8\r\nnew\r\ncall setline(1, '日(土)　(日)')\r\nnormal! gg2l\r\nredraw!\r\nsleep 1\r\ncall feedkeys('cwあ', 't')\r\n```\r\nだと再現しないんだよなー。","created_at":1427434672},{"id":86841901,"issue_id":721,"user_id":10111,"body":"えーっと\r\n\r\nいろいろ試した結果、落ちなくするパッチは現状こうなりました。。。\r\n```diff\r\ndiff -r 88b829656499 src/os_win32.c\r\n--- a/src/os_win32.c\tTue Mar 24 18:22:42 2015 +0100\r\n+++ b/src/os_win32.c\tFri Mar 27 15:31:38 2015 +0900\r\n@@ -5398,8 +5398,10 @@\r\n     COORD coord = g_coord;\r\n     DWORD written;\r\n \r\n+#if 0\r\n     FillConsoleOutputAttribute(g_hConOut, g_attrCurrent, cchToWrite,\r\n \t\t\t\tcoord, &written);\r\n+#endif\r\n     /* When writing fails or didn't write a single character, pretend one\r\n      * character was written, otherwise we get stuck. */\r\n     if (WriteConsoleOutputCharacter(g_hConOut, pchBuf, cchToWrite,\r\n```\r\n","created_at":1427437957},{"id":86842238,"issue_id":721,"user_id":10111,"body":"なんか IME が付ける色とバッティングして死んでる気がする。","created_at":1427438149},{"id":86842342,"issue_id":721,"user_id":10111,"body":"どうやらビンゴっぽい。\r\n```diff\r\ndiff -r 88b829656499 src/os_win32.c\r\n--- a/src/os_win32.c\tTue Mar 24 18:22:42 2015 +0100\r\n+++ b/src/os_win32.c\tFri Mar 27 15:38:18 2015 +0900\r\n@@ -5398,7 +5398,7 @@\r\n     COORD coord = g_coord;\r\n     DWORD written;\r\n \r\n-    FillConsoleOutputAttribute(g_hConOut, g_attrCurrent, cchToWrite,\r\n+    FillConsoleOutputAttribute(g_hConOut, g_attrCurrent, 1,\r\n \t\t\t\tcoord, &written);\r\n     /* When writing fails or didn't write a single character, pretend one\r\n      * character was written, otherwise we get stuck. */\r\n```\r\nこれなら落ちない。","created_at":1427438336},{"id":86842975,"issue_id":721,"user_id":518808,"body":"とりあえずおつです。:+1:","created_at":1427438683},{"id":86843927,"issue_id":721,"user_id":10111,"body":"1文字しか塗ってないw","created_at":1427438804},{"id":86848247,"issue_id":721,"user_id":468368,"body":"> なんか IME が付ける色とバッティングして死んでる気がする。\r\n\r\nconhost 上で排他していないとか、そんな感じだと思うんですよね…\r\n\r\nでも該当箇所がわかっただけでも、状況が随分違う気がします。\r\nたとえば直前にSleep入れたりするだけで、違ってきたりしないでしょうかね。","created_at":1427439330},{"id":86848907,"issue_id":721,"user_id":10111,"body":"> たとえば直前にSleep入れたりするだけで、違ってきたりしないでしょうかね。\r\n\r\nﾀﾞﾒｰw\r\n![](http://i.imgur.com/jpvX5Fz.gif)\r\n","created_at":1427439543},{"id":86849446,"issue_id":721,"user_id":468368,"body":"ｷｰｯ :grimacing: ","created_at":1427439978},{"id":86889775,"issue_id":721,"user_id":10137,"body":"WIn10 VSC2013 7.4.683 32bit/64bit どちらでも今のところ再現しないので参加できずにおります…","created_at":1427451360},{"id":86901653,"issue_id":721,"user_id":468368,"body":"たぶんWindows Vista + 7 がメインの発生環境かと。\r\nXP以前および8 以降は、また少し違った振る舞いになると予想しています。","created_at":1427454267},{"id":86902308,"issue_id":721,"user_id":10111,"body":"この現象、僕が XP 使ってた時から発生してました。\r\n\r\nOn 3/27/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> たぶんWindows Vista + 7 がメインの発生環境かと。\r\n> XP以前および8 以降は、また少し違った振る舞いになると予想しています。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86901653\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427454399},{"id":86931698,"issue_id":721,"user_id":468368,"body":"げ。\r\n\r\nたしかに vc10 (VS2010) だと発生して、vc12 (VS2013)だと発生しないっぽい。\r\nvc11 は今からテストします。\r\n\r\nいずれも64ビット","created_at":1427460812},{"id":86932800,"issue_id":721,"user_id":468368,"body":"vc11 でも発生しないわコレ。","created_at":1427460951},{"id":86933321,"issue_id":721,"user_id":468368,"body":"crtとか、リンクするものになにか差があるのかな。","created_at":1427461142},{"id":86936576,"issue_id":721,"user_id":468368,"body":"vs2010, vs2012, vs2013 それぞれでビルドしたバイナリ、欲しい人います?","created_at":1427462004},{"id":86939326,"issue_id":721,"user_id":10111,"body":"ランタイムで API の呼び方に違いがあるんだろか\r\n\r\nOn 3/27/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> vs2010, vs2012, vs2013 それぞれでビルドしたバイナリ、欲しい人います?\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86936576\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427462826},{"id":86939983,"issue_id":721,"user_id":468368,"body":"もしくはOS(conhost)側が、exeのバージョンみて、何か処理を挟んだりとか。","created_at":1427462949},{"id":86955873,"issue_id":721,"user_id":468368,"body":"`cw` をした時に、edit.c が `safe_vgetc()` を呼び出すと term.c の `out_flush()` が呼び出される。\r\nこの時に出力されるバイト列(out_buf の中身の out_len (=52)バイト) は以下のとおりになっていた。\r\n\r\n    1B 7C 31 3B 31 34 48 1B 7C 33 62 28 29 1B 7C 37\r\n    6D 1B 7C 37 66 1B 7C 30 62 81 40 28 93 FA 29 20\r\n    1B 7C 31 3B 32 33 48 1B 7C 4B 1B 7C 31 3B 31 35\r\n    48 1B 7C 56\r\n\r\nこのうちの26～32バイト目の合計7バイト、すなわち `81 40 28 93 FA 29 20` の出力に関して\r\nos_win32.c の `write_chars()` における `FillConsoleOutputAttribute()` をしないようにしたところ\r\n問題は発生しなくなった。\r\n\r\nただ、これが何を意味しているのかはまだわからない。\r\nバイト列自体に問題があるのか、coord の中身を見たほうが良いのか…\r\n","created_at":1427466195},{"id":86956139,"issue_id":721,"user_id":468368,"body":"いや明らかにcoordが優先だろう。","created_at":1427466231},{"id":86958119,"issue_id":721,"user_id":468368,"body":"> (前略) 問題は発生しなくなった\r\n\r\nこれ、デバッガで止めながらいろいろやったら、描画乱れは発生することがあった。\r\nただかなり発生する頻度は低くなった。\r\n\r\n> いや明らかにcoordが優先だろう。\r\n\r\ncoord の値は `{X=15, Y=0}` で、 `cchToWrite=7` だった。","created_at":1427466585},{"id":86958930,"issue_id":721,"user_id":10111,"body":"どのテキストでやってます？\r\n\r\nOn 3/27/15, MURAOKA Taro <notifications@github.com> wrote:\r\n>> (前略) 問題は発生しなくなった\r\n>\r\n> これ、デバッガで止めながらいろいろやったら、描画乱れは発生することがあった。\r\n> ただかなり発生する頻度は低くなった。\r\n>\r\n>> いや明らかにcoordが優先だろう。\r\n>\r\n> coord の値は `{X=15, Y=0}` で、 `cchToWrite=7` だった。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86958119\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427466729},{"id":86963413,"issue_id":721,"user_id":468368,"body":"    2015年2月28日(土)　(日)\r\n\r\nです。","created_at":1427468057},{"id":86964853,"issue_id":721,"user_id":10111,"body":"X=15 で 7 って事は ( から行末すな。\r\n\r\nOn 3/27/15, MURAOKA Taro <notifications@github.com> wrote:\r\n>     2015年2月28日(土)　(日)\r\n>\r\n> です。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86963413\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427468362},{"id":86965029,"issue_id":721,"user_id":10111,"body":"間違ってはなさそう\r\n\r\nOn 3/27/15, Yasuhiro MATSUMOTO <mattn.jp@gmail.com> wrote:\r\n> X=15 で 7 って事は ( から行末すな。\r\n>\r\n> On 3/27/15, MURAOKA Taro <notifications@github.com> wrote:\r\n>>     2015年2月28日(土)　(日)\r\n>>\r\n>> です。\r\n>>\r\n>> ---\r\n>> Reply to this email directly or view it on GitHub:\r\n>> https://github.com/vim-jp/issues/issues/721#issuecomment-86963413\r\n>\r\n>\r\n> --\r\n> - Yasuhiro Matsumoto\r\n>\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427468405},{"id":86971224,"issue_id":721,"user_id":468368,"body":"いま追ってました。 \r\n\r\n`cw` で位置がズレる `　(日) ` を再描画してますね。\r\nで、その位置の属性を書き込むと、conhostがおかしくなるってことにみえます。","created_at":1427469358},{"id":86972622,"issue_id":721,"user_id":10111,"body":"今布団なので不確かですが、たしか out_flash から呼ばれてて事象後に write_chars\r\nしてるのでもしかしたら書いちゃいけない分 cch で書いて？\r\n\r\nOn 3/28/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> いま追ってました。\r\n>\r\n> `cw` で位置がズレる `　(日) ` を再描画してますね。\r\n> で、その位置の属性を書き込むと、conhostがおかしくなるってことにみえます。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86971224\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427469636},{"id":86973254,"issue_id":721,"user_id":468368,"body":"これはまだ `cw` した直後だから、\r\nIMEは起動していないし、無論 `き` の入力もしていない。","created_at":1427469783},{"id":86974983,"issue_id":721,"user_id":468368,"body":"ためしにピンポイントで cch を1文字だけ短くしてみたけど、関係なく発生した。","created_at":1427470203},{"id":86981130,"issue_id":721,"user_id":10111,"body":"僕の勘なんですが、() の ) と半キャラずれる形が宜しくないんだと思ってます。つまり '() ' みたいに全角分塗られてたら落ちないみたいな。\r\n\r\nOn 3/28/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> ためしにピンポイントで cch を1文字だけ短くしてみたけど、関係なく発生した。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86974983\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427471194},{"id":86982558,"issue_id":721,"user_id":468368,"body":"なんかトリガーがわかったかも。\r\n\r\nコンソールバッファに残っているTOMB (`X` = `１`のtrail byte)を、\r\nLOMB (`２`のlead byte)で書き潰すときに属性値を設定したうえで\r\nIMEを起動するとコンソールバッファが壊れるようです。\r\n\r\n以下では `０(１)２` という文字列を使って説明します。\r\n`０`は別に全角である必要はありません。\r\nこの部分の描画が乱れることで、現象が発生するのを確認するのに使ってます。\r\n\r\n下記は、現象発生時のコンソールバッファの状態を、\r\n時系列に3つa, b, cの順で示したものです。\r\n\r\n    a: ０(１)２\r\n    b: ０()X)２\r\n    c: ０()２_Y\r\n\r\n上記の例のaにおいて `１` にカーソルを乗せて `cw` をした場合\r\nまず b のように `()` が描画され X の位置に `１` の trail byteが残ります。\r\n次に c に示したように `２_` (アンダースコアは半角空白の意味) が描画されます。\r\nその後IMEを起動して `ki` をタイプすると現象が発生します。\r\n\r\n仮に `２` の部分を半角で `22` のようにすると現象は発生しませんでした。\r\nつまり X が `２` の  lead byte で上書きされることがトリガーになっていると言えそうです。\r\n\r\nまた `Y` の部分には `２` の trail byte があったわけですが、\r\n現時点では考えなくて良さそうです。","created_at":1427471443},{"id":86984837,"issue_id":721,"user_id":468368,"body":"ちょっと前の書き込み、整理しました。","created_at":1427471715},{"id":86993555,"issue_id":721,"user_id":468368,"body":"あれ? これ matchparen が無いときに、どうして落ちないんだ?","created_at":1427473176},{"id":86994006,"issue_id":721,"user_id":468368,"body":"あーそうか。上記でお膳立てした上で、\r\nIMEによる描画と、matchparenによる描画がかち合うのかもしれない。","created_at":1427473275},{"id":87103304,"issue_id":721,"user_id":10111,"body":"はい。なので () が半角ずれてIMEが開始されると落ちるんじゃないかなーと言うのが私の推測。\r\n\r\nOn 3/28/15, MURAOKA Taro <notifications@github.com> wrote:\r\n> あーそうか。上記でお膳立てした上で、\r\n> IMEによる描画と、matchparenによる描画がかち合うのかもしれない。\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/721#issuecomment-86994006\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1427493377},{"id":87143658,"issue_id":721,"user_id":468368,"body":"とりあえず Inside Windows Debugging の Kindle 版、買ってみたw","created_at":1427508145},{"id":87153696,"issue_id":721,"user_id":468368,"body":"コンソールアプリはメッセージループとかが無いので、代わりのプロセスがそれを肩代わりしている。\r\nそのプロセスとは、XP以前は csrss.exe で、Vista以後は conhost.exe である。\r\n\r\nで、コンソールアプリは conhost.exe と ALPC (Advanced Local Procedure Call) で通信して、\r\n画面の描画やキー入力をやりとりしている。\r\nなお書き込み系のコンソール操作APIは、`kernel32!ConsoleClientCallServer` に繋がってる。\r\nたぶんこれがコンソール向けのALPCの入り口なんだろう。\r\n\r\nあと気になったのは CRT 内に `write_nolock` っていう関数があった。\r\nVS11 以降だと現象が発生しないことに関連しているかも。","created_at":1427512906},{"id":87155313,"issue_id":721,"user_id":468368,"body":"> あと気になったのは CRT 内に write_nolock っていう関数があった。\r\n> VS11 以降だと現象が発生しないことに関連しているかも。\r\n\r\nあくまでもマルチスレッドのためのものだった。","created_at":1427513942},{"id":87155632,"issue_id":721,"user_id":840186,"body":"うちではVC10(WinSDK7.1)でビルドしても再現せず…","created_at":1427514071},{"id":87159882,"issue_id":721,"user_id":468368,"body":"@k-takata Win SDK 7.1 使うのに、なにか特別な設定してはります?","created_at":1427517771},{"id":87163580,"issue_id":721,"user_id":840186,"body":"特にしていないつもりです。","created_at":1427520698},{"id":87183058,"issue_id":721,"user_id":468368,"body":"あ…わたしの vs 用設定ファイル…\r\n\r\nvs10用\r\n\r\n```bat\r\n@ECHO OFF\r\n\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\vcvarsall.bat\" amd64\r\n```\r\n\r\nvs11 用\r\n\r\n```bat\r\n@ECHO OFF\r\n\r\nSET \"INCLUDE=C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Include\"\r\n\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\VC\\vcvarsall.bat\" amd64\r\n```\r\n\r\nvs12用\r\n\r\n```bat\r\n@ECHO OFF\r\n\r\nSET \"INCLUDE=D:\\App\\Microsoft SDKs\\Windows\\v7.1\\Include\"\r\n\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" amd64\r\n```\r\n\r\nこれか…","created_at":1427526039},{"id":87184316,"issue_id":721,"user_id":468368,"body":"vs10 は WinSDK 7.0 だった。無理矢理7.1Aに繋いでも、現象は発生するままだったよ。\r\nなお上記の vs11 と vs12 用の設定もそれぞれ意味が無いと思われる。\r\nそれぞれ 8.0 と 8.1 に繋がってた。","created_at":1427527200},{"id":87936089,"issue_id":721,"user_id":10111,"body":"関係あるかどうか分からないけど\r\n\r\nhttps://support.microsoft.com/en-us/kb/2961980\r\n","created_at":1427776865},{"id":87936253,"issue_id":721,"user_id":10111,"body":"https://support.microsoft.com/en-us/kb/2458000","created_at":1427776926},{"id":87964287,"issue_id":721,"user_id":468368,"body":"どっちかってぇと前者のほうが、近い感じはしますにゃあ\r\n","created_at":1427784163},{"id":83990356,"issue_id":716,"user_id":10111,"body":"キャプチャを貰ってもいいですか","created_at":1426851052},{"id":83993064,"issue_id":716,"user_id":480049,"body":"キャプチャとりました。上のスクリプトを実行後にわかりやすいように`:set list`しました。~~右上~~左上のウィンドウにカーソルがあるのですが、カーソルが行末を越えています。\r\n![bug_cursor](https://cloud.githubusercontent.com/assets/480049/6751031/f75e4ec0-cf3a-11e4-82cf-95967b422d2c.png)\r\n書き忘れていましたがWindows 7上のgvim 7.4.648 32bitです。\r\n","created_at":1426852570},{"id":83993679,"issue_id":716,"user_id":480049,"body":"すいません、コメントを修正しました。","created_at":1426852887},{"id":83993926,"issue_id":716,"user_id":10111,"body":"ありがとうございます。こちらでも再現しました。\r\n\r\n![](http://go-gyazo.appspot.com/dc912dda1bb6e005.png)\r\n","created_at":1426853017},{"id":83994208,"issue_id":716,"user_id":10111,"body":"何か所か文字を変えてみました。\r\n\r\n挿入モード前\r\n![](http://go-gyazo.appspot.com/573af85f3a628b0f.png)\r\n\r\n挿入モード後\r\n![](http://go-gyazo.appspot.com/5c7a60a3372fd74c.png)\r\n","created_at":1426853170},{"id":83994668,"issue_id":716,"user_id":480049,"body":"まさにそんな感じです。\r\nノーマルモードに戻った後も4文字分行末を越えて動けますけど、いったん`0`コマンドで行頭に戻った後はまたインサートモードに入るまで行末を越えなくなりますね。","created_at":1426853419},{"id":166116604,"issue_id":716,"user_id":943423,"body":"https://gist.github.com/ichizok/40f92fa0dfc81685d504\r\n\r\n* ウインドウ先頭でも継続行の場合は shift を入れる\r\n\r\n挿入モード後\r\n\r\noriginal:\r\n\r\n```\r\naaaaaaaaaaaaaaaaaaaaaaaaa\r\n____aaaaaaaaaaaaaaaaa\r\n____|\r\n```\r\n\r\npatched:\r\n\r\n```\r\n____aaaaaaaaaaaaaaaaaaaaa\r\n____aaaaaaaaaaaaaaaaaaaaa\r\n____|\r\n```\r\n\r\n`|`: カーソル位置\r\n","created_at":1450617291},{"id":166612310,"issue_id":716,"user_id":480049,"body":"ありがとうございます！@ichizok さんのパッチで症状が改善しました、パッチ後の表示も妥当だと思います。","created_at":1450789696},{"id":179520949,"issue_id":716,"user_id":943423,"body":"https://groups.google.com/forum/#!topic/vim_dev/tzNKP7EDWYI\r\n報告しました。","created_at":1454540695},{"id":80997874,"issue_id":714,"user_id":10111,"body":"個人的には専用の autoload 関数を作って全てそれを使う修正にした方がいいかなーと思います。","created_at":1426423899},{"id":82320024,"issue_id":714,"user_id":480049,"body":"以前のバージョンで動かなくなる心配をしましたが、runtimeファイルはまとめて更新されるので問題ないですね。しかし、後方互換を考えなくていいなら単純に`&sw`を`shiftwidth()`で置換すればいい気もしてきました。","created_at":1426595356},{"id":82322412,"issue_id":714,"user_id":10111,"body":"https://gist.github.com/mattn/f2d00a2b26044d840a4c\r\n\r\n結構ありますね(汗)","created_at":1426595698},{"id":82356624,"issue_id":714,"user_id":480049,"body":"思ったより多いです…せめてgrepしてから発言すべきだった…","created_at":1426599503},{"id":82357886,"issue_id":714,"user_id":480049,"body":"ひとまず`:argdo`で機械的にやりましたが、表記ゆれなどあるかもしれないので後で確認します。\r\n\r\nhttps://gist.github.com/machakann/3ddc492f2884d50ad2ba#file-update_indent_files-patch","created_at":1426599778},{"id":174297852,"issue_id":714,"user_id":1528093,"body":"ping","created_at":1453641605},{"id":174322811,"issue_id":714,"user_id":1528093,"body":"https://github.com/vim/vim/pull/578#issuecomment-174314013","created_at":1453657205},{"id":174349951,"issue_id":714,"user_id":840186,"body":"> Please send patches to each maintainer.\r\n\r\nつらい","created_at":1453675971},{"id":174350043,"issue_id":714,"user_id":10111,"body":"丸投げｷﾀｰ\n\nOn 1/25/16, K.Takata <notifications@github.com> wrote:\n>> Please send patches to each maintainer.\n>\n> つらい\n>\n> ---\n> Reply to this email directly or view it on GitHub:\n> https://github.com/vim-jp/issues/issues/714#issuecomment-174349951\n\n\n-- \n- Yasuhiro Matsumoto\n","created_at":1453676060},{"id":174350375,"issue_id":714,"user_id":840186,"body":"> I think shiftwidth() function wrapper is not necessary.\r\n> Because runtime files should not be distributed with an older Vim.\r\n\r\nwrapperが必要かどうかは結局各メンテナーの判断次第になってしまいますね。","created_at":1453676393},{"id":174398686,"issue_id":714,"user_id":480049,"body":"すいません、すっかり忘れていました。\r\n各メンテナーにメールか…","created_at":1453697689},{"id":174545789,"issue_id":714,"user_id":48169,"body":"とりあえず送りました…\r\nhttps://groups.google.com/forum/#!topic/vim_dev/R046Odhv8rY\r\n\r\nGitHubのURLが書いてあるindent pluginなんかもあったけど、個別でPR送るとかは流石に面倒…\r\n(でもPR出してくれはメンテナの誰かから言われそうな気はする…うっ)","created_at":1453736160},{"id":174546427,"issue_id":714,"user_id":48169,"body":"> wrapperが必要かどうかは結局各メンテナーの判断次第になってしまいますね。\r\n\r\nこれはBramさんの判断に基づいて削除しました。\r\nが、メンテナによっては削除するべきでないと言う可能性はありますね。","created_at":1453736290},{"id":175030874,"issue_id":714,"user_id":48169,"body":"すぐには返信来なさそうです…\r\nまぁ自分には来ないでBramさんにだけ返信した可能性もありますが…\r\n\r\nVimインデントプラグインメンテナ一覧\r\nhttps://docs.google.com/spreadsheets/d/1-HeWlsLC-tJDfuXQjtkZmY5UwXakAuYg83z9nz7nl2w/edit?usp=sharing","created_at":1453817187},{"id":176754177,"issue_id":714,"user_id":48169,"body":"Vimインデントプラグインメンテナ一覧更新しました。\r\n\r\n- メンテナ一覧に取り込まれたパッチ番号とGitHubのコミットへのリンクを記載しました。\r\n- メンテナからの「連絡あり」が「○」でパッチ番号のセルが空(=まだ取り込まれてない、つまりBramさんがまだ適用していない)のものについて、パッチ番号のセルを赤で表示するようにしました。\r\n- (リストを作る前にすでにマージされていた)vim.vimが抜けていたので追記しました。","created_at":1454074209},{"id":77524072,"issue_id":710,"user_id":468368,"body":"今までは、使ってる人がいなかったから、問題が発覚しなかったってことですかね?","created_at":1425630993},{"id":77530843,"issue_id":710,"user_id":518808,"body":"インデント処理は本当はコメント部分はスキップして処理すべきなので`FM_SKIPCOMM`を指定すべきなんだけど未実装だから指定していないだけだと思う。\r\nコメントに `(`や`[`や'{'を単独で書くことがあまりないので問題が起き難いというのもあります。\r\n\r\n```bash\r\nvim -N -u NONE -c \"set cin\" test.c\r\n```\r\n```\r\n{\r\n\tfunc(\r\n\t\targ1,   // (\r\n\t\targ2,\r\n\t\targ3);\r\n}\r\n```\r\nこれを`gg=G`するとこうなります。`cindent`もガッタガタ。\r\n```\r\n{\r\n\tfunc(\r\n\t\t\targ1,   // (\r\n\t\targ2,\r\n\t\targ3);\r\n\t\t\t}\r\n```\r\nコメント部分の`(`を消すか`()`に変更すると直ります。","created_at":1425634400},{"id":77546487,"issue_id":710,"user_id":468368,"body":"なるほど～未実装だとわかっているから、使ってないのかw","created_at":1425642000},{"id":87198325,"issue_id":709,"user_id":303372,"body":"本件、テストを追加してみようと思ったのですが、現在の挙動および期待する挙動がわからなかったため相談させてください。\r\n\r\nOS:Linux\r\nver:7.4.683\r\n\r\n手順:\r\nいくつか検索パターンを作り、下記表にまとめました。\r\n\r\nvim -u NONEで起動して確認簡略化のために、以下を設定してからテストを実施しています。\r\n```vim\r\nset hlsearch\r\nset history=10000\r\n```\r\n\r\n### 確認内容\r\n\r\n#|検索方法|文字列|パターン |結果\r\n---|----------|----------|--------|--------\r\n1|/|あいうえお|^.*\\%5v |あい\r\n2|/|あいうえお|.*\\%5v  |あいう\r\n3|/|あいうえお|\\%<5v   |あい\r\n4|/|あいうえお|^.*\\%<5v |あ\r\n5|/|あいうえお|.*\\%<5v |あい\r\n6|/|あいうえお|\\%>5v   |えお\r\n7|/|あいうえお|\\%>5v.* |えお\r\n8|matchstr|あいうえお|^.*\\%5v |あい\r\n9|matchstr|あいうえお|.*\\%5v |あい\r\n10|matchstr|あいうえお|\\%<5v |(空文字列)\r\n11|matchstr|あいうえお|^.*\\%<5v |あ\r\n12|matchstr|あいうえお|.*\\%<5v |あ\r\n13|matchstr|あいうえお|\\%>5v |(空文字列)\r\n14|matchstr|あいうえお|\\%>5v.* |えお\r\n\r\n- 検索パターンが`/`のケースは、文字列欄の文字列をバッファに記載した上で、`search command`で検索したケースです。検索文字列は、パターン欄の文字列を指定します。\r\n結果は、`set hlsearch`でハイライトされた部分です。\r\n- 検索パターンが`matchstr`のケースは、`matchstr()`関数で検索した結果です。引数に文字列欄の文字列、パターン欄の文字列を指定します。結果はechoで出力した値です。\r\n- set regexpengine=1にした場合も同様の結果でした。\r\n\r\n上記表の、以下の点がよくわかりませんでした。\r\n\r\n- `1.`と`2.`の結果が異なる。(`1.`は`2.`と同じ結果になるべき？)\r\n- `3.`、`5.`と、`4.`の結果が異なる(`4.`は`3.`、`5.`と同じ結果になるべき？)\r\n- `10.`と`13.`が空文字列になる理由がわからない(`10.`は`3.`、`13.`は`6.`と同じ結果になるべき？)\r\n- `11.`と`12.`の結果の理由がわからない(`5.`と同じ結果になるべき？)","created_at":1427536110},{"id":87376716,"issue_id":709,"user_id":518808,"body":"@deris Vim contribute authorアタックチャンスを受けていただきありがとうございます。\r\n\r\nご指摘の通り、なんか全然整合取れていないですね。ASCII文字でも確認しましたが同様の結果になりました。\r\n~~ただ、`/`の方は法則性がよく分からんですが、`matchstr`の方は一貫して`\\%～v`を`ゼロ幅マッチ(/zero-width)`として扱っているので整合が取れている気がします。~~\r\n~~ですので、テストは最新Ver(7.4.683)の`matchstr`の挙動を正とした結果を期待値として作成して頂ければと思います。~~\r\n\r\n~~All＞~~\r\n~~どうでしょうか？~~\r\n\r\n~~特に反対意見が無ければ「`/`の検索パターンに`\\%～v`を使用した場合の挙動が微妙な件」は別途Issueを立てます。~~\r\n\r\n===\r\nちなみに上記挙動はVim 7.4.576でも同じですので以下のmattnさんのpatchによるdegradeではないです。\r\n(逆に、`\\%>80v`が7.4.577から7.4.581まではsingle byte/multi byte両方微妙になっていて、7.4.582から7.4.650まではmulti byteが微妙になっていたのが7.4.651で修正された形)","created_at":1427620361},{"id":87378296,"issue_id":709,"user_id":518808,"body":"あー、ダメだ前言撤回。\r\n\r\n`matchstr`も整合取れてない。\r\n`:help \\%v`の最後に`/.*\\%17v.`と`/.*\\%<18v`が同じ結果になると書いてあるけど、`/`では確かに同じだけど`matchstr`では結果が違う。\r\n\r\n```vim\r\n:echo matchstr('12345678901234567890','.*\\%17v.')\r\n12345678901234567\r\n\r\n:echo matchstr('12345678901234567890','.*\\%<18v')\r\n1234567890123456\r\n```","created_at":1427621367},{"id":87380187,"issue_id":709,"user_id":518808,"body":"「`matchstr`は一貫して`\\%～v`をゼロ幅マッチ(/zero-width)として扱っている」っていうのはあってそう。ただ`:help`の記述と違う。わー","created_at":1427622104},{"id":87389569,"issue_id":709,"user_id":142094,"body":"```\r\n:echo matchstr('12345678901234567890','.*\\%<18v')\r\n1234567890123456\r\n```\r\n\r\n\"¥%<18v.\" (最後ドット) ですね。誤植です。","created_at":1427626047},{"id":87392350,"issue_id":709,"user_id":518808,"body":"@ynkdir あっホントだ。enもjpも両方確認してたけど気付かなかったです:sweat_smile: Thanks!\r\n\r\n...ということは`matchstr`の挙動はOKってことですよね。","created_at":1427626466},{"id":87392603,"issue_id":709,"user_id":142094,"body":"\"\\%<5v\" とかの / の結果は n してみればわかりますが empty match のため 1 文字ずつマッチしてます。","created_at":1427626710},{"id":87395614,"issue_id":709,"user_id":142094,"body":"たぶん / も matchstr も期待通りの挙動だと思います。","created_at":1427627591},{"id":87419845,"issue_id":709,"user_id":303372,"body":"@h-east @ynkdir お二人とも丁寧なご説明ありがとうございます。\r\n\r\nゼロ幅マッチがポイントということですね。(ちゃんとhelpを確認できていませんでした:sweat_smile:\r\n\r\n確かにゼロ幅マッチだということを意識して考えると現状動作を理解することができました。\r\n\r\n理解した内容をまとめたので、何か誤りがあればコメントいただけますでしょうか？\r\n- /とmatchstrの差異が出るのは、/の場合はhighlightの関係上、ゼロ幅マッチだけどマッチ箇所(の右隣)にハイライトされているため、そこまでマッチしているように見えている。\r\n- /のケースで、^.\\*\\\\%5vと.\\*\\\\%5vで差異が出たのは、.\\*\\\\%5vの場合、行頭からそれぞれ1個ずつマッチしたハイライトが表示されており、.\\*が0文字マッチの場合に、上記記載のゼロ幅マッチだけどマッチ箇所(の右隣)にハイライトされているのケースに当てはまり5文字目までマッチしているように見えている。\r\n- matchstrで\\\\%>5vの検索結果が空文字列だったのはゼロ幅マッチの最短マッチ？だったから","created_at":1427638207},{"id":87424699,"issue_id":709,"user_id":518808,"body":"@ynkdir \r\n> たぶん / も matchstr も期待通りの挙動だと思います。\r\n\r\n確かにそうですね。`highlight`に惑わされました。失礼しました。\r\n\r\n@deris \r\n> - /とmatchstrの差異が出るのは、/の場合はhighlightの関係上、ゼロ幅マッチだけどマッチ箇所(の右隣)にハイライトされているため、そこまでマッチしているように見えている。\r\n\r\nYes.\r\n\r\n> - /のケースで、^.\\*\\\\%5vと.\\*\\\\%5vで差異が出たのは、.\\*\\\\%5vの場合、行頭からそれぞれ1個ずつマッチしたハイライトが表示されており、.\\*が0文字マッチの場合に、上記記載のゼロ幅マッチだけどマッチ箇所(の右隣)にハイライトされているのケースに当てはまり5文字目までマッチしているように見えている。\r\n\r\nYes.\r\n\r\n> - matchstrで\\\\%>5vの検索結果が空文字列だったのはゼロ幅マッチの最短マッチ？だったから\r\n\r\nほぼYes.\r\n「`\\%>5v`そのものがゼロ幅マッチなのでそれだけではマッチしようがない」って感じですかね。\r\nだから`:h \\%v`のsampleでは前か後ろに `.*` が付いてるんですね。\r\n\r\n===\r\n以下のバッファに `:%s/\\%4v/_/g` したら\r\n```\r\n12345\r\nabcde\r\n```\r\nこうなるのを見て全貌が理解出来ました。\r\n```\r\n123_45\r\nabc_de\r\n```\r\n\r\nということでお時間のある時に是非test作成に再チャレンジ下さい。","created_at":1427641095},{"id":87491706,"issue_id":709,"user_id":303372,"body":"@h-east コメントありがとうございます。\r\n\r\nhelpには以下の様に記載があったので、表示列以降にマッチ(\\%5vだけで\\%5v.\\*の意となる)と誤解釈していましたが、表示列以降のいずれかの位置にゼロ幅にマッチということですね。腑に落ちました。\r\n```\r\n\\%>23v\t指定した表示列より後にマッチします。\r\n```\r\n\r\ntest作成、再度挑戦したいと思います！","created_at":1427669124},{"id":79790746,"issue_id":707,"user_id":142094,"body":"XTerm(309) on Mac で確認しました。\r\nたぶん最小手順はこんな感じ。起動時に一瞬だけ応答シーケンスが見えます。\r\n\r\n```\r\n$ cat vimrc.vim\r\nset nocompatible\r\nautocmd VimEnter * call system('ls')\r\n$ vim -u vimrc.vim\r\n```\r\n\r\nこれは表示だけの問題ですよね？\r\n`:set ttymouse?` の値が sgr に変わるのでそうかなーと思いました。\r\n\r\n選択肢は応答が返るまで wait するかどこかで redraw するかくらいですか。\r\ncookモードはよくわかりませんが変えられない気がします。\r\n\r\nユーザー側でできるワークアラウンドは `autocmd TermResponse * redraw!` とかですかね。応答が残るケースは再現試してないのでわかりませんが。","created_at":1426304207},{"id":79818038,"issue_id":707,"user_id":1162739,"body":"autocmd TermResponseのタイミングが微妙なんですよね...時系列だとこうです。\r\n\r\n1. DA2 クエリを投げる\r\n2. DA2 応答を受け取る(v:termresponseやttymouseをセット、autocmd Termresponse 発火)\r\n3. tcap-query (ESC P + q ... ESC \\) 第1次を出す\r\n4. tcap-response (ESC P + r ... ESC \\) 第1次を受け取る\r\n5. tcap-query (ESC P + q ... ESC \\) 第2次を出す\r\n6. tcap-response (ESC P + r ... ESC \\) 第2次を受け取る\r\n7. tcap-query (ESC P + q ... ESC \\) 第3次を出す\r\n8. tcap-response (ESC P + r ... ESC \\) 第3次を受け取る\r\n9. tcap-query (ESC P + q ... ESC \\) 第4次を出す\r\n10. tcap-response (ESC P + r ... ESC \\) 第4次を受け取る\r\n\r\n10までwaitするのはきついかなと思います。\r\ncookモード をecho offにしただけのTMODE_SLEEPというのがあるようなのですが、10.が終わるまでこれを使うようにできませんかね。\r\nhttps://github.com/vim-jp/vim/blob/13edc1bb3cf3e14e97ac3d0b8f28622fbd9bf653/src/term.h#L167\r\n\r\necho offにした時の副作用は、一部の対話的なコマンド(readコマンドなど)の入力結果がエコーバックで表示されなくなることです。","created_at":1426305765},{"id":79833931,"issue_id":707,"user_id":142094,"body":"> cookモード をecho offにしただけのTMODE_SLEEPというのがあるようなのですが、10.が終わるまでこれを使うようにできませんかね。\r\n\r\nそれよさげですね。\r\nただいろんな使い方をする人がいるので副作用ありの変更だと心配もあります。","created_at":1426306571},{"id":79839639,"issue_id":707,"user_id":1162739,"body":"代替案ですが、\r\n\r\n1. tcap-query/responseをやめる (現状あまり使われていないので)\r\n2. system()の方で別ptyを作ってtermiosの状態を分ける。コマンドは別ptyで実行し、その入出力をvimがマネージメントする。","created_at":1426306882},{"id":79848598,"issue_id":707,"user_id":1162739,"body":"\r\n  3 10まで待ってvim側でredrawをかける","created_at":1426307336},{"id":79851688,"issue_id":707,"user_id":1162739,"body":"あ、redrawはだめか。ウガンダの画面が消えるので。","created_at":1426307475},{"id":79915624,"issue_id":707,"user_id":142094,"body":"あー tcap query 把握。\r\n\r\n> tcap-query/responseをやめる (現状あまり使われていないので)\r\n\r\n役に立ってないなら個人的にはこれを推したい感。説得が難しそうですが。\r\n\r\n表示だけならユーザー側の回避策としては、プラグインがあれこれやった後で redraw すればいいと思うので `autocmd VimEnter * redraw!` とか。プラグインも VimEnter 使ってるなら ~/.vim/after/plugin/ に入れる。","created_at":1426310580},{"id":80148451,"issue_id":707,"user_id":1162739,"body":"> ただいろんな使い方をする人がいるので副作用ありの変更だと心配もあります。\r\n\r\n`call_shell`、いろんなところから呼ばれているっぽいですが、\r\n`!` では`echo on`にしておく必要があります。(たとえば`:r !cat`のように対話的なことをしたい時など)\r\nでも、`system()`経由で呼ばれた場合は`echo on`にする必要がまったくないと思います。\r\n`system()`の引数に渡されたコマンドが対話的に実行されることって無いですよね。(そもそも`stdin`を閉じるかつなぎ替えている?)\r\nなので、「`system()`が呼ばれたとき`echo`を`on`にしない」という方針の修正であれば、原理的には副作用無しでいけると思っています。\r\n\r\n(その他、diffをとるところとかグロブを展開するところとか、`echo on`がいらなそうなところはいくつかありそうです。)","created_at":1426322085},{"id":80169079,"issue_id":707,"user_id":1162739,"body":"頂いた再現コードをちょっと改良して、これならDA2の応答がはっきり表示されるのでたいていの端末で再現すると思います。\r\n\r\n    $ vim -u NONE --noplugin -c \"set nocompatible | autocmd VimEnter * call system('sleep 3')\"\r\n\r\nXTerm、最新のTeraTerm、最新のmlterm、tanasinn、mouseterm-plusなどでは、DA2応答のバージョンが141以上なのでこちらも再現します。\r\n\r\n    $ vim -u NONE --noplugin -c \"set nocompatible | autocmd Termresponse * call system('sleep 3')\"\r\n","created_at":1426323120},{"id":80280921,"issue_id":707,"user_id":142094,"body":"> なので、「system()が呼ばれたときechoをonにしない」という方針の修正であれば、原理的には副作用無しでいけると思っています。\r\n\r\nそういうことならいいと思います。\r\n\r\n今でも :silent をつけると cooked を防げるみたいですいちおう。\r\n\r\n```\r\neval.c:get_cmd_output_as_rettv()\r\n18798     /* Omit SHELL_COOKED when invoked with \":silent\".  Avoids that the shell\r\n18799      * echoes typeahead, that messes up the display. */\r\n18800     if (!msg_silent)\r\n18801         flags += SHELL_COOKED;\r\n```","created_at":1426328747},{"id":80300176,"issue_id":707,"user_id":1162739,"body":"> 今でも :silent をつけると cooked を防げるみたいですいちおう。\r\n\r\nsystem()は第2引数で入力を渡して対話的なプログラムを非対話的に実行することができるようなので、そのためにもECHO以外のtermiosフラグをCOOKED相当に書き替える必要はあると思います。\r\nその際、ECHOビットは落ちていようが落ちていまいが呼び出したプログラムの動作や結果にはまったく支障は無いはずです。","created_at":1426329657},{"id":80329179,"issue_id":707,"user_id":1162739,"body":"ああ、やっぱりこのCOOKEDってsystem()に関してはまったく意味無いっぽいですね。\r\n中のプロセスからstdinがパイプに見えているので。","created_at":1426331040},{"id":80959061,"issue_id":707,"user_id":1162739,"body":"叩き台で書いてみました。\r\n`:shell`や`:!`には影響が及んでいないようです。\r\n\r\n影響範囲が最小限になることを保証するために`SHELL_NOECHO`を新設しましたが、\r\nこれは`SHELL_SILENT`と共有できるかもしれません。\r\n\r\nあと、`TMODE_SLEEP`で`ICANON`フラグを立てる必要も特に無いと思っているので、問題なければそれもやりたいです。\r\n`system()`呼び出し時にcookedにしていた意義は、制御文字を入力すると非同期でプロセスにシグナルが飛ぶようにしたかったから、という認識です。（要経緯確認）\r\n\r\n```diff\r\ndiff -r 3bd553b9e4bf src/eval.c\r\n--- a/src/eval.c\tSat Mar 14 15:35:52 2015 +0100\r\n+++ b/src/eval.c\tSun Mar 15 19:52:32 2015 +0900\r\n@@ -18798,7 +18798,7 @@\r\n     /* Omit SHELL_COOKED when invoked with \":silent\".  Avoids that the shell\r\n      * echoes typeahead, that messes up the display. */\r\n     if (!msg_silent)\r\n-\tflags += SHELL_COOKED;\r\n+\tflags |= SHELL_NOECHO;\r\n \r\n     if (retlist)\r\n     {\r\ndiff -r 3bd553b9e4bf src/os_unix.c\r\n--- a/src/os_unix.c\tSat Mar 14 15:35:52 2015 +0100\r\n+++ b/src/os_unix.c\tSun Mar 15 19:52:32 2015 +0900\r\n@@ -4054,7 +4054,9 @@\r\n \r\n     out_flush();\r\n \r\n-    if (options & SHELL_COOKED)\r\n+    if (options & SHELL_NOECHO)\r\n+\tsettmode(TMODE_SLEEP);\t    /* set to normal mode without echo */\r\n+    else if (options & SHELL_COOKED)\r\n \tsettmode(TMODE_COOK);\t    /* set to normal mode */\r\n \r\n # if defined(FEAT_CLIPBOARD) && defined(FEAT_X11)\r\n@@ -4179,7 +4181,9 @@\r\n \tgoto error;\r\n \r\n     out_flush();\r\n-    if (options & SHELL_COOKED)\r\n+    if (options & SHELL_NOECHO)\r\n+\tsettmode(TMODE_SLEEP);\t\t/* set to normal mode without echo */\r\n+    else if (options & SHELL_COOKED)\r\n \tsettmode(TMODE_COOK);\t\t/* set to normal mode */\r\n \r\n     /*\r\ndiff -r 3bd553b9e4bf src/vim.h\r\n--- a/src/vim.h\tSat Mar 14 15:35:52 2015 +0100\r\n+++ b/src/vim.h\tSun Mar 15 19:52:32 2015 +0900\r\n@@ -973,6 +973,7 @@\r\n #define SHELL_SILENT\t16\t/* don't print error returned by command */\r\n #define SHELL_READ\t32\t/* read lines and insert into buffer */\r\n #define SHELL_WRITE\t64\t/* write lines from buffer */\r\n+#define SHELL_NOECHO\t128\t/* disable terminal echo-back */\r\n \r\n /* Values returned by mch_nodetype() */\r\n #define NODE_NORMAL\t0\t/* file or directory, check with mch_isdir()*/\r\n```","created_at":1426417644},{"id":80997537,"issue_id":707,"user_id":142094,"body":"nice!","created_at":1426423807},{"id":81824261,"issue_id":707,"user_id":1162739,"body":"`SLEEP`や`NOECHO`という言い方はやめて`CBREAK`としました。\r\n`ICANON`フラグも落としました。\r\n\r\nhttps://gist.github.com/saitoha/9819c355445e269f87ff","created_at":1426526924},{"id":94150973,"issue_id":707,"user_id":1162739,"body":"投げました。\r\nhttps://groups.google.com/d/msg/vim_dev/8ciQGDB-0Og/NiaJYwQHKF8J","created_at":1429352019},{"id":94176107,"issue_id":707,"user_id":1162739,"body":"もう少し検証の時間を取りたいということで、もし試してくれる方がいるとありがたいです。\r\n本パッチの効能としては、上記の問題が解決される他、\r\n\r\n>   :call system(\"sleep 100\");\r\n\r\nとした後キー入力を送るとそれらがエコーバークし、\r\nその後<C-c>で中断した際エコーバークしたゴミ出力が画面に残り続ける、という問題の回避策にもなります。(これはそもそも\\<C-c\\>の時にredrawがかからないのが悪い気がしますが)","created_at":1429372308},{"id":118856630,"issue_id":707,"user_id":1162739,"body":"vimにOSCシーケンスを利用した背景色判定が入ったので、この問題がよりいっそう出やすくなると思います。\r\n僕としてはこれはバグフィクスのつもりなんですが、Bram氏は導入に慎重です。\r\nなので、引き続きテストしてくれる方を募ります。","created_at":1436189939},{"id":226365120,"issue_id":707,"user_id":943423,"body":"issueの主題とは関係ないんですが、`TMODE_SLEEP` で `ICANON` フラグを落とす部分だけでも欲しいです。\r\nというのも、Solaris 環境の `select(2)` は canonical モードでの入力を non-canonical モードで検出できないという挙動になっているようで、\r\n\r\n```vim\r\nwhile 1\r\n  let c = getchar(0)\r\n  if c != 0\r\n    break\r\n  endif\r\n  sleep 20m\r\nendif\r\n```\r\n\r\nこのようなコードにおいて、sleep 中の入力が `getchar(0)` で取れないため while から break できるタイミングが非常に限られてしまいます。\r\n\r\n検証用\r\nhttps://gist.github.com/ichizok/30fd969eb846848e5b548cfe99f9e515\r\n\r\n```\r\n$ gcc -o getch getch\r\n$ ./getch\r\nmin = 1, time = 0\r\n\r\n[0]>\r\n[1]>\r\n...\r\n```\r\n\r\nlinux や mac だと`[1]>` (canonical) でキー入力すると `[0]>` (non-canonical) になった時にすぐ終了しますが、solaris だと `[1]>` の時に入力しても `[0]>` の `select()` で検出できません。","created_at":1466040282},{"id":226567397,"issue_id":707,"user_id":1162739,"body":"@ichizok SolarisだとTCSANOWであってもバッファリング中の入力を破棄してしまうといった感じでしょうか。\r\nお手数なのですが、vim_devに不具合として報告頂けると助かります。\r\n(ひょっとしたら、別パッチとして提案という方法もありかもしれないので、Issue分けた方がいいかもしれませんね。)","created_at":1466100731},{"id":228759110,"issue_id":707,"user_id":943423,"body":"@saitoha `[1]>` で入力した内容は `read()` した時にまとめて取れるので、バッファ上には残っているようです。\r\n#921 Issue 作りました。","created_at":1467037174},{"id":84058298,"issue_id":706,"user_id":943423,"body":"https://gist.github.com/ichizok/8d016c1e4c791499d092\r\nドキュメント追加","created_at":1426868048},{"id":84169526,"issue_id":706,"user_id":943423,"body":"https://groups.google.com/forum/#!topic/vim_dev/dQ-5znirV4Y\r\n提案しました。","created_at":1426890304},{"id":84308946,"issue_id":706,"user_id":468368,"body":":+1: great work!","created_at":1426934734},{"id":75888245,"issue_id":705,"user_id":468368,"body":"発生しているエラーはE484。\r\n\r\n    E484: ファイル \"(省略).tmp\" を開けません","created_at":1424827756},{"id":75891607,"issue_id":705,"user_id":10111,"body":"vimrun は、CUI 版だと CTRL-C で止められるけど GUI 版だとプロセス止めれないので必要になりますね。\r\nCUI 版は vimrun.exe 無くても動くんですが、GUI 版はこのエラーになりますね。\r\nドキュメントではそこまで厳密にはうたってない様です。\r\nちなみにドキュメント、pif とかいつの時代やねんみたいな事が書いてあるので更新しないとですね。。。","created_at":1424829707},{"id":75892700,"issue_id":705,"user_id":468368,"body":"となるとGUI版は例のWinネイティブな `:shell` があれば解決できますかね?","created_at":1424830395},{"id":75980984,"issue_id":705,"user_id":51972,"body":"おお、いつの間にこんな素晴らしいスレが！\r\n全く根拠はないんですが、このプロセス起動が起きる系の操作が妙に重い気がして(たぷんウイルスソフト系との相性なんですが)何かvim側でできる良い対策は無いかなぁと思ったりしたのが発端です。","created_at":1424878341},{"id":75981781,"issue_id":705,"user_id":51972,"body":"例えば\r\nhttps://github.com/907th/vim-auto-save/blob/master/README.md\r\n\r\nこれとか入れて200ms起きに:wするみたいな事させると、ガツガツキー操作がブロックされて実質操作不能になります。\r\n\r\nもちろんローカルで対策するのが正しいんですが、オフィスのパソコンだと自分ではウイルスソフトとか変えられなくて、いかんともしがたいなぁと、、、","created_at":1424878573},{"id":76503908,"issue_id":705,"user_id":51972,"body":"ちなみに、:wするだけでプロセスが立ち上がってるように見えるんですが、それって正しい挙動？\r\nうちの環境（セキュリティー強化させられてる）依存だったりするのかちょっと気になってます。","created_at":1425088627},{"id":76504384,"issue_id":705,"user_id":10111,"body":"そういう仕様ですね。\r\n\r\nhttps://github.com/907th/vim-auto-save/blob/master/plugin/AutoSave.vim#L53","created_at":1425089164},{"id":76504494,"issue_id":705,"user_id":10111,"body":"で、vim-ctags の方は vim-dispatch を使って非同期にプロセスを起動してます。\r\n\r\nhttps://github.com/szw/vim-tags/blob/master/plugin/tags.vim#L213-L217\r\n\r\nvimproc 使ったパッチを書いてあげると DOS 窓も開かないので皆が幸せになれる気がします。\r\n","created_at":1425089297},{"id":76504640,"issue_id":705,"user_id":51972,"body":"なるほど。情報ありがとうございます。\r\nまぁ実害はないんですがなんとなく気持ちが悪い感じだけですね。。。","created_at":1425089468},{"id":76504814,"issue_id":705,"user_id":10111,"body":"vim-dispatch は確か windows でも動作したと思うので `g:vim_tags_use_vim_dispatch` を設定すると DOS 窓は消えるかもしれません。","created_at":1425089666},{"id":74822060,"issue_id":703,"user_id":5533562,"body":"@mattn \r\nすみません，本当にずぶの素人で，\r\nvim自体，殆ど使ったことがなく（これから使い始めるために設定しています），\r\n簡単な修正しかできません．．．\r\n","created_at":1424243133},{"id":74822921,"issue_id":703,"user_id":10137,"body":"Cygwin + (Cygwin付属)mintty では ./configure; make; make install した vim が動きます。\r\nMinGW + (MSYS付属)mintty は msys-vim (古い! 7.3.*) が動きます。\r\nMinGW でも ./configure は pdcurses を使えば通ります。make が通らないことは確認しましたが、追及はしていません。\r\n\r\nこのリンク先をある程度参考にしています。\r\nhttp://dogwood.skr.jp/blog/2013/11/406/\r\n一見動くんですが、:q! としたときの ! が表示されないとか、ちょっとありますね。","created_at":1424243939},{"id":74823107,"issue_id":703,"user_id":10137,"body":"@dazaga 大丈夫です。気楽にいきましょうヽ(´ー｀)ノ。","created_at":1424244096},{"id":74836197,"issue_id":703,"user_id":10111,"body":"@dazaga 大丈夫です。修正は僕らオッチャンがやります。ヽ(´ー｀)ノ。\r\n\r\n```\r\n＿人人人人人人人人人人人人人人人＿\r\n＞　僕らオッチャンがやります。　＜\r\n￣Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y￣\r\n```","created_at":1424252095},{"id":74862652,"issue_id":703,"user_id":5533562,"body":"@mattn @ntak \r\nお二方，大変心強いです．\r\n私としても，導入段階でつまづいてvimを諦める気になれないので，\r\n絶対にうまく使えるところまでもっていきたいです．\r\nどうぞよろしくお願いします．","created_at":1424265813},{"id":74875929,"issue_id":703,"user_id":10111,"body":"この issue は、本来 mintty では動かせない非 cygwin 版 vim を mintty\r\nでも動く様にパッチを書いてオフィシャルに取り込んで貰おうという issue です。dazaga さんの今の課題とは少し異なるかと思います。\r\n\r\nOn 2/18/15, dazaga <notifications@github.com> wrote:\r\n> @mattn @ntak\r\n> お二方，大変心強いです．\r\n> 私としても，導入段階でつまづいてvimを諦める気になれないので，\r\n> 絶対にうまく使えるところまでもっていきたいです．\r\n> どうぞよろしくお願いします．\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/703#issuecomment-74862652\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1424271083},{"id":75431819,"issue_id":703,"user_id":10137,"body":"なんとなく見るに\r\n1) ウィンドウを大きくしてもスプラッシュスクリーンが追従しない → 画面サイズが取れてない\r\n2) 入力した文字が Vim 本体に伝わってない感\r\n3) Ctrl+C で何事もなく終了できる → シグナルハンドラとかその方面が働いてない\r\nっぽいので、ヤマとしてはまず標準入出力をどう Vim につなぐかなのかとは思いますけれど、\r\n現状の msys-vim が完全動作するっぽいのでなにか別の手段を取った方がいいのかもしれません…。\r\nmintty でも動作している msys-vim の構造を知りたい感マシマシ(´ー｀)で。","created_at":1424605653},{"id":129321558,"issue_id":703,"user_id":840186,"body":"まず、mintty上でWin32アプリを動かすと、isatty()が0を返すのですよね。\r\n一方、cygwinアプリはコンソール入出力は(Win32 APIを直接使わない限り)全てcygwin1.dllを介して行うので、cygwin1.dllが差分を全て吸収してくれるわけです。\r\nで、Win32 コンソールAPIをがんばってcygwin1.dllにつないでいるのがwinptyの処理のはずです。\r\n\r\nwinptyにがんばってもらえばそれでいいんじゃないですかね。\r\nもっとも、mintty上でWin32 vim.exeを動かすと反応がなくなってしまうのは不親切なので、エラーメッセージを出して終了するように出来ないだろうかとは思いますが。","created_at":1439188166},{"id":129324346,"issue_id":703,"user_id":10111,"body":"winpty にゆだねるのは構いませんが、winpty で動いてたけど動かなくなるよってのは vim-dev で言っておいた方がいいと思います。実際にやってる人がいてもおかしくないですからね。","created_at":1439188964},{"id":129551379,"issue_id":703,"user_id":840186,"body":"Standard streams in mintty\r\nhttp://sourceforge.net/p/msys2/wiki/Porting/#standard-streams-in-mintty\r\nMSYS2公式Wikiのmintty(とwinpty)に関する説明。","created_at":1439229839},{"id":131473681,"issue_id":703,"user_id":840186,"body":"https://github.com/k-takata/ptycheck\r\nとりあえず、mintty上で動いているかどうかを知る方法が分かりました。\r\n（標準入出力が全てリダイレクトされていると分かりませんが。）","created_at":1439689166},{"id":227478306,"issue_id":703,"user_id":840186,"body":"表題とは逆に、mintty上で動いていることを検出した場合は、`--not-a-term` が指定されていない限り、エラーメッセージを出して終了するようなパッチを作ってみました。\r\nhttps://bitbucket.org/k_takata/vim-ktakata-mq/src/2f74e9d4f259f3834e49c438d410f3764cd5eeb8/add-check-for-cygwin-pty.patch?fileviewer=file-view-default\r\n検出機構は、上記の ptycheck の最新版を組み込んでいます。\r\n\r\nなお今回のパッチでは、minttyが検出可能なのは、Vista以降のみです。XPに対応させるのはビルドが面倒なので、vim自体は動くものの、minttyの検出はできないようにしています。","created_at":1466523151},{"id":227483842,"issue_id":703,"user_id":10111,"body":"試さず言ってすみませんが mintty + winpty + vim でも大丈夫でしょうか。","created_at":1466524220},{"id":227489327,"issue_id":703,"user_id":840186,"body":"winptyを介していると、今まで通りmintty上ではないと判定されます。なので、今まで通り動こうとします。\r\n\r\nで、今winptyを試したところ、以前に比べて動作がかなり改善されている印象を受けました。\r\n","created_at":1466525290},{"id":227491669,"issue_id":703,"user_id":840186,"body":"上で挙げられていた、Win32版をwinpty上で動かした際の問題ですが、\r\n\r\n> 1) ウィンドウを大きくしてもスプラッシュスクリーンが追従しない → 画面サイズが取れてない\r\n\r\nWin32版では、マウスでウィンドウサイズの変更はできないですから、これは仕方がない気がします。minttyの画面サイズを変更できなくするなら、なお良いのですが。\r\n逆に、`set co=90` などとして Vim の方からウィンドウサイズを変更してみようとしたのですが、mintty のウィンドウは追従しませんでした。\r\n\r\n> 2) 入力した文字が Vim 本体に伝わってない感\r\n\r\n軽く試した範囲では問題なさそう。サロゲートペアも入力できましたし。\r\n\r\n> 3) Ctrl+C で何事もなく終了できる → シグナルハンドラとかその方面が働いてない\r\n\r\nCtrl+C では終了しなくなっていました。","created_at":1466525774},{"id":227494639,"issue_id":703,"user_id":10111,"body":"僕も最近 winpty を使って良くなっているのを確認しました。多分後は標準入力くらいだっと思います。\r\n\r\n```\r\n$ echo 123 | winpty vim -\r\n```\r\n","created_at":1466526393},{"id":227606329,"issue_id":703,"user_id":840186,"body":"minttyでVimを使いたければ普通はCygwin or MSYS2のVimを使えば良いですし、そうでなくても、winpty + Win32 Vimでそこそこ動くので、Win32 Vimがminttyに自前で対応する必然性はほとんど無くなった気がします。\r\n","created_at":1466553259},{"id":227606747,"issue_id":703,"user_id":10111,"body":":+1: これは winpty の問題なので僕らは mintty 上でハングや操作不可にさえならなければokすね。","created_at":1466553414},{"id":227735001,"issue_id":703,"user_id":840186,"body":"投げてみた。\r\nhttps://groups.google.com/d/msg/vim_dev/4AvebNRfAZ8/pZoqWPFsKAAJ","created_at":1466600329},{"id":228622801,"issue_id":703,"user_id":840186,"body":"入った。7.4.1963\r\nhttps://groups.google.com/d/msg/vim_dev/r78RJPGnIA8/4EBa64NvBgAJ\r\n\r\nさて、このissueどうしますか？\r\nminntyが検出できるようになったのでOKとするか、それともmintty上でnativeに動くまで頑張るか…。","created_at":1466975080},{"id":228634423,"issue_id":703,"user_id":840186,"body":"ちなみに、これの影響でVCでコンパイルする場合には、VC2008以降が ~~必須~~ 推奨となりました。\r\n(VC2005でもコンパイルは可能ですが、mintty 検出機能は無効化されます。)","created_at":1466989015},{"id":228634589,"issue_id":703,"user_id":10111,"body":"> Running Win32 Vim in mintty does not work. \r\n\r\nって書かれちゃうとうーん。","created_at":1466989162},{"id":228651498,"issue_id":703,"user_id":840186,"body":"> Running Win32 Vim in mintty does not work.\r\n\r\nwinptyを介さないと応答がなくなってしまうのは、動かないと言っていい気がします…。\r\n\r\n> さて、このissueどうしますか？\r\n> minntyが検出できるようになったのでOKとするか、それともmintty上でnativeに動くまで頑張るか…。\r\n\r\n私としてはこれ以上の対応は不要と考えていますが。","created_at":1467001534},{"id":71617841,"issue_id":691,"user_id":518808,"body":"まさにbreak :sweat_smile: \r\nその状態から `h`や`l`で移動すると直るので、wrap直後(折り返し最初のカラム)の処理がマズっている感じですね。","created_at":1422352103},{"id":73462398,"issue_id":691,"user_id":518808,"body":"これで直る。他に影響が出てるかもしれない。\r\n```diff\r\ndiff -r cd5eff09c1ae src/screen.c\r\n--- a/src/screen.c\tThu Feb 05 20:29:59 2015 +0100\r\n+++ b/src/screen.c\tMon Feb 09 14:18:58 2015 +0900\r\n@@ -3854,7 +3854,7 @@\r\n \t\t\t&& vcol < tocol))\r\n \t\tarea_attr = attr;\t\t/* start highlighting */\r\n \t    else if (area_attr != 0\r\n-\t\t    && (vcol == tocol\r\n+\t\t    && (vcol >= tocol\r\n \t\t\t|| (noinvcur && (colnr_T)vcol == wp->w_virtcol)))\r\n \t\tarea_attr = 0;\t\t\t/* stop highlighting */\r\n \r\n```\r\n\r\n影響が出た場合は、win_line() の3178行目、3181行目で読んでる`getvvcol()`内で「breakindent中のカラムの場合はbreakindent開始カラムに調整した`tocol`を返すような修正」が必要だと思います。\r\n影響範囲デカイですけど。\r\n```c\r\ngetvvcol(wp, &pos, (colnr_T *)&tocol, NULL, NULL);\r\n\r\ngetvvcol(wp, &pos, NULL, NULL, (colnr_T *)&tocol);\r\n```","created_at":1423462742},{"id":73479795,"issue_id":691,"user_id":518808,"body":"うん、このpatchで問題なさそう:+1:","created_at":1423474382},{"id":73479955,"issue_id":691,"user_id":10111,"body":":hankey: のpatchｷﾀｰ!","created_at":1423474472},{"id":73497555,"issue_id":691,"user_id":142094,"body":"ありがとうございます。\r\n\r\nよくわかってなかったんですがbreakindent時はちゃんとずれて、というかがたがたの範囲が選択されるんですね。表示と実際の範囲のずれをどうするのかなーと心配してました。\r\n\r\n関係ないんですが、これってもう出てましたっけ\r\n\r\n```\r\n  +-----------+\r\n 1|  012345 01|\r\n  |__2345     |\r\n 2|012345 0123|\r\n  |456        |\r\n  +-----------+\r\n  (*) \"_\" は breakindent による空白\r\n\r\n  gg0<C-V>jgjly\r\n  :echo getreg('\"', 0, 1)\r\n  ['  012345 01  ', '012345 012345']\r\n  (1行目の末尾に空白がついてる。6まで選択した場合はつかない)\r\n```\r\n\r\n余計な空白がつく系の話を前に見たようなないような。","created_at":1423483152},{"id":73511117,"issue_id":691,"user_id":518808,"body":"( ﾟ∀ﾟ)･∵. ｸﾞﾊｯ!!\r\n'breakindent' + visual block yankまだバグってますね。。\r\n`getvcol()`というか`win_lbr_chartabsize()`を根本的に見直さないとダメだこりゃ。\r\n今週末追いかけてみます(maybe)\r\n\r\nそういえば、@ynkdir さんの図、11カラムで`breakindent`出来てるけど「あれっ？こっちでは`breakindent`効かない」と思ったら`briopt`オプション弄らないとだめなんですね。\r\n`set briopt=min:0`\r\nちょっと戸惑いました:smile:","created_at":1423489900},{"id":66272002,"issue_id":677,"user_id":468368,"body":"コンセプトはありだと思います。\r\n\r\n異なるmapgroupで同じキーをマップしちゃった場合どうなりますかね?\r\n特にあとから定義したマップのmapgroupを消した場合の動作が気になります。\r\n\r\n```vim\r\nmapgroup A\r\n  mapclear\r\n  noremap <leader>ma :<c-u>echo \"foo\"<cr>\r\nmapgroup END\r\n\r\nmapgroup B\r\n  mapclear\r\n  noremap <leader>ma :<c-u>echo \"bar\"<cr>\r\nmapgroup END\r\n\r\nmapgroup B\r\n  mapclear\r\nmapgroup END\r\n```","created_at":1418126161},{"id":66272235,"issue_id":677,"user_id":10111,"body":"mapclear 時は ID 指定で消すので、 B のマップが成功しても失敗しても mapclear で A のは消えません。","created_at":1418126298},{"id":66272490,"issue_id":677,"user_id":10111,"body":"map の更新は中身だけ書き換えるらしいので KoRoN さんの例だと \"bar\" です。ID も差し替えないとなー。","created_at":1418126444},{"id":66272729,"issue_id":677,"user_id":10111,"body":"期待する動作(bar が出なくなる)に修正しました。","created_at":1418126586},{"id":66274009,"issue_id":677,"user_id":10111,"body":"メリットとしては一括で消せるくいしかないですなw","created_at":1418127333},{"id":185636949,"issue_id":677,"user_id":10111,"body":"https://groups.google.com/forum/#!topic/vim_dev/du6TOLfgtj0","created_at":1455790053},{"id":185637905,"issue_id":677,"user_id":48169,"body":"vimrc 再読み込みとかした時に、古いマッピングも残らず確実に消せるので便利ですね (一部の人向け？)。","created_at":1455790311},{"id":186170062,"issue_id":677,"user_id":518808,"body":"@mattn \r\nK&R style関数定義あります。\r\nhttps://gist.github.com/mattn/ca264155959f476bc8dd#file-mapgroup-diff-L84\r\nhttps://gist.github.com/mattn/ca264155959f476bc8dd#file-mapgroup-diff-L139\r\nhttps://gist.github.com/mattn/ca264155959f476bc8dd#file-mapgroup-diff-L151\r\nhttps://gist.github.com/mattn/ca264155959f476bc8dd#file-mapgroup-diff-L177","created_at":1455879236},{"id":186170290,"issue_id":677,"user_id":10111,"body":"あー。忘れてましたね。","created_at":1455879314},{"id":186170674,"issue_id":677,"user_id":10111,"body":"更新ed","created_at":1455879456},{"id":186171073,"issue_id":677,"user_id":518808,"body":":+1: LGTM","created_at":1455879534},{"id":63182111,"issue_id":665,"user_id":518808,"body":"Issue登録ありがとうございます。\r\n\r\ntextwidthオプション、colorcolumnオプション共に画面(screen)上の桁に対して処理されます。\r\n(colorcolumnオプションのヘルプ(en)では`screen columns`という言葉が使われています)\r\nですので、問題点i～iiiは仕様だと思います。\r\n問題点ivは微妙なところですね。","created_at":1416075275},{"id":63198404,"issue_id":665,"user_id":3213998,"body":"ご確認いただきありがとうございます。\r\n\r\n確かに英語ヘルプに記載されていますね。\r\n確認不足でお手を煩わせてしまい申し訳ありません。\r\ni～iiiが仕様とのこと、よくわかりました。\r\n特にiiiは完全に通常の動作ですね、お恥ずかしい・・・\r\n\r\n問題点ivについては、見えないよりは見えたほうが便利とは思います。\r\nですが、一般的に折り返し後にcolorcolumが来ることは少ない(はず)ので、わざわざ修正していただく必要性は薄いかと思います。","created_at":1416096279},{"id":62825186,"issue_id":663,"user_id":10111,"body":"im_add_to_input\r\nadd_to_input_buf_csi\r\n\r\nがそれです。昔その変の実装をやった時に、マップしない様にしたはずなんですけどね...\r\nデグったかな？\r\n","created_at":1415841210},{"id":62851609,"issue_id":663,"user_id":7233193,"body":"#545 との関連はわかってないとのことだったので、こちらの環境でも調べて見ました。\r\nディストリは Ubuntu 12.04で、日本語入力環境はuim-mozcです。\r\n\r\n素の GVim 7.3.429 で再現しました。\r\n自前ビルドの GVim 7.4.516 でも再現しました。\r\n#545 の ynkdirさんのパッチ (実際にはkoronさんの[これ](https://bitbucket.org/koron/vim-kaoriya-patches/src/45cc1c3f34722efc56ac3da20b10393633d29478/X012-ynkdir-im_over_the_spot.diff)のみ) を適用した GVim 7.4.516 では再現しませんでした。\r\n\r\nover the spotのパッチ当てれば再現しないようです。","created_at":1415863633},{"id":62865015,"issue_id":663,"user_id":10111,"body":"はい。OnTheSpot の場合に走る im_commit_cb というコールバックから上記の関数が呼ばれます。\r\nOverTheSpot の場合は呼ばれません。この関数は本来、map が実行されない想定だったんですが...","created_at":1415871599},{"id":63015024,"issue_id":663,"user_id":7233193,"body":">  im_commit_cb というコールバックから上記の関数が呼ばれます。\r\n\r\nなるほど。\r\nソース確認してないのが、モロバレでしたね…\r\n\r\nこれはこれで、修正された方が良いと思いますが、\r\nOnTheSpotで、このまま行くのもつらい感じがしますね。","created_at":1415945528},{"id":63016689,"issue_id":663,"user_id":10111,"body":"実は過去にいろんなマルチバイト圏(僕を含む)の人から色んなパッチが送り込まれて Bram が IM 関連に嫌気をさした(と思われる)事があって、その時に「IM はもう触らない」的な事を言われてしまったんですよね。","created_at":1415947316},{"id":67317389,"issue_id":663,"user_id":348382,"body":"この問題、自分で立てといて放置してましたすみません。\r\n> その時に「IM はもう触らない」的な事を言われてしまったんですよね。\r\n\r\nなんと...！\r\n確かに ynkdir さんの送ったパッチも華麗にスルーされてますね...\r\n\r\n例えばですけど、map されないようにするパッチだけ作れたとしても望み薄でしょうか。\r\n","created_at":1418820513},{"id":61398873,"issue_id":660,"user_id":3797062,"body":"nb1839さんに仕様だということと、該当コードの箇所を教えていただきました。\r\n仕様とのことなのでこのissueは閉じます。お騒がせしました。\r\n\r\n> nb1839\r\n> あ、多分それ仕様だと思います。＞ unmap で rhs\r\n> ちょっと古い知識ですが unmap の際は最初に lhs 検索して、該当するものがなかったら rhs を検索しにいってたような\r\n\r\n> -- http://lingr.com/room/vim/archives/2014/11/02#message-20521246\r\n\r\n**該当コード** https://github.com/vim-jp/vim/blob/5fb67392ddb3888ac2fcbf3de4f72708fbc60422/src/getchar.c#L3604\r\n","created_at":1414919214},{"id":61398892,"issue_id":660,"user_id":3797062,"body":"申し訳ないです. 仕様だったということは理解したんですが、理由を教えてもらった限りでは, 完全に `:unabbreviate` のために存在する昔からある仕様のようなので, `:unmap`では`{rhs}`を展開しないように変更してもよいのでは無いかと考えたので一応reopenさせていただきます.\r\n\r\n> Find an entry in the maphash[] list that matches.\r\n> For :unmap we may loop two times: once to try to unmap an entry with a\r\n> matching 'from' part, a second time, if the first fails, to unmap an\r\n> entry with a matching 'to' part. This was done to allow \":ab foo bar\"\r\n> to be unmapped by typing \":unab foo\", where \"foo\" will be replaced by\r\n> \"bar\" because of the abbreviation.\r\n\r\n> -- https://github.com/vim-jp/vim/blob/5fb67392ddb3888ac2fcbf3de4f72708fbc60422/src/getchar.c#L3568-L3573\r\n\r\n\r\n##### :h :unabbreviate\r\n\r\n> ```\r\n> :una[bbreviate] {lhs}\tRemove abbreviation for {lhs} from the list.  If none\r\n> \t\t\tis found, remove abbreviations in which {lhs} matches\r\n> \t\t\twith the {rhs}.  This is done so that you can even\r\n> \t\t\tremove abbreviations after expansion.  To avoid\r\n> \t\t\texpansion insert a CTRL-V (type it twice).\r\n> ```\r\n\r\n\r\n仕様変更したら互換性壊れるし, このままでいいでしょ! という場合は閉じます.\r\n","created_at":1414919264},{"id":61398922,"issue_id":660,"user_id":3797062,"body":"(コメントがおかしくて連投してしまいましたスイマセン...)","created_at":1414919346},{"id":61398933,"issue_id":660,"user_id":214488,"body":"> 仕様変更したら互換性壊れるし, このままでいいでしょ! という場合は閉じます.\r\n\r\n仕様はともかく doc にこの事が書かれないぽいので doc には追加する必要がありそう。","created_at":1414919377},{"id":58915539,"issue_id":653,"user_id":20474,"body":"備考: `unlet self` はきちんとハンドルされているようです。 => `E795: 変数 self を削除できません`","created_at":1413216841},{"id":59002124,"issue_id":653,"user_id":10111,"body":"```diff\r\ndiff -r 79c59b4c9d20 src/eval.c\r\n--- a/src/eval.c\tSat Oct 11 14:47:26 2014 +0200\r\n+++ b/src/eval.c\tTue Oct 14 16:47:07 2014 +0900\r\n@@ -15663,7 +15663,7 @@\r\n \t\tdi = dict_find(d, key, -1);\r\n \t\tif (di == NULL)\r\n \t\t    EMSG2(_(e_dictkey), key);\r\n-\t\telse\r\n+\t\telse if (!var_check_fixed(di->di_flags, key))\r\n \t\t{\r\n \t\t    *rettv = di->di_tv;\r\n \t\t    init_tv(&di->di_tv);\r\n```\r\n\r\n`remove()` はOKなんですが `filter()` をどうすべきか。\r\n\r\n1. filter にはアイテムとして現れない\r\n2. `v:key != \"self\"` を指定しても消せない\r\n\r\nどちらがいいでしょうね。\r\n\r\n\r\n","created_at":1413272896},{"id":59003191,"issue_id":653,"user_id":20474,"body":"そう言えば、`extend()` を使うと `self` を上書きできます。特にクラッシュなどはしないようですが…。","created_at":1413273511},{"id":59891513,"issue_id":653,"user_id":10111,"body":"filter の件、どうしましょうか","created_at":1413878041},{"id":61278424,"issue_id":653,"user_id":20474,"body":"どっちも微妙な気がしますし、Bram さんに報告してどうするか決めてもらうのがいいかもしれないですね。","created_at":1414769677},{"id":56297167,"issue_id":636,"user_id":142094,"body":"vim74-kaoriya-win64 これは最新 (7.4.444) のものでしょうか。\r\nnetrw のバージョンはいくつになってますか。\r\n適当に `:e .` とかやると netrw が開いて右上にバージョンが出ると思います。\r\n\r\n私の手元ではディレクトリは表示できてます。ファイルの読み書きは壊れてますが。","created_at":1411302119},{"id":56449210,"issue_id":636,"user_id":8836552,"body":">vim74-kaoriya-win64 これは最新 (7.4.444) のものでしょうか。\r\nはい。そうです。\r\n3日ほど前に、下記のサイトからダウンロードを行いました。\r\nhttp://www.kaoriya.net/software/vim/\r\nまた、gvim.exe を実行時に、”7.4.444”の表示があります。\r\n\r\n\r\n>netrw のバージョンはいくつになってますか。\r\n>適当に :e . とかやると netrw が開いて右上にバージョンが出ると思います。\r\n下記のような表示になります。\r\nv152ということになると思います。\r\n\r\n\" ============================================================================\r\n\" Netrw Directory Listing                                        (netrw v152)\r\n\"   C:/editor/vim/vim74-kaoriya-win64\r\n\"   Sorted by      name\r\n\"   Sort sequence: [\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$\r\n\"   Quick Help: <F1>:help  -:go up dir  D:delete  R:rename  s:sort-by  x:special\r\n\" ==============================================================================\r\n\r\n\r\n>私の手元ではディレクトリは表示できてます。ファイルの読み書きは壊れてますが。\r\n対象のクライアントマシンでは、ftpサーバー側のディレクトリは見えません。\r\n\r\n\r\n追記\r\nftpサーバー側に問題は無いと考えています。\r\nなぜなら、別のクライアントマシンから、同じftpサーバーにはアクセス出来るからです。\r\nちなみのアクセスできるマシンは、Windows７です。\r\nこれは推測ですが、Windows7とWindows8の違いからこの問題が発生しているのでは\r\nないかと思っております。","created_at":1411422720},{"id":56476052,"issue_id":636,"user_id":142094,"body":"エラーの原因はこれです\r\n\r\n```\r\nsyntax/netrw.vim\r\n 27 syn match  netrwTreeBar         \"^\\%([-+|│] \\)\\+\"                                      contains=netrwTreeBarSpace      nextgroup=@netrwTreeGroup\r\n```\r\n\r\nちょっとわかりにくいですがパターンの中にユニコード文字が入ってます。\r\nうちではなぜか `:e .` だとエラーがでないですが `:set ft=netrw` かなんかで直接読み込むとエラーがでます。\r\nどうしたものか……。","created_at":1411447756},{"id":56477206,"issue_id":636,"user_id":840186,"body":"関係あるかどうか分かりませんが、`scriptencoding utf-8` がないですね。","created_at":1411449436},{"id":56508698,"issue_id":636,"user_id":142094,"body":"cp932 はそれでいいんですが syntax/diff.vim と同じであんまり解決しないです。\r\nとりあえず `:set enc=utf-8` で使ってもらえるとありがたいです。","created_at":1411473353},{"id":56539742,"issue_id":636,"user_id":142094,"body":"報告しました。`:if &enc == 'utf-8'` で囲む感じで。","created_at":1411486698},{"id":56596291,"issue_id":636,"user_id":8836552,"body":"ynkdirさん、\r\n\r\nご連絡ありがとうございます。\r\n本当に大変助かります。\r\n\r\n>とりあえず :set enc=utf-8 で使ってもらえるとありがたいです。\r\n\r\n>報告しました。:if &enc == 'utf-8' で囲む感じで。\r\n\r\nsyntax/netrw.vim を上記の指示に従って、\"syn match  netrwTreeBar  ................\"\r\nの前後に3行分追加しました。\r\n\r\nif &enc == 'utf-8'      \" 挿入行\r\nset enc=utf-8           \" 挿入行\r\nsyn match  netrwTreeBar\t\t\"^\\%([-+|│] \\)\\+\"\t\t\t\t\tcontains=netrwTreeBarSpace\tnextgroup=@netrwTreeGroup\r\nendif                         \" 挿入行\r\n\r\nですが、vimrun.exeが1分程度走りタイムアウトしてしまいます。\r\n\r\nもしかしたら、指示内容自体を、私が誤って理解してしまっているかもしれません。\r\nいかがでしょうか？\r\n\r\n![vim_error_timeout](https://cloud.githubusercontent.com/assets/8836552/4380587/6abe9af2-436b-11e4-8d1e-a2c6a1d880fb.jpg)","created_at":1411509338},{"id":56619479,"issue_id":636,"user_id":142094,"body":"すみませんそれは別々の話で\r\n\r\n1. vimrc の先頭に `set encoding=utf-8` と書く。\r\n\r\n2. syntax/netrw.vim を修正する。\r\n\r\n```vim\r\nif &encoding == 'utf-8'\r\n  syn match  netrwTreeBar\t\t\"^\\%([-+|│] \\)\\+\"\t\t\t\t\tcontains=netrwTreeBarSpace\tnextgroup=@netrwTreeGroup\r\nelse\r\n  syn match  netrwTreeBar\t\t\"^\\%([-+|] \\)\\+\"\t\t\t\t\tcontains=netrwTreeBarSpace\tnextgroup=@netrwTreeGroup\r\nendif\r\n```\r\n\r\nこれのどちらか一つで大丈夫です。両方でも構いません。\r\n\r\nこれは直さなくても syntax/netrw.vim は表示だけの話なのでエラーが出てても気にしなければ動作的には問題ないはずです。\r\n\r\n動かない件は、もしかしたら windows8 の ftp が少し変更があったのかもしれませんね。私は持ってないのでわかりませんが。あとはなにかファイアウォール関係とか。\r\n\r\nnetrw はけっこうがたがたなのでそもそもまともに動かないというのもあります。","created_at":1411527808},{"id":56621151,"issue_id":636,"user_id":840186,"body":"> vimrc の先頭に `set encoding=utf-8` と書く。\r\n\r\n香り屋版では、代わりに `switches\\catalog\\utf-8.vim` を `switches\\enabled\\` にコピーでも可です。","created_at":1411529795},{"id":56743091,"issue_id":636,"user_id":8836552,"body":"ynkdir さん、\r\n\r\nご連絡ありがとうございました。\r\n\r\n教えていただいた変更の意図の内容が理解できました。\r\nありがとうございました。\r\n\r\nただし、ynkdir さんもおっしゃっていますが、教えていただいたとおりにファイルを変更しても状況は変わりません。\r\n御指摘いただいたように、Windows8のネットワークのセキュリティの部分を調査しております。\r\n上記の調査を行う上で、vimのエラーログファイル等があればそれも調査の材料にしていたいと思っております。\r\nhttp://vim-jp.org/vimdoc-ja/index.html 等をみておりますが、それに該当するようなものがみつかりません。\r\n大変恐縮なのですが、エラーログ等に関する情報がどこにあるか教えていただけないでしょうか？\r\n\r\n参考までに、記載しておくと、下記の事項を試してみましたが状況が変わりません。\r\n１．FileZilla\r\n問題の発生しているクラインアントにFileZillaをインストールし、対象のFTPサーバーに接続可能であるかどうか確認\r\n→FileZllaは接続できることを確認（Vimとは状況が異なる）\r\n２．FireWall\r\nFireWallを一時的に無効にして、Vimが対象FTPサーバにアクセスできるかどうか確認\r\n→接続できない。（状況かわらず）\r\n","created_at":1411594689},{"id":56743686,"issue_id":636,"user_id":8836552,"body":"k-takata さん、\r\n\r\nありがとうございます。\r\n>香り屋版では、代わりに switches\\catalog\\utf-8.vim を switches\\enabled\\ にコピーでも可です。\r\n一応、上記で行っても問題を解決できなかった旨を報告しておきます。\r\n\r\nネットワークのセキュリティ関連を調査していく予定でおります。\r\n","created_at":1411594975},{"id":56754810,"issue_id":636,"user_id":142094,"body":"> 大変恐縮なのですが、エラーログ等に関する情報がどこにあるか教えていただけないでしょうか？\r\n\r\nエラーログは特にないみたいです。しいていえば `:e ftp://example.com/` 実行後の vim 画面に ftp の出力がでてると思います。\r\n\r\nあとは\r\n\r\n```vim\r\n:let netrw_ftp_cmd = 'gvim -'          \" (gvimじゃなくても標準入力を表示できればなんでもいいですが)\r\n:let netrw_ftp_options = ''\r\n:e ftp://example.com/\r\n```\r\n\r\nこんな感じで実行すると netrw が実行しようとしている ftp コマンドが見れるので、それを ftp に手動で入力してみるとなにかエラーかなんか見えるかもしれないです。","created_at":1411601484},{"id":69060105,"issue_id":636,"user_id":840186,"body":"7.4.566直後のコミットにNetrw v153が取り込まれました。\r\nsyntax/netrw.vim でエラーになる問題の修正は含まれています。\r\n\r\n```vim\r\nif has(\"gui_running\") && (&enc == 'utf-8' || &enc == 'utf-16' || &enc == 'ucs-4')\r\nsyn match  netrwTreeBar\t\t\"^\\%([-+|│] \\)\\+\"\t\t\t\t\tcontains=netrwTreeBarSpace\tnextgroup=@netrwTreeGroup\r\nelse\r\nsyn match  netrwTreeBar\t\t\"^\\%([-+|] \\)\\+\"\t\t\t\t\tcontains=netrwTreeBarSpace\tnextgroup=@netrwTreeGroup\r\nendif\r\n```\r\ngui_running, utf-16, ucs-4 のチェックは要らない気がしますが、実害はないでしょう。","created_at":1420652617},{"id":55358970,"issue_id":634,"user_id":48169,"body":"let F = lambda(`\r\n\\let x = shougo#kisamamasaka(a:1) |\r\n\\let y = shougo#sonomasakada(a:1) |\r\n\\return shougo#fuhahahahaha(x, y) `)\r\n\r\nで、現状でもうこう書けばいけるような気がします。\r\nヒアドキュメントが欲しいのには同意です。\r\n2014/09/12 11:11 \"mattn\" <notifications@github.com>:\r\n\r\n> 「ぶっヒアドキュメントする」…そんな言葉は使う必要がねーんだ。\r\n> なぜなら、オレや、オレたちの仲間は、\r\n> その言葉を頭の中に思い浮かべた時には！\r\n> 実際に相手をヒアドキュメントっちまって、もうすでに終わってるからだッ！\r\n> だから使った事がねェーッ。\r\n> mattn、オマエもそうなるよなァ～～～、オレたちの仲間なら…\r\n> わかるか？オレの言ってる事…え？\r\n> 『ぶっヒアドキュメントした』なら、使ってもいいッ！\r\n>\r\n> オレらの思いはただこれだけだ。これを動かしたいッ！\r\n>\r\n> let F = lambda(`\r\n>   let x = shougo#kisamamasaka(a:1)\r\n>   let y = shougo#sonomasakada(a:1)\r\n>   return shougo#fuhahahahaha(x, y)\r\n> `)\r\n>\r\n> パッチはまだない。\r\n>\r\n>    -  実装\r\n>    -  ドキュメント\r\n>    -  テスト\r\n>\r\n> —\r\n> Reply to this email directly or view it on GitHub\r\n> <https://github.com/vim-jp/issues/issues/634>.\r\n>\r\n","created_at":1410494215},{"id":55360082,"issue_id":634,"user_id":10111,"body":"出来るのはみんな分かってて、クォート内でクォートのエスケープを書きたくないってのが一番だと思います。","created_at":1410495743},{"id":55360214,"issue_id":634,"user_id":468368,"body":"ちょっとアレなんですが、lambdaの中にはlambda書きたいなぁw","created_at":1410495926},{"id":55069165,"issue_id":632,"user_id":11504,"body":"感極まってきました\r\n\r\n![lambza](http://www.tsutaya.co.jp/game/sp/fft/img/chara_01.png)","created_at":1410322454},{"id":55069671,"issue_id":632,"user_id":823277,"body":"感極まり++","created_at":1410323100},{"id":55069762,"issue_id":632,"user_id":571248,"body":"mattn++","created_at":1410323217},{"id":55069773,"issue_id":632,"user_id":10111,"body":"処理は出来てるので、かっこいいシンタックスを考えてもいいかなーと思います。","created_at":1410323229},{"id":55069791,"issue_id":632,"user_id":823277,"body":"Python のように式1つしか許容しないなら `return` は不要だと思います．`:function` と同様に複数のコマンド呼び出しを書けるようにするならヒアドキュメントが無い Vim で改行どうするかとかがむずそうですね…","created_at":1410323251},{"id":55069841,"issue_id":632,"user_id":20474,"body":"それラムダやない、ラムザや。","created_at":1410323321},{"id":55070120,"issue_id":632,"user_id":468368,"body":"そのサンプルからだと、現状のlambdaの機能というか、革新ポイントがわからない。\r\n\r\n```viml\r\n:let v = 1\r\n:let f = lambda('return a:1 + v')\r\n:let v = 2\r\n:echo f(10)\r\n11\r\n```\r\n\r\nみたいな例だと良いかも。\r\n\r\n仮にこれが `12` になるのだったらメリットない。\r\n","created_at":1410323718},{"id":55070200,"issue_id":632,"user_id":10111,"body":"キャプチャだから逆に12にならないといけないのでは\r\n","created_at":1410323830},{"id":55070452,"issue_id":632,"user_id":303372,"body":":+1:","created_at":1410324167},{"id":55070545,"issue_id":632,"user_id":10111,"body":"vim スクリプトの eval は実行時スコープ、かたや関数は宣言時スコープなので例えば自前でソート関数を実装した際に\r\n\r\n```vim\r\nlet s:x = 1\r\nlet s:y = oreore#sort([3,1,2], 'a:1 < a:2 + s:x')\r\n```\r\nの様にした場合、`oreore#sort` 側で eval すると `s:x` を参照出来ないのです。\r\nこれを可能にするのがこのパッチ。\r\n","created_at":1410324299},{"id":55070727,"issue_id":632,"user_id":823277,"body":"ラムダ式の引数に `a:1` とか `a:2` を使うと，可変長引数持ってる関数内で引数名がかちあってしまうんではないでしょうか．\r\n\r\n```vim\r\nfunction! Foo(arr, ...)\r\n    return map(a:arr, lambda('return a:1'))\r\nendfunction\r\n```","created_at":1410324533},{"id":55070769,"issue_id":632,"user_id":10111,"body":"あとこのパッチ、地味に修正が入ってて\r\n\r\n```vim\r\necho map([1,2,3], F)\r\n```\r\n\r\nで関数リファレンスが渡せる様にしてあります。現状は文字列でしか渡せない。\r\n","created_at":1410324581},{"id":55071323,"issue_id":632,"user_id":10111,"body":"ちょっと壊れてるっぽい","created_at":1410325331},{"id":55071365,"issue_id":632,"user_id":599164,"body":"#40 #102 #397 \r\n\r\n関係ありそうな過去 Issues からの参照の為に記載。\r\n\r\n#63 も関係あるかもしれない。","created_at":1410325385},{"id":55072199,"issue_id":632,"user_id":10111,"body":"直した。\r\nスコープ内でスコープ変数を破壊出来るようにした。\r\n\r\n```vim\r\nfunction! UpdateAndReturn(x, y, z)\r\n  let a:x[\"y\"] = a:z\r\n  return a:y\r\nendfunction\r\n\r\nfunction! Foo(arr, x)\r\n  let x = a:x\r\n  let r = map(a:arr, lambda('return UpdateAndReturn(l:, a:1, x)'))\r\n  echo l:\r\n  return r\r\nendfunction\r\n\r\necho Foo([3,2,1], 5)\r\n```","created_at":1410326476},{"id":55073757,"issue_id":632,"user_id":468368,"body":"@mattn \r\n\r\n> キャプチャだから逆に12にならないといけないのでは\r\n\r\n変数 `v` の参照ではなく **値** をキャプチャしたほうがよい。\r\nというかそうでないと関数言語的に使えないのでキツイ。\r\n\r\nと思ったけど、lambda() への引数と、それを実行した関数との引数を区別できて\r\n後者だけ束縛できれば、それでも良い気がしてきた。","created_at":1410328176},{"id":55073854,"issue_id":632,"user_id":468368,"body":"```viml\r\nfunction! Incr(step)\r\n  return lambda('return a:1 + a:step')\r\nendfunction\r\n\r\nvar inc1 = Incr(1)\r\nvar inc9 = Incr(9)\r\n\r\necho inc1(10) \" 11\r\necho inc1(20) \" 21\r\necho inc9(10) \" 19\r\necho inc9(20) \" 29\r\n```\r\n\r\nイメージとしてはこんな使い方。","created_at":1410328308},{"id":55075942,"issue_id":632,"user_id":10111,"body":"> 変数 v の参照ではなく 値 をキャプチャしたほうがよい。\r\n> というかそうでないと関数言語的に使えないのでキツイ。\r\n\r\nよくわからないす。もすこし説明プリーズ。\r\n\r\nそもそも参照出来ないケースがあって、それを救おうとする為のパッチなので、おそらく僕が KoRoN さんに説明が足りないんだと思う。","created_at":1410330423},{"id":55082542,"issue_id":632,"user_id":468368,"body":"今移動中なので細かい説明は省きますが、一つ前に私が示した例が動けば、まずはそれで良いと考えています。\r\n","created_at":1410335777},{"id":55083234,"issue_id":632,"user_id":348382,"body":"ラムダ宣言時の \"値\" をキャプチャする、ということではないでしょうか。\n\n","created_at":1410336256},{"id":55085802,"issue_id":632,"user_id":10111,"body":"> 今移動中なので細かい説明は省きますが、一つ前に私が示した例が動けば、まずはそれで良いと考えています。\r\n\r\n動かないですね。Incr を抜けた時点で Incr が持ってるローカルスコープは消滅するので、やるのであれば\r\n\r\n```vim\r\nfunction! Incr(step)\r\n  return lambda(printf('return a:1 + %d', a:step))\r\nendfunction\r\n\r\nlet Inc1 = Incr(1)\r\nlet Inc9 = Incr(9)\r\n\r\necho Inc1(10)\r\necho Inc1(20)\r\necho Inc9(10)\r\necho Inc9(20)\r\n```\r\n\r\nこうしないといけないです。","created_at":1410338003},{"id":55085938,"issue_id":632,"user_id":10111,"body":"現状、ローカルスコープ辞書 `l:` やウィンドウスコープ辞書 `w:` 等は消滅時に消えてしまうので、それを消滅ではなく参照を外すだけにする様な修正を入れないといけないですね。","created_at":1410338080},{"id":55086430,"issue_id":632,"user_id":20474,"body":"> 現状、ローカルスコープ辞書 l: やウィンドウスコープ辞書 w: 等は消滅時に消えてしまう\r\n\r\nローカルスコープ辞書は死にませんよ。\r\n\r\n```vim\r\nfunction! s:foo()\r\n  let a = 10\r\n  return l:\r\nendfunction\r\n\r\nlet s:x = s:foo()\r\necho s:x\r\n\" => {'a': 10}\r\n```","created_at":1410338389},{"id":55086488,"issue_id":632,"user_id":20474,"body":"あ、ウィンドウスコープ辞書は消えます。","created_at":1410338423},{"id":55086548,"issue_id":632,"user_id":348382,"body":"ローカル変数くらいは宣言時の値を保持していてほしいですね。\r\n","created_at":1410338467},{"id":55090473,"issue_id":632,"user_id":1595779,"body":"```vim\r\nfunction A()\r\n  let v = 12\r\n  return lambda(\"return v * 2\")\r\nendfunction\r\n\r\nfunction B()\r\n  let v = 7\r\n  let F = A()\r\n  echo F()\r\nendfunction\r\n\r\ncall B()\r\n```\r\n\r\nこの場合、どっちのvが使われて欲しいだろう？\r\n","created_at":1410340853},{"id":55090685,"issue_id":632,"user_id":348382,"body":"僕は12がいいと思います","created_at":1410340977},{"id":55091318,"issue_id":632,"user_id":468368,"body":"ちょっと書式とも関わるのですが\r\n\r\n```viml\r\nfunction! Incr(step)\r\n  return lambda\r\n    return a:1 + {a:step}\r\n  endlambda\r\nendfunction\r\n```\r\n\r\nみたいに書いて、lambdaからendlambdaの中身の `{}` を\r\nlambda の外側のコンテキストで展開しちゃうってことができると\r\n面白いかもしれません。","created_at":1410341316},{"id":55091547,"issue_id":632,"user_id":1595779,"body":"```viml\r\n\" autoload/hoge.vim\r\nlet s:v = 2\r\nfunction hoge#f()\r\n  return lambda(\"return s:v\")\r\nendfunction\r\n```\r\n\r\n```viml\r\n\" foo.vim\r\nlet s:v = 3\r\nlet F = hoge#f()\r\necho F()\r\n```\r\n\r\nスクリプトローカル変数だと悩むなー。","created_at":1410341437},{"id":55093736,"issue_id":632,"user_id":1595779,"body":"値キャプチャ案だと、文字列とeval関数を使えばいいじゃんってことにはならないだろうか？\nだとすると、現在のVim scriptでは出来ない参照キャプチャのほうがよいかもしれない。","created_at":1410342646},{"id":55094875,"issue_id":632,"user_id":41495,"body":"この値キャプチャって要するにクロージャみたいなことがやりたいということですかね？","created_at":1410343303},{"id":55095863,"issue_id":632,"user_id":303372,"body":"ぱっと見、値キャプチャの方がいいと思ったんですが、rbtnnさんの言う通り、今の文字列で表現する形式だと、そのままその時の値を文字列で設定すればいいじゃんになっちゃいそうですね…","created_at":1410343921},{"id":55096347,"issue_id":632,"user_id":1595779,"body":"あ、私が上げた2つの例、根本的に違っていました。すみません。\nどのスコープの変数を使うのではなくて、変数をいつ評価するかですね。","created_at":1410344215},{"id":55096349,"issue_id":632,"user_id":348382,"body":"わざわざ文字列化するというのはなんとなく面倒そうですね。逆に参照のメリットはなんでしょう？","created_at":1410344217},{"id":55098592,"issue_id":632,"user_id":823277,"body":"値キャプチャしてきた変数をさらに変更する場合は，`eval()` で文字列に埋め込めばよいとはならない気がします．値キャプチャと参照キャプチャのどちらかを選ばないといけないなら，コスト考えると参照キャプチャのほうが良いように思いますが…（Ruby や Python もそうだったと思います）","created_at":1410345711},{"id":55099090,"issue_id":632,"user_id":348382,"body":"```ruby\r\nv = 1\r\na = ->(x){x + v}\r\nv = 2\r\n\r\nputs (a.call 1)\r\n# => 3\r\n```\r\nRuby は参照キャプチャなのか...","created_at":1410346088},{"id":55101003,"issue_id":632,"user_id":468368,"body":"クロージャ(=キャプチャ)のできないlambdaには、ほとんど魅力が無いです。\r\n(Vimでも既にできているとも言えるし)\r\n\r\nなんらかのかたちで値をキャプチャできるのは当然必要として、\r\nスコープをその対象に含めるのか、含めるにしてもなんらかの制限事項を付けるのかが\r\n実装の都合と諸々がせめぎ合うところでしょう。\r\n","created_at":1410347487},{"id":55101193,"issue_id":632,"user_id":468368,"body":"> 動かないですね。Incr を抜けた時点で Incr が持ってるローカルスコープは消滅するので、やるのであれば\r\n\r\n(以下略)\r\n\r\nこの変換を、Vim側が自動でやる表記方法でも良いです。\r\nさっき私が書いた `return a:1 + {a:step}` はその意味でした。","created_at":1410347638},{"id":55101416,"issue_id":632,"user_id":468368,"body":"もうちょっと書くと\r\n\r\n    lambda\r\n       return a:1 + {a:step}\r\n    endlambda\r\n\r\nこれが、現在の内部表現として\r\n\r\n    lambda(\"return a:1 + \" . string(a:step))\r\n\r\nみたいになると、それだけでも値の束縛(キャプチャ)はできるかと。","created_at":1410347831},{"id":55102174,"issue_id":632,"user_id":468368,"body":"いま移動中の電車のなかなので、帰ってからもう少し考えたことをまとめて書きます。","created_at":1410348376},{"id":55105927,"issue_id":632,"user_id":48169,"body":"JavaScriptの無名関数は変数の参照をキャプチャしますね。\r\n無名関数作成時の値をキャプチャするのはPerlとかでしょうか。\r\n\r\n自分の意見としては、内部的な事は分かりませんが、参照の方が効率良さそうだし、リアクティブプログラミングっぽいかも？と思います。\r\nただ言語によってまちまちだしどっちでもいいかなとも(ry\r\n","created_at":1410350982},{"id":55108628,"issue_id":632,"user_id":348382,"body":"Scala でも試してみたらどうやら参照キャプチャのようでした。\r\nあれ、もしかして参照キャプチャの方が一般的...?","created_at":1410352690},{"id":55111666,"issue_id":632,"user_id":571248,"body":"値キャプチャの結果、参照キャプチャになってる言語が多いんじゃないかと思います。","created_at":1410354330},{"id":55111706,"issue_id":632,"user_id":468368,"body":"まず、第一弾としてフルスペックのものを出す必要はない、と考えています。\r\n\r\nVim scriptは既存の構造的に、関数実行時のコンテキスト(各種スコープ類)へのアクセスは容易ですが、関数定義時/作成時のコンテキストへのアクセスには、それなりの困難をともないます。\r\n\r\n\\# 特に正しくGCをすることを考えると頭がいたい\r\n\r\n私は、この「関数作成時のコンテキストへのアクセス」をここまでは「キャプチャー」とか「捕捉」とか「束縛」と表記してきました。\r\n\r\n以上を踏まえた上で、初弾としては、関数定義時のコンテキストへのアクセスとして、ローカルスコープからの読み込みだけをサポートする、という割り切りもありかなと考えました。なぜなら lambda の総本山である純粋関数型言語では、変数の変更はできませんから、無くても excuse できるだろうと。それ以上については、AS ISで、実行時コンテキストへのアクセスしかできません、という形です。\r\n\r\nこの「ローカルスコープからの読み込み」を最低限満たすのが、ここまでに何度か書いた `Incr()` 関数です。\r\n\r\n```viml\r\nfunction! Incr(step)\r\n  return lambda\r\n    return a:1 + {a:step}\r\n  endlambda\r\nendfunction\r\n```\r\n\r\n既に書いたようにVimは「関数実行時のコンテキストへのアクセス」は、何もしなくてもできます。しかし新たに「関数作成時のコンテキストへのアクセス」が増えると、それらを区別しなければなりません。他の言語はそれを自動でやってくれるのですが、Vim scriptだとちょっと難しい(面倒)と考えています。\r\n\r\n(効率的に動作させるには、lambdaで定義される関数の内容をみて、キャプチャーする対象を決定する必要がある。しかし現在のVim scriptは解釈と実行を同時に行うので、関数作成時にはどのコンテキストにアクセスするのかわからない。)\r\n\r\nですから、このサンプルで使用した `{}` の表記は、それを明示的に区別するために導入してみました。既存の `{}` とバッティングしますが、まぁ lambda の中では特別にこちらの意味で良いかなと。\r\n\r\nで、繰り返しになりますが、初弾の `{}` はローカルスコープからの読み込みだけをサポートするとして、徐々にサポートするスコープを増やし、書き込みもできるようにできたら、推しやすいのかなと考えました。\r\n\r\n以上。\r\n","created_at":1410354354},{"id":55113215,"issue_id":632,"user_id":468368,"body":"ちょっと違った側面から、補足しておきます。\r\n\r\n現状のVim scriptでも、工夫をすれば関数オブジェクトは作れるし、関数作成時のコンテキストへのアクセスも、読み込みに限れば問題なくできます。面倒でわかりにくいですけど。\r\n\r\nよって私の先に書いたやり方で lambda を導入する、そのメリットは、関数作成のわかりやすいシンタックスシュガーを導入することと、そのシュガー内でのアクセス先の選択を明示する方法を定義すること、この2点に集約されます。\r\n\r\nですが、一旦この2つが導入されてしまえば、特に後者の「作成時コンテキストへのアクセス」を拡張していくのは、技術的には間違いなく大変ですが、交渉的には遥かに楽な仕事になると考えています。\r\n","created_at":1410355069},{"id":55115477,"issue_id":632,"user_id":10111,"body":"キャプチャされる関数の引数名がキャプチャする関数の引数名とバッティングすることは通常どの言語でもあり得ますし、一般的にそういう場合は一時変数で別名に預けるか、JavaScript\r\nの様に即時関数を作って値を束縛します。\r\nVim script もそうやれるのであれば新しいシンタックスを用意する必要はないかなと思います。またテンプレートの様な書式は lambda\r\nの機能から少し一線を欠く気がするので今出すならこのパッチ程度の機能で、シンタックスだけ議論した方がいいと思っています。\r\n\r\nOn 9/10/14, MURAOKA Taro <notifications@github.com> wrote:\r\n> まず、第一弾としてフルスペックのものを出す必要はない、と考えています。\r\n>\r\n> Vim\r\n> scriptは既存の構造的に、関数実行時のコンテキスト(各種スコープ類)へのアクセスは容易ですが、関数定義時/作成時のコンテキストへのアクセスには、それなりの困難をともないます。\r\n>\r\n> \\# 特に正しくGCをすることを考えると頭がいたい\r\n>\r\n> 私は、この「関数作成時のコンテキストへのアクセス」をここまでは「キャプチャー」とか「捕捉」とか「束縛」と表記してきました。\r\n>\r\n> 以上を踏まえた上で、初弾としては、関数定義時のコンテキストへのアクセスとして、ローカルスコープからの読み込みだけをサポートする、という割り切りもありかなと考えました。なぜなら\r\n> lambda の総本山である純粋関数型言語では、変数の変更はできませんから、無くても excuse できるだろうと。それ以上については、AS\r\n> ISで、実行時コンテキストへのアクセスしかできません、という形です。\r\n>\r\n> この「ローカルスコープからの読み込み」を最低限満たすのが、ここまでに何度か書いた `Incr()` 関数です。\r\n>\r\n> ```viml\r\n> function! Incr(step)\r\n>   return lambda\r\n>     return a:1 + {a:step}\r\n>   endlambda\r\n> endfunction\r\n> ```\r\n>\r\n> 既に書いたようにVimは「関数実行時のコンテキストへのアクセス」は、何もしなくてもできます。しかし新たに「関数作成時のコンテキストへのアクセス」が増えると、それらを区別しなければなりません。他の言語はそれを自動でやってくれるのですが、Vim\r\n> scriptだとちょっと難しい(面倒)と考えています。\r\n>\r\n> (効率的に動作させるには、lambdaで定義される関数の内容をみて、キャプチャーする対象を決定する必要がある。しかし現在のVim\r\n> scriptは解釈と実行を同時に行うので、関数作成時にはどのコンテキストにアクセスするのかわからない。)\r\n>\r\n> ですから、このサンプルで使用した `{}` の表記は、それを明示的に区別するために導入してみました。既存の `{}` とバッティングしますが、まぁ\r\n> lambda の中では特別にこちらの意味で良いかなと。\r\n>\r\n> で、繰り返しになりますが、初弾の `{}`\r\n> はローカルスコープからの読み込みだけをサポートするとして、徐々にサポートするスコープを増やし、書き込みもできるようにできたら、推しやすいのかなと考えました。\r\n>\r\n> 以上。\r\n>\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/vim-jp/issues/issues/632#issuecomment-55111706\r\n\r\n\r\n-- \r\n- Yasuhiro Matsumoto\r\n","created_at":1410356155},{"id":55116425,"issue_id":632,"user_id":468368,"body":"一点、誤解されたままだとよろしくないので、補足しておきます。\r\n\r\n> キャプチャされる関数の引数名がキャプチャする関数の引数名とバッティングすること\r\n\r\n私はバッティングを解決するために `{}` を提案したのではありません。\r\n結果的にバッティングも避けられますが、**キャプチャしているものを明示するため** です。","created_at":1410356622},{"id":55116562,"issue_id":632,"user_id":468368,"body":"まぁ、最新版のパッチはまだ見てないんですけどね。\r\n最初の版はみました (・ω<)","created_at":1410356676},{"id":55120346,"issue_id":632,"user_id":468368,"body":"最新のパッチ見たら、まっつんさんの言いたいこと分かった。\r\n\r\n「とりあえず関数オブジェクトから\r\n　その作成コンテキストである `l:` へのフルアクセスはできるようにしたから、\r\n　中のシンタックスいじるのはやめて出しちゃおうぜ」\r\n\r\nですね。効率は度外視ですが、ありだとは思います :+1:\r\n\r\nただ問題があるとすれば…\r\n1つの関数で、複数の関数オブジェクトを作った時に、\r\n各々の関数オブジェクトのローカルスコープが共有されちゃう可能性がありそう\r\nかしら?","created_at":1410358252},{"id":55122889,"issue_id":632,"user_id":468368,"body":"revision 3 のパッチを見て現状でも\r\n\r\n```viml\r\nfunction! Incr(step)\r\n  let step = a:step\r\n  return lambda('return a:1 + step')\r\nendfunction\r\n\r\nlet incr1 = Incr(1)\r\nlet incr9 = Incr(9)\r\n\r\necho incr1(10)\r\necho incr1(20)\r\necho incr9(10)\r\necho incr9(20)\r\n```\r\n\r\nこれ動きそうだと思ってやってみたら落ちた。\r\n\r\nならばということで、最初の\r\n\r\n```viml\r\necho sort([3,7,2,1,4], lambda('return a:1 - a:2'))\r\n```\r\n\r\nこれを試してみたけど、やはり落ちた。デバッガでは追ってない。","created_at":1410359280},{"id":55125163,"issue_id":632,"user_id":468368,"body":"> 1つの関数で、複数の関数オブジェクトを作った時に、\r\n各々の関数オブジェクトのローカルスコープが共有されちゃう可能性がありそう\r\n\r\nこれを確認するために、以下の様なスクリプトを実行したかった。\r\n\r\n```viml\r\nfunction! DefineFuncs()\r\n  let one = lambda('let a = 111 | return a')\r\n  let two = lambda('return exists(\"a\") ? a : \"no\"')\r\n  return [one, two]\r\nendfunction\r\n\r\nlet f = DefineFuncs()\r\n\r\n\" This will print 'no'\r\necho f[1]()\r\n\r\n\" This will print 10\r\necho f[0]()\r\n\r\n\" Then, this (same as first call) will print 10\r\necho f[1]()\r\n\" ユーザは DefineFuncsのスコープに存在しない a については、one と two は別の\r\n\" ローカルスコープを持っていると考えるので、twoは常に 'no' を返すと期待する\r\n```","created_at":1410360152},{"id":55133548,"issue_id":632,"user_id":11504,"body":"> キャプチャしているものの明示\r\n\r\nPHPという言語では、`use`というキーワードを使うみたいです。というか明示しないとキャプチャしてくれないというユニークな仕様のようで、Vim scriptでこの方法が有用かもしれません。\r\n\r\n```php\r\n$mattn = 123;\r\n$f = function($x) use ($mattn) {\r\n  return $x + $mattn;\r\n};\r\n\r\n$f(1) //=> 124\r\n```","created_at":1410363194},{"id":55144900,"issue_id":632,"user_id":468368,"body":"> これ動きそうだと思ってやってみたら落ちた。\r\n\r\n`+profile` が原因かも。デバッガで止めたらこんな感じだった。\r\n\r\n![01](https://cloud.githubusercontent.com/assets/468368/4221452/170bee5c-390a-11e4-9d0c-56752eccd993.png)\r\n","created_at":1410367625},{"id":55147051,"issue_id":632,"user_id":468368,"body":"> +profile が原因かも。\r\n\r\nビンゴでした。 `FEATURES=HUGE` 消したら、基本的なsortの奴は動いた。","created_at":1410368560},{"id":55149465,"issue_id":632,"user_id":468368,"body":"せっかく動いたのでちょっと試してみました。\r\n\r\nhttps://gist.github.com/koron/af5dfc85163ed3bc0bfd\r\n\r\n[1_share_NG.vim](https://gist.github.com/koron/af5dfc85163ed3bc0bfd#file-1_share_ng-vim) は `One()` の呼び出しの `let a = 111` を書き込もうとするときに落ちてました。\r\n\r\n[2_share_OK.vim](https://gist.github.com/koron/af5dfc85163ed3bc0bfd#file-2_share_ok-vim) が成功することから、スコープに無い変数へ書こうとすると落ちるのだと推測されます。\r\n\r\nただし、そうだとすると [3_incr_NG.vim](https://gist.github.com/koron/af5dfc85163ed3bc0bfd#file-3_incr_ng-vim) が落ちるのが不可解で、こちらは step にアクセスしようとしたら、既に変数がなくなってて、落ちているっぽいです。\r\n","created_at":1410369507},{"id":55150360,"issue_id":632,"user_id":468368,"body":"> そうだとすると 3_incr_NG.vim が落ちるのが不可解で\r\n\r\n`Incr()` から抜けた瞬間に、そのローカルスコープのdictが回収されちゃってるのかも。\r\nパッチ見た時に、ふと疑問におもっていたことなんだけども、\r\nやっぱリファレンスカウンタ上げる必要があるのかな。","created_at":1410369866},{"id":55159929,"issue_id":632,"user_id":10111,"body":"パッチ直しました。koron さんのは動くようになってるはず。あと\r\n\r\n```diff\r\nfunction! s:foo()\r\n  let x = 0\r\n  return lambda(\"\r\n  \\ let x += 1 \\n\r\n  \\ return x\r\n  \\\")\r\nendfunction\r\n\r\nlet F = s:foo()\r\necho F() | \" 1\r\necho F() | \" 2\r\necho F() | \" 3\r\necho F() | \" 4\r\n```\r\n\r\nこんなのも。","created_at":1410373640},{"id":55161191,"issue_id":632,"user_id":10111,"body":"あ、スコープ直したらこんどは `return` で大域抜けてしまうようになった。","created_at":1410373975},{"id":55163933,"issue_id":632,"user_id":10111,"body":"うーむ。実装自体考えなおさないといけないな。","created_at":1410375012},{"id":55240364,"issue_id":632,"user_id":10111,"body":"パッチ修正。\r\n\r\nhttps://gist.github.com/mattn/50fa1dc854911d5cb797\r\n\r\n実行を呼び出し元の一つ上のスコープで実行する事でスコープを共有する作戦だったけど、`return`で関数本体抜けちゃうし lambda が2つあると両方の gc が走ってメンドクサイ事になったので方針変更。\r\n\r\nlambda の実行はあくまで lambda のスコープで実行し、変数の参照と更新について上位スコープをたどる様にしました。以下、僕が使っているテストスクリプト。NGの出るスクリプトがあったら教えて下さい。\r\n\r\n## lambda1.vim\r\nsort/map/filter との併用\r\n```vim\r\necho map([1, 2, 3], lambda('return a:1 + 1'))       | \" [2,3,4]\r\necho sort([3,7,2,1,4], lambda('return a:1 - a:2'))  | \" [1,2,3,4,7]\r\nlet s:x = 2\r\necho filter([1, 2, 3], lambda('return a:1 >= s:x')) | \" [2,3]\r\n```\r\n\r\n## lambda2.vim\r\nlambda 内ローカル変数の参照\r\n```vim\r\nlet X = lambda(\"\r\n\\ let x = 1 \\n\r\n\\ return x + a:1\")\r\necho X(1) | \" 2\r\necho X(2) | \" 3\r\n```\r\n\r\n## lambda3.vim\r\n参照キャプチャ\r\n```vim\r\nlet s:v = 1\r\nsilent! unlet F\r\nlet F = lambda('return a:1 + s:v')\r\nlet s:v = 2\r\necho F(10) | \" 12\r\n```\r\n\r\n## lambda4.vim\r\nlambda から配列の破壊\r\n```vim\r\nfunction! s:update_and_return(arr)\r\n  let a:arr[1] = 5\r\n  return a:arr\r\nendfunction\r\n\r\nfunction! s:foo(arr)\r\n  return lambda('return s:update_and_return(a:arr)')\r\nendfunction\r\n\r\nlet arr = [3,2,1]\r\necho s:foo(arr)() | \" [3,5,1]\r\n```\r\n\r\n## lambda5.vim\r\n他スコープのローカル変数参照\r\n```vim\r\nfunction! s:foo(X)\r\n  return a:X() \" s:bar にある x を参照したい\r\nendfunction\r\n\r\nfunction! s:bar()\r\n  let x = 123\r\n  return s:foo(lambda('return x'))\r\nendfunction\r\n\r\necho s:bar() | \" 123\r\n```\r\n\r\n## lambda6.vim\r\n複数の lambda から変数参照更新(KoRoN様提供)\r\n```vim\r\nfunction! DefineFuncs()\r\n  let One = lambda('let a = 111 | return a')\r\n  let Two = lambda('return exists(\"a\") ? a : \"no\"')\r\n  return [One, Two]\r\nendfunction\r\n\r\nsilent! unlet F\r\nlet F = DefineFuncs()\r\n\r\n\" This will print 'no'\r\necho F[1]()\r\n\r\n\" This will print 111\r\necho F[0]()\r\n\r\n\" This will print 111\r\necho F[1]()\r\n```\r\n\r\n## lambda7.vim\r\nクロージャ？\r\n```vim\r\nfunction! s:foo()\r\n  let x = 0\r\n  return lambda(\"\r\n  \\ let x += 1 \\n\r\n  \\ return x\r\n  \\\")\r\nendfunction\r\n\r\nlet F = s:foo()\r\necho F() | \" 1\r\necho F() | \" 2\r\necho F() | \" 3\r\necho F() | \" 4\r\n```\r\n\r\n## lambda8.vim\r\n`a:` 変数との併用\r\n```vim\r\nfunction! s:foo()\r\n  let x = 2\r\n  return lambda('return a:000 + [x]')\r\nendfunction\r\nfunction! s:bar()\r\n  return s:foo()(1)\r\nendfunction\r\n\r\necho s:bar() | \" [1,2]\r\n```\r\n現在は、これらのスクリプトが動作しています。\r\n","created_at":1410427562},{"id":55345582,"issue_id":632,"user_id":468368,"body":"適用してみました。ざっくりしたテストでは大体OKな感じです。\r\nパッチの内容はもうちょいあとで確認します。\r\n\r\nただし lambda6.vim の結果は以下のようになるのが好ましいと考えています。\r\n\r\n```\r\nno\r\n111\r\nno\r\n```\r\n\r\nというのは `One` の外側のスコープ(DefineFuncsのローカルスコープ)には `a` が定義されていないので、\r\n`a` への代入は `One` 自身のローカルスコープに閉じて、\r\n`Two` のそれに影響を及ぼすべきではないからです。\r\n\r\n一言で「JS の var と一緒にしたい」と言ったほうが速いでしょうか。","created_at":1410479983},{"id":55347186,"issue_id":632,"user_id":468368,"body":"あら? いまパッチみていたんだけど、親スコープに書いちゃう理由がわからない…\r\n私、なんか間違えた?","created_at":1410481345},{"id":55348017,"issue_id":632,"user_id":468368,"body":"一応、全体を見て気になったのは以下のとおりです。\r\n\r\n*   `uf_scoped` が指している先や、その中身がGCされないのはどうしてだろう? \r\n*   もしくはlambda自体、漏れてて垂れ流しか\r\n*   lambda6.vim が外側のスコープに書いちゃうの、なんでだろう?\r\n\r\n以上","created_at":1410482097},{"id":55348244,"issue_id":632,"user_id":468368,"body":"まだ、先で良いとは思いますが、lambdaの中で発生したエラーの表示、考えたほうが良いかもw","created_at":1410482325},{"id":55348610,"issue_id":632,"user_id":10111,"body":"> というのは One の外側のスコープ(DefineFuncsのローカルスコープ)には a が定義されていないので、\r\n> a への代入は One 自身のローカルスコープに閉じて、\r\n> Two のそれに影響を及ぼすべきではないからです。\r\n\r\nこれはシンボルが見つからなかった場合のフォールバックをどうするかだけなので対応は簡単そうです。\r\n\r\n> uf_scoped が指している先や、その中身がGCされないのはどうしてだろう?\r\n> もしくはlambda自体、漏れてて垂れ流しか\r\n\r\nuf_scoped は lambda を作った時点の関数スコープなので、そっちはそっちの gc に任せられます。\r\nで、lambda の方は参照カウンタが無くなれば自動で消える想定です。\r\n\r\n> lambda6.vim が外側のスコープに書いちゃうの、なんでだろう?\r\n\r\nこれは上記のフォールバック次第で直ります。\r\nただし、関数内で lambda を作るのではなく、スクリプトのルートで作ると親スコープが `s:` になるのでそこのフォールバックも考えないといけないです。\r\n現状はグローバル。\r\n","created_at":1410482643},{"id":55348947,"issue_id":632,"user_id":468368,"body":"> uf_scoped は lambda を作った時点の関数スコープなので、そっちはそっちの gc に任せられます。\r\n\r\nということは、\r\n関数スコープは現在実行中のスコープから親に向かって遡ってマークしているみたいなので、\r\nそこから外れている uf_scoped は gc されちゃうかもしれませんね。\r\nなんか要るかも。","created_at":1410482966},{"id":55349120,"issue_id":632,"user_id":468368,"body":"> lambda6.vim が外側のスコープに書いちゃうの、なんでだろう?\r\n\r\nとりあえず親スコープ探索時に ht が上書きされちゃうからだった。\r\n修正パッチ作りました。スタイルの修正をちょっと含んでますけど、許して～\r\n\r\nhttps://gist.github.com/koron/2ee0fd7b943bd8b1e2ff","created_at":1410483117},{"id":55352855,"issue_id":632,"user_id":468368,"body":"現状を、パッチ見てない人にもわかりやすく説明すると…\r\n\r\n**かなりフルスペックなlambdaが実装されつつある**","created_at":1410486846},{"id":55352908,"issue_id":632,"user_id":468368,"body":"@mattn 「メモリリーク/過GC検証」も。","created_at":1410486899},{"id":55353148,"issue_id":632,"user_id":468368,"body":"あ「メモリリーク&過GCの検証」は、私、今夜にでもやります。","created_at":1410487174},{"id":55353285,"issue_id":632,"user_id":468368,"body":"そういえばいずれは lambda ブロック表現も欲しいなぁ。\r\nlabmda ～ endlambda みたいなあれ。\r\nちょっと読み飛ばし部分と実行部、両方で面倒そうだけど。\r\n\r\nあとは…lambdaが再帰するようなパターンも要検証かも。","created_at":1410487314},{"id":55354124,"issue_id":632,"user_id":11504,"body":"とするとlambda関数じゃなくなってきてるので、タイトルも\"lambda記法作ろうぜ\"かな","created_at":1410488259},{"id":55354363,"issue_id":632,"user_id":11504,"body":"仮の記法を`lambda x: return x + 1 endlambda`みたいに書けるとして\r\n\r\n```vim\r\nlet counter_generator = (lambda init:\r\n  return lambda:\r\n    let init += 1\r\n    return init\r\n  endlambda\r\nendlambda)()\r\n\r\nlet counter = counter_generator(0)\r\necho counter() \"=> 1\r\necho counter() \"=> 2\r\necho counter() \"=> 3\r\n```\r\nこれもできると聞いて","created_at":1410488506},{"id":55358819,"issue_id":632,"user_id":48169,"body":"> lambda('let a = 111 | return a')\r\n\r\nすみません、これは\r\n\r\n> lambda('let a = 111', 'return a')\r\n\r\nのように可変長引数か配列で受け取れるようにするのは難しいですか？\r\nbarや改行だと、command-barのように、いくつかbarを特別視するものとしないものがあるので、できれば分けて渡せるとうれしいかと思います。\r\n","created_at":1410494001},{"id":55359149,"issue_id":632,"user_id":468368,"body":"内部的には \r\n\r\n```viml\r\nlambda(\"let a = 111\\nreturn a\")\r\n```\r\n\r\n でも良いんじゃないかというw","created_at":1410494437},{"id":55359189,"issue_id":632,"user_id":468368,"body":"@ujihisa まぁ、機能と記法は分けたほうが良いでしょう。このissueは機能ってことで。","created_at":1410494496},{"id":55394874,"issue_id":632,"user_id":10111,"body":"lambda 内から変数の unlet 完了\r\n```vim\r\nfunction! s:foo()\r\n  let x = 1\r\n  call lambda('unlet x')()\r\n  echo l:\r\nendfunction\r\n\r\ncall s:foo()\r\n```","created_at":1410524316},{"id":55401207,"issue_id":632,"user_id":10111,"body":"シンボルが見えなかった場合のフォールバック(ローカルスコープ？もしくは親) 完了\r\n\r\n```vim\r\nfunction! DefineFuncs()\r\n  let One = lambda('let a = 111 | return a')\r\n  let Two = lambda('return exists(\"a\") ? a : \"no\"')\r\n  return [One, Two]\r\nendfunction\r\n\r\nsilent! unlet F\r\nlet F = DefineFuncs()\r\n\r\n\" This will print 'no'\r\necho F[1]()\r\n\r\n\" This will print 111\r\necho F[0]()\r\n\r\n\" This will print 111\r\necho F[1]()\r\n\r\necho s: | \" Should be {}\r\necho get(g:, 'a', '') | \" Should be ''\r\n```","created_at":1410527662},{"id":55401650,"issue_id":632,"user_id":10111,"body":"lambda 内から lambda を呼び出す 完了\r\n```vim\r\nfunction! s:foo(x)\r\n  let F1 = lambda('\r\n  \\ return lambda(\"return a:x\")')\r\n  return lambda('return F1()')\r\nendfunction\r\n\r\nlet F = s:foo(1)\r\necho F()() | \" Should be 1\r\n```","created_at":1410527907},{"id":55401741,"issue_id":632,"user_id":10111,"body":"テストコードは上記に上げた物を流用する予定。\r\n誰かテストコード書いてくれると非常に助かる。","created_at":1410527953},{"id":55403072,"issue_id":632,"user_id":10111,"body":"@tyru\r\n@koron さんが言うように、1行でなくても良いので\r\n\r\nhttps://github.com/vim-jp/issues/issues/632#issuecomment-55401650\r\n\r\nこんな感じでもいいと思います。\r\n出来れば第二引数は今後に取っておきたいです。やるなら配列かも。","created_at":1410528372},{"id":55404253,"issue_id":632,"user_id":10111,"body":"個人的には、lambda のシンタックス提案は来週頭くらいまでをボーダーラインと考えています。\r\n出て来なければこのままの仕様とします。\r\n","created_at":1410529020},{"id":55404621,"issue_id":632,"user_id":468368,"body":"シンタックス、まじか…ちょっとまじめにlambda,lambdaend模索してみるか?","created_at":1410529209},{"id":55405474,"issue_id":632,"user_id":468368,"body":"> シンボルが見えなかった場合のフォールバック(ローカルスコープ？もしくは親) 完了\r\n\r\nこれ、2回目の `F[1]()` は `no` になるべきです。\r\n親のスコープに `a` がないので `F[0]()` はlambda自身のローカルスコープで処理されるべき。","created_at":1410529636},{"id":55406400,"issue_id":632,"user_id":10111,"body":"ドキュメント作った。\r\n\r\n```\r\n\t\t\t\t\t\t\t*lambda()*\r\nlambda({expr})\r\n\t\tCreate new lambda function with constructed with {expr}.\r\n\t\tThe result is function reference. So you can call it like.\r\n\t\tExample:\r\n\t\t    :let F = lambda(\"return 1+2\")\r\n\t\t    :echo F()\r\n\r\n\t\tLambda function allow to be given variadic arguments.\r\n\t\tExample:\r\n\t\t    :let F = lambda(\"return a:1+2\")\r\n\t\t    :echo F(2)\r\n\r\n\t\t|sort()|, |map()|, |filter()| can be used with |lambda()|\r\n\t\tExample:\r\n\t\t    :echo map([1, 2, 3], lambda(\"return a:1 + 1\"))\r\n\t\t    :echo sort([3,7,2,1,4], lambda(\"return a:1 - a:2\"))\r\n\r\n\t\tLambda function is possible to reference the variables in the\r\n\t\tdefined scope.\r\n\t\tExample:\r\n\t\t    :let s:x = 2\r\n\t\t    :echo filter([1, 2, 3], lambda(\"return a:1 >= s:x\"))\r\n\r\n\t\t    :function! Foo()\r\n\t\t    :  let x = 1\r\n\t\t    :  return lambda(\"return x\")\r\n\t\t    :endfunction\r\n\t\t    :echo Foo()()\r\n\r\n\t\tAnd if let new variable, it will be stored in the parent\r\n\t\tscope.\r\n\t\tExample:\r\n\t\t    :function! Foo()\r\n\t\t    :  call lambda(\"let x = 1\")()\r\n\t\t    :  echo x\r\n\t\t    :  call lambda(\"unlet x\")()\r\n\t\t    :  return x \" Should be error\r\n\t\t    :endfunction\r\n\r\n\t\tFor example, you can create counter generator.\r\n\r\n\t\t    function! s:counter(x)\r\n\t\t      let x = a:x\r\n\t\t      return lambda(\"\r\n\t\t      \\ let x += 1 \\n\r\n\t\t      \\ return x\r\n\t\t      \\\")\r\n\t\t    endfunction\r\n\t\t\r\n\t\t    let F = s:counter(0)\r\n\t\t    echo F() | \" 1\r\n\t\t    echo F() | \" 2\r\n\t\t    echo F() | \" 3\r\n\t\t    echo F() | \" 4\r\n```\r\nhttps://gist.github.com/mattn/50fa1dc854911d5cb797","created_at":1410530100},{"id":55406839,"issue_id":632,"user_id":468368,"body":"funccalが回収されちゃってるパターン作れたっぽい。落ちはしない。\r\n\r\nまずコレを実行。\r\n\r\n```viml\r\nfunction! NewCounter()\r\n  let c = 0\r\n  return lambda('let c += 1 | return c')\r\nendfunction\r\n\r\nlet g:C = NewCounter()\r\ncall garbagecollect()\r\necho C()\r\necho C()\r\necho C()\r\n```\r\n\r\nこれは正しく実行できて、こう表示される。\r\n\r\n```\r\n1\r\n2\r\n3\r\n```\r\n\r\nでも次にコマンドラインから実行すると…\r\n\r\n```\r\n:echo C()\r\nfunction <LAMBDA>1 の処理中にエラーが検出されました:\r\n行    1:\r\nE121: 未定義の変数です: c \r\nE121: 未定義の変数です: c \r\nE15: 無効な式です: c\r\n```\r\n\r\nあとこのメッセージを redir でキャプチャしようとしたら、帰ってこなくなった。\r\nだから上のは手打ちw 関係ないかもだけど、一応報告しときます。。","created_at":1410530327},{"id":55406891,"issue_id":632,"user_id":10111,"body":"> これ、2回目の F[1]() は no になるべきです。\r\n> 親のスコープに a はないので F[0]() はlambda自身のローカルスコープで処理されるべき。\r\n\r\n直した。","created_at":1410530353},{"id":55406960,"issue_id":632,"user_id":20474,"body":"以前確か `capture()` だかを提案したときに、Bram さんが、関数にコマンドを渡すのはよくないみたいなこと言ってた気がするけど、大丈夫だろうかこれ。","created_at":1410530379},{"id":55407164,"issue_id":632,"user_id":468368,"body":"> 関数にコマンドを渡すのはよくないみたいなこと言ってた気がするけど、大丈夫だろうかこれ。\r\n\r\nまぁ、そうなったらちょっと仕事を増やして、endlambda を導入するだけの話です。","created_at":1410530466},{"id":55407330,"issue_id":632,"user_id":10111,"body":"あと sandbox 対応が抜けてるな","created_at":1410530545},{"id":55407372,"issue_id":632,"user_id":20474,"body":"`endlambda` は Vim script のコマンドベースであるという根本を覆すのでキモさMAXですね。","created_at":1410530566},{"id":55407638,"issue_id":632,"user_id":468368,"body":"endfunctionやendifも同じなんですけど…","created_at":1410530684},{"id":55407731,"issue_id":632,"user_id":20474,"body":"違います。lambda である以上、式として扱えないと意味がないです。","created_at":1410530731},{"id":55407864,"issue_id":632,"user_id":468368,"body":"言い争っても仕方ないですが、言語の解釈ではなく、実装的には何も変わらんのですよ。","created_at":1410530802},{"id":55407950,"issue_id":632,"user_id":20474,"body":"はい。ダメとは言ってないです。とてもキモいって言いました。","created_at":1410530853},{"id":55411253,"issue_id":632,"user_id":20474,"body":"> 以前確か `capture()` だかを提案したときに、Bram さんが、関数にコマンドを渡すのはよくないみたいなこと言ってた気がする\r\n\r\nこれソースが見付けられなかったので(少なくとも `capture()` ではなかった)、一旦忘れてください…。","created_at":1410532347},{"id":55413741,"issue_id":632,"user_id":48169,"body":"> @tyru\r\n> @koron さんが言うように、1行でなくても良いので\r\n> \r\n> #632 (comment)\r\n> \r\n> こんな感じでもいいと思います。\r\n> 出来れば第二引数は今後に取っておきたいです。やるなら配列かも。\r\n\r\nリンク先が間違ってる気がするのですが、\r\n↓への参照で合ってますか？\r\n\r\n> 内部的には\r\n> \r\n> lambda(\"let a = 111\\nreturn a\")\r\n> \r\n> でも良いんじゃないかというw\r\n\r\n自分としては第1引数を配列で受け取った場合、\r\n内部的には上記のように改行を挟んで\r\nくっつける実装だと嬉しいです。","created_at":1410533396},{"id":55418362,"issue_id":632,"user_id":48169,"body":"> 自分としては第1引数を配列で受け取った場合、\r\n> 内部的には上記のように改行を挟んで\r\n> くっつける実装だと嬉しいです。\r\n\r\n合ってるか全く自信が無いのですが、こんな感じでしょうか？（ほぼ`f_len()`と`f_join()`のコピペです…）\r\nあとUNUSEDは付けない方が良いと思って取っちゃいましたが、必要だったならすみません。\r\n\r\n```diff\r\n@@ -243,17 +245,33 @@ diff -r cd7c730a3d42 src/eval.c\r\n + */\r\n +    static void\r\n +f_lambda(argvars, rettv)\r\n-+    typval_T  *argvars UNUSED;\r\n++    typval_T  *argvars;\r\n +    typval_T  *rettv;\r\n +{\r\n +    char_u    *s, *e;\r\n +    garray_T  newargs;\r\n +    garray_T  newlines;\r\n++    garray_T  join;\r\n +    ufunc_T   *fp;\r\n +    char_u    name[20];\r\n +    static int        lambda_no = 0;\r\n +\r\n-+    s = get_tv_string_chk(&argvars[0]);\r\n++    switch (argvars[0].v_type)\r\n++    {\r\n++      case VAR_STRING:\r\n++      case VAR_NUMBER:\r\n++          s = get_tv_string_chk(&argvars[0]);\r\n++          break;\r\n++      case VAR_LIST:\r\n++          ga_init2(&join, (int)sizeof(char), 80);\r\n++          list_join(&join, argvars[0].vval.v_list, \"\\n\", TRUE, 0);\r\n++          ga_append(&join, NUL);\r\n++          s = (char_u *)join.ga_data;\r\n++          break;\r\n++      default:\r\n++          EMSG(_(\"E702: Invalid type for lambda()\"));\r\n++          break;\r\n++    }\r\n +    if (s == NULL)\r\n +        goto erret;\r\n +\r\n```","created_at":1410535420},{"id":55418909,"issue_id":632,"user_id":48169,"body":"あ…`E702`は被ってるな…\r\n`E856`は空いてたのでそれで。\r\n\r\n![](http://i.gyazo.com/ef483e4f0b677ece56d541460d7574c6.png)","created_at":1410535661},{"id":55421342,"issue_id":632,"user_id":468368,"body":"とりあえず [funccall_T が回収されちゃう](https://github.com/vim-jp/issues/issues/632#issuecomment-55406839) のを防ぐパッチ書きました。\r\n\r\n[lambda-r13-p1.diff](https://bitbucket.org/koron/vim-kaoriya-patches/src/3ff43eada13efb8115ace0e94dae4b8c2b9287c3/lambda-r13-p1.diff?at=default)","created_at":1410536705},{"id":54391692,"issue_id":631,"user_id":10111,"body":"パッチはたまに Bram がこそっと書き換えるからなーw\r\n抜けてたファイル足したりとかw","created_at":1409793224},{"id":54391720,"issue_id":631,"user_id":20474,"body":"なんと…。","created_at":1409793251},{"id":59050699,"issue_id":631,"user_id":840186,"body":"gitで取得できるようにする利点というと、gitコマンドだけで簡単にダウンロードできる点と、Bramがこそっと書き換えた履歴を見れるようになる点ぐらいですかね？\r\nなお、私はこんなスクリプトでパッチをダウンロードしています。\r\nhttps://gist.github.com/k-takata/c40ae5de71a8c29712a1\r\n秘蔵のダウンロードスクリプトを持っている人は他にもたくさんいそう!?","created_at":1413295922},{"id":54387999,"issue_id":630,"user_id":840186,"body":"Visualモード中のカーソル移動については、7.4.407 で修正されたのだと思います。\r\nマルチバイトに関しては #600 (7.4.408) が関連しています。","created_at":1409789889},{"id":54388927,"issue_id":630,"user_id":840186,"body":"> Visualモード中のカーソル移動については、7.4.407 で修正されたのだと思います。\r\n\r\nおっと、勘違い。\r\n7.4.407 で動作が変わったが、それ以前も以後もどちらもおかしいのですね。","created_at":1409790736},{"id":54389200,"issue_id":630,"user_id":10111,"body":"あれ？これ #600 関係ない気がする。","created_at":1409790965},{"id":54389358,"issue_id":630,"user_id":840186,"body":"あ、ほんとだ。","created_at":1409791084},{"id":54399703,"issue_id":630,"user_id":840186,"body":"7.4.430 で、\r\n```\r\nabcdef\r\nabcdef\r\n```\r\nで、同じように `1<Right>2<Right>3<Right>4<Right>5<Esc>` とすると、\r\n```\r\na1b2c3d4e5f\r\na1b2c3bcdef\r\n```","created_at":1409801426},{"id":54400224,"issue_id":630,"user_id":10111,"body":"中途半端で惜しいw","created_at":1409802091},{"id":54402968,"issue_id":630,"user_id":840186,"body":"こっちの方が見た目が分かりやすいかな。\r\n```\r\naaaaaa\r\nbbbbbb\r\ncccccc\r\n```\r\n```\r\na1a2a3a4a5a\r\nb1a2a3bbbbb\r\nc1a2a3ccccc\r\n```","created_at":1409803202},{"id":55731027,"issue_id":630,"user_id":840186,"body":"さっさとvim_devに報告しちゃった方が良さそう。","created_at":1410868125},{"id":56041379,"issue_id":630,"user_id":840186,"body":"報告しました。\r\nhttps://groups.google.com/d/topic/vim_dev/Lx-uqhy5V1s/discussion","created_at":1411048585},{"id":56343663,"issue_id":630,"user_id":518808,"body":"おひさしブリーフ。\r\nこの件は、Visual Blockモードの1行目の編集前と編集後の文字列情報だけで2行目以降も編集しようとしているから無理がありまーす。\r\nキー入力情報を保持しておいてそれを使うようにしないと根本的な解決は望めないのではないかと思います。\r\nvim_devでChristianさんが「this is a little bit complex.」と返信していますが、私は「めっちゃ complex.」だと思っています。\r\n\r\n#593 も根は半分同じです。","created_at":1411374726},{"id":54101102,"issue_id":627,"user_id":468368,"body":"ファイル名/パスに日本語を含む場合、かしら?\r\nundofileも要チェックかも。","created_at":1409621289},{"id":54101157,"issue_id":627,"user_id":840186,"body":"`-c \"set enc=utf-8\"` で発生しているので、おそらく、\r\n\r\n* コマンドラインでマルチバイトなファイル名を指定\r\n* .(g)vimrc よりも後で enc=utf-8 に設定\r\n\r\nというのがポイントでしょうね。\r\n通常の使い方では .vimrc の中で enc=utf-8 に設定するはずなので、問題は起きないはず。","created_at":1409621361},{"id":54106413,"issue_id":627,"user_id":840186,"body":"日本語ファイル名を開いた状態で enc を変更すると、swap ファイルが残るというのが正確かもしれません。\r\n```\r\nC:\\> vim -u NONE -N\r\n:e あ.txt\r\n:set enc=utf-8 tenc=cp932\r\n:q\r\n```\r\nとすると、`.あ.txt.swp` が残ってしまいます。\r\n`-c` またはそれ以降に enc を変更することを考慮すべきかというと、どうなんでしょう？","created_at":1409628941},{"id":57106117,"issue_id":627,"user_id":10111,"body":"これなおさないとなー","created_at":1411950381},{"id":58304975,"issue_id":627,"user_id":840186,"body":"タイトルを変更しました。","created_at":1412740718},{"id":211862615,"issue_id":627,"user_id":840186,"body":"todo.txt に項目が載っていることに気づきました。\r\n\r\n```\r\nWhen changing 'encoding' convert all the swap file names, so that we can\r\nstill delete them.  Also convert all buffer file names?\r\n```","created_at":1461063964},{"id":54014074,"issue_id":626,"user_id":468368,"body":"### 動機\r\n\r\n`:sign place` は ID を定数で指定しなきゃならず、プラグイン間の協調が難しい。\r\nならば、そこはVim側で振り出すのが筋だろう。\r\nさらに `matchadd()` のように sign に対する一連の操作があると便利そう。\r\n\r\n### 補足\r\n\r\njump/define/undefine はややVim scriptからやる優先度は低そう。\r\n","created_at":1409545300},{"id":54065283,"issue_id":626,"user_id":48169,"body":"> プラグイン間で協調できる\r\n\r\n:+1:\r\n\r\n(最近リクエストばっかで申し訳ないです…)\r\n","created_at":1409581369},{"id":54230623,"issue_id":626,"user_id":303372,"body":":+1:","created_at":1409698848},{"id":53950902,"issue_id":623,"user_id":10111,"body":"https://code.google.com/p/vim/source/browse/src/regexp_nfa.c#6453\r\n\r\nここらへんが間違ってそうだけど、ちょっとじっくり見れる時間がないので明日以降見ます。","created_at":1409381945},{"id":205793616,"issue_id":623,"user_id":480049,"body":"すっかり忘れていましたが、報告しました。\r\nhttps://groups.google.com/forum/#!topic/vim_dev/Lq1XBURQRFM","created_at":1459861669},{"id":205882917,"issue_id":623,"user_id":10111,"body":"明日見ますといいながら忘れてました。。。すいません。。。","created_at":1459873488},{"id":53512110,"issue_id":619,"user_id":518808,"body":"`vi(`でも試すとちょっとはすっきりするかもです。","created_at":1409099179},{"id":53512471,"issue_id":619,"user_id":518808,"body":"> vi(でも試すとちょっとはすっきりするかもです。\r\n\r\nごめんウソでした:cat2::dash:","created_at":1409099487},{"id":53513060,"issue_id":619,"user_id":10111,"body":"OT) オナラっぽい","created_at":1409100005},{"id":53568793,"issue_id":619,"user_id":303372,"body":"オナラ3連発！ :dog2::dash::poop::dash:","created_at":1409144653},{"id":53569842,"issue_id":619,"user_id":10111,"body":"ウンコ出てるで","created_at":1409145189},{"id":53614633,"issue_id":619,"user_id":823277,"body":"ワンコからウンコが…","created_at":1409162566},{"id":53645042,"issue_id":619,"user_id":303372,"body":"ハッ！なんかすっきりしたと思ったら…(すっきり違い)","created_at":1409175705},{"id":53654508,"issue_id":619,"user_id":599164,"body":"今日のクソスレと聞いて飛んで来ました。","created_at":1409181615},{"id":53835387,"issue_id":619,"user_id":87062,"body":"なにがしたい...","created_at":1409285341},{"id":53871928,"issue_id":619,"user_id":518808,"body":"んもー！カレー食べてるのにー！！","created_at":1409317240},{"id":54143563,"issue_id":619,"user_id":10111,"body":"使われているクォートがシングルクォートなのが原因です。\r\n\r\n```vim\r\ncall hoge_func(\"\\%(hoge\\)\")\r\n```\r\nこれで `hoge` の部分で `v2i)` すれば () 内が選択出来るはずです。\r\nで、じゃぁシングルクォート未対応かという話なんですが、ちょっと弄ってみたら動いたっぽいので一先ず出しておきますが、ちゃんと動くか未確認な部分が多いです。\r\n\r\n```diff\r\ndiff -r dde8ff798ed9 src/search.c\r\n--- a/src/search.c\tSat Aug 30 18:10:19 2014 +0200\r\n+++ b/src/search.c\tTue Sep 02 21:20:57 2014 +0900\r\n@@ -2153,6 +2153,7 @@\r\n \t    do_quotes = 0;\r\n \telse if (do_quotes == -1)\r\n \t{\r\n+\t    int do_squotes = -1;\r\n \t    /*\r\n \t     * Count the number of quotes in the line, skipping \\\" and '\"'.\r\n \t     * Watch out for \"\\\\\".\r\n@@ -2161,10 +2162,12 @@\r\n \t    for (ptr = linep; *ptr; ++ptr)\r\n \t    {\r\n \t\tif (ptr == linep + pos.col + backwards)\r\n-\t\t    at_start = (do_quotes & 1);\r\n+\t\t    at_start = (do_quotes & 1) || (do_squotes & 1);\r\n \t\tif (*ptr == '\"'\r\n \t\t\t&& (ptr == linep || ptr[-1] != '\\'' || ptr[1] != '\\''))\r\n \t\t    ++do_quotes;\r\n+\t\telse if (*ptr == '\\'' && (do_quotes & 1))\r\n+\t\t    ++do_squotes;\r\n \t\tif (*ptr == '\\\\' && ptr[1] != NUL)\r\n \t\t    ++ptr;\r\n \t    }\r\n@@ -2294,6 +2297,11 @@\r\n \t\t\tpos.col += 2;\r\n \t\t\tbreak;\r\n \t\t    }\r\n+\t\t    else\r\n+\t\t    {\r\n+\t\t\tinquote = !inquote;\r\n+\t\t\tstart_in_quotes = FALSE;\r\n+\t\t    }\r\n \t\t}\r\n \t    }\r\n \t    /* FALLTHROUGH */\r\n```\r\nhttps://gist.github.com/mattn/f5ce1b320f1761c14164","created_at":1409660674},{"id":54149159,"issue_id":619,"user_id":303372,"body":"パッチありがとうございます！\r\n現状ダブルクォートだと意識するんですね。\r\n挙げていただいたパッチを試してみましたが、私の環境でも動作することを確認しました。\r\n:+1: ","created_at":1409663822},{"id":54255373,"issue_id":619,"user_id":10111,"body":"タイトル変えました。","created_at":1409724021},{"id":97453167,"issue_id":619,"user_id":518808,"body":"#711 \r\n`set cpo+=M`時の挙動がPatch 7.4.662で変わっています。ご確認下さい。\r\nhttps://groups.google.com/d/msg/vim_dev/oNtLa6ZDB8c/UWmVhdvTj94J\r\n\r\nPatch 7.4.662以降だと\r\n`set cpo-=M`時の挙動および`set cpo+=M`時の挙動は「仕様として正しい動作です」としか言えないです。。\r\n\r\n'～' を \"～\" に変更して挙動が変わるのは(現在の`filetype`に関係なく)「C言語系の文字列の中(\"～\")だったらコメントと同じ扱いとしてすっ飛ばす」か否かの違いということになります。\r\n\r\nmattnさんのpatchで直るかもしれないけど、Vimソースの色んなところで「Cコメントをすっ飛ばす」「C文字列をすっ飛ばす」処理が呼ばれているので整合を取るのが難しいかもです。\r\n","created_at":1430318677},{"id":97475064,"issue_id":619,"user_id":10111,"body":" 最新に当ててパッチの動作が壊れてない事は確認したので一度出してみたいと思います。\r\n","created_at":1430322200},{"id":97480993,"issue_id":619,"user_id":518808,"body":"@mattn 任せます。\r\nただ、skip_string() [misc1.c:5316] は'～'を文字列としてはみなしていないので、全体の整合的にどうかという懸念はあります。","created_at":1430323313},{"id":97482029,"issue_id":619,"user_id":10111,"body":"  https://groups.google.com/forum/#!topic/vim_dev/8efdWXWKiNM","created_at":1430323597},{"id":97482584,"issue_id":619,"user_id":10111,"body":"僕もこのパッチでどう反応されるか分からないのでひとまず提案として出しました。","created_at":1430323693},{"id":54743264,"issue_id":616,"user_id":48169,"body":"あと、ちなみに`-complete=file`を指定する事で変わる挙動と言えば、`*`みたいなメタ文字を展開するという違いがあります。","created_at":1410086491},{"id":54255974,"issue_id":615,"user_id":10111,"body":"返事が遅れてすみません。\r\n\r\nプロセス置換といいますか、標準入力からの読み取りですね。vim はファイルを読む時に変換しつつバッファに足しているのですが(メモリに持つと巨大なファイルで困るので)、標準入出力は seekable でないので、iconv で失敗した場合にファイルの先頭にシークオフセットを移動出来ないんです。\r\nコードを読む限り、ここはあきらめる様にコーディングされている事から仕様と思われます。\r\n\r\n一度テンポラリファイルに出力し、それを(引数で)読み込ませる様にすると、おそらく機能すると思います。\r\n\r\n","created_at":1409724665},{"id":54256921,"issue_id":615,"user_id":840186,"body":"> プロセス置換といいますか、標準入力からの読み取りですね。\r\n\r\n例で挙げられているとおり、標準入力からは問題なく読めているようですが。","created_at":1409725587},{"id":54257254,"issue_id":615,"user_id":10111,"body":"あーすみません。勘違いしてた。 `<(echo あああ)` だった。`/dev/fd/63` みたいな仮想デバイスファイルですね。\r\nこれが seekable じゃないのかな。","created_at":1409725950},{"id":54257291,"issue_id":615,"user_id":10111,"body":"てかステータスラインに書いてあった。fifo/socket らしい。\r\n![](http://go-gyazo.appspot.com/93215d1244262d36.png)\r\n","created_at":1409725982},{"id":54266591,"issue_id":615,"user_id":840186,"body":"標準入力はシーク出来ないことを前提に動いており、それ以外はシーク可能な前提で動いているもののプロセス置換ではシークが出来ないのでエラーになっているのでしょうかね？","created_at":1409733179},{"id":54267222,"issue_id":615,"user_id":10111,"body":"pipe は seekable ではありません。`man lseek(2)` でエラーになると書いてあります。","created_at":1409733557},{"id":54267850,"issue_id":615,"user_id":10111,"body":"@tac-et なので vim 単体では現状救いようが無いと思います。\r\nfileencodings を正しい物に設定するか、コマンド側を\r\n\r\n```\r\n$  vim -u NONE <(echo \"テスト\" | nkf -w)\r\n```\r\n\r\n等とするのが良いと思います。","created_at":1409733927},{"id":54268757,"issue_id":615,"user_id":840186,"body":"シークできないはずの標準入力がちゃんと読めるのはどういう仕組みなんでしょう。\r\n1回メモリに読み込んだデータに対して、コード変換をかけ直している？","created_at":1409734509},{"id":54270888,"issue_id":615,"user_id":10111,"body":"どちらも同じなんですが、標準入力(`-` の場合)は途中で断念してないだけだと思います。\r\nそれは明確に `-` という指定があるから出来るんですが、今回の場合だとファイル名(でも実際はfifo/socket)を与えられているので seekable であるだろうと判断していて、失敗したからエラーという流れだと思います。\r\n\r\nとここまで書きましたがファイル名が付与されているけど、実は seekable じゃない(errno = ESPIPE)て場合は stdin と同様のパスを通す的な対応を入れればもしかしたら行けるかもしれませんね。","created_at":1409735789},{"id":54328885,"issue_id":615,"user_id":1130799,"body":"> てかステータスラインに書いてあった。fifo/socket らしい。\r\n\r\nすみません。ステータスバーに出ていた情報についても記載しておくべきでした。\r\n\r\n> fileencodings を正しい物に設定するか、コマンド側を\r\n~~~sh\r\n$  vim -u NONE <(echo \"テスト\" | nkf -w)\r\n~~~\r\n> 等とするのが良いと思います。\r\n\r\n頂いた上記対策方法ですが、fileencodingsで、utf-8よりも先にcp932を指定しているのがこの現象の問題点なので、`nkf -x -W --oc=cp932`のような感じですかね(cp932にしてしまえば、1つ目で判定成功)。\r\nutf-8を前に持ってきたいところではあるのですが、cp932はutf-8でもエラー無しで変換できてしまうことが多いので、fileencodingsはこの順にしています。","created_at":1409763450},{"id":57261501,"issue_id":615,"user_id":10111,"body":"対応すべきかどうかの判断もありそうなのでひとまず報告するのがよさそうですね。","created_at":1412046385},{"id":57261929,"issue_id":615,"user_id":10111,"body":"https://groups.google.com/d/msg/vim_dev/AF7gm1c5dW4/WsQLUiNBKtMJ","created_at":1412046838},{"id":52731651,"issue_id":613,"user_id":518808,"body":"matchaddの '\\d\\+' が '\\d\\\\+' と表示されるように修正しました。\r\n'+'はmarkdownでもスペシャルだからバックスラッシュ2ついるっぽいです。","created_at":1408507367},{"id":52457945,"issue_id":611,"user_id":10111,"body":"putty で入った TERM=screen or TERM=xterm-256color は再現せず。","created_at":1408345086},{"id":52459610,"issue_id":611,"user_id":1162739,"body":"ハイライトが消えない、というのがどんなことなのかよくわからなかったんですが、\r\n\r\n> 端末の復帰ポイントがずれるような感じ?\r\n\r\nこっちは理解できました。\r\n\r\nterminfoで代替スクリーン有りに設定してあっても(smcup=\\E[?1049h)、起動時に代替スクリーンに入らないですね。\r\nt_tiが呼ばれてないように見えます。","created_at":1408346720},{"id":52483362,"issue_id":611,"user_id":142094,"body":"確認ありがとうございます。\r\n\r\n1. vim 起動\r\n2. vimrc 読み込み\r\n3. 端末初期化\r\n4. 起動完了\r\n5. 編集...\r\n6. vim 終了 (3の画面に戻る)\r\n\r\nなので vimrc の中で画面出力があると画面の復帰がうまくいかない。という感じだと思います。vimrc で端末設定をできるようにするには vimrc 読み込み完了前に端末を初期化するわけにはいかないのでこれはしょうがないのかなーという気がします。\r\n\r\nputty はなんで大丈夫なんですかね。そもそも画面復帰してない (:set t_ti= t_te= 相当) とか。\r\n\r\n不具合というわけではないと思うので、なにもなければ閉じたいと思います。","created_at":1408363666},{"id":52494439,"issue_id":611,"user_id":142094,"body":"putty 試して見ましたが 1 だとならなくて 2 だとなりました。vim 終了後、文字が青いままです。","created_at":1408369938},{"id":52496228,"issue_id":611,"user_id":518808,"body":"PuTTY ver.0.63(オリジナル版、ごった煮とかじゃない奴) と Vim 7.4.410\r\n\r\n↓再現した(文字が青)\r\nTERM=xterm-256color vim -u NONE --cmd redraw -c quit\r\n\r\n↓再現した(文字が青)\r\nTERM=xterm-256color vim -u NONE --cmd redraw\r\n:quit\r\n\r\n↓再現しない\r\nTERM=putty-256color vim -u NONE --cmd redraw -c quit\r\n\r\n↓再現しない\r\nTERM=putty-256color vim -u NONE --cmd redraw\r\n:quit","created_at":1408370702},{"id":52496992,"issue_id":611,"user_id":518808,"body":"`--cmd quit`だとどっちも端末でも再現しないです。","created_at":1408371029},{"id":52497926,"issue_id":611,"user_id":142094,"body":"1 は gnome-terminal だとカーソルが青くなるんですが putty はそもそもカーソルの色が変わらないみたいです。色付き文字の上に移動したときとか。","created_at":1408371428},{"id":52525647,"issue_id":611,"user_id":1162739,"body":"> putty はなんで大丈夫なんですかね。\r\n\r\nxtermとputtyに違いが出るのは拡張モード1049と47の挙動の差だと思います。\r\n```\r\n$ infocmp -1 xterm-256color | grep mcup\r\n        rmcup=\\E[?1049l,\r\n        smcup=\\E[?1049h,\r\n```\r\n\r\n```\r\n$ infocmp -1 putty-256color | grep mcup\r\n        rmcup=\\E[2J\\E[?47l,\r\n        smcup=\\E[?47h,\r\n```\r\n\r\n代替スクリーンのわかりやすい説明\r\nhttp://doda.b.sourceforge.jp/2013/01/04/altbuff2/\r\n\r\nscript(1)のログを読んでみたところ、t_tiが呼ばれてないわけじゃなくて、呼ばれるタイミングが遅すぎるようです。1049はカーソル位置だけじゃなくて色とかのアトリビュートも保存する実装があります。だから最後にt_teが呼ばれた時変なタイミングで保存された位置や色が復元されてしまいます。","created_at":1408382918},{"id":185214109,"issue_id":610,"user_id":468368,"body":"Python 3.4 をアンインストールした際に python34.dll だけが C:\\Windows\\System32 に残って派生する場合があるらしい。 (；´Д｀)","created_at":1455717374},{"id":185220694,"issue_id":610,"user_id":468368,"body":"Pythonをインストールしたディレクトリの名前を変えちゃえば、状況は再現できる。\r\n\r\n    :py3 import sys; print(sys.version)\r\n\r\nあとはコレだけ。ただしコチラは `exit()` じゃなくて落ちる。\r\n元ネタが古く、詳細は覚えていないが Python 2.7 の時とは、少し事情が違うようだ。","created_at":1455718019}]