[{"id":923,"user_id":18260849,"title":"タブページ関連のコマンドと自動コマンドの組み合わせでVimが落ちたりカレントウィンドウが閉じられない","body":"## 質問・報告の内容\r\n\r\n\r\n### カレントウィンドウが閉じられないケース　\r\n\r\nタブページが2つ以上ある時、QuitPreイベント発生時に下記8つのコマンドの内1つを実行すると、\r\nカレントウィンドウが:quitで閉じられなくなりました。\r\n\r\n- tabnext\r\n- tablast\r\n- tabprevious\r\n- 1tabprevious\r\n- tabdo echo 1\r\n- tabedit\r\n\r\n下記2つのコマンドはファイルを開いた時のみ再現します。\r\n- tabfind sample.txt\r\n- wincmd gf\r\n\r\n\r\n**再現方法**\r\n\r\n```vim -Nu NONE -S sample1.vim```\r\n\r\nsample1.vim:\r\n```vim\r\ntabedit\r\ntabfirst\r\n\r\naugroup sample\r\n    autocmd!\r\n    autocmd QuitPre <buffer> tabnext\r\naugroup END\r\n\r\nquit\r\n```\r\n\r\n\r\n### Vimが落ちるケース\r\n\r\nBufUnloadイベントとBufDeleteイベントが発生する時、先ほど挙げた8つのコマンドのどれか1つを実行すると、Segmentation faultでVimが落ちます。\r\nBufHidden、BufLeave、BufWipeoutを指定した場合は落ちません。\r\nタブページが2つ以上ある時のみ再現します。\r\n\r\n**再現方法**\r\n\r\n```vim -Nu NONE -S sample2.vim```\r\n\r\nsample2.vim:\r\n```vim\r\ntabedit\r\ntabfirst\r\n\r\naugroup sample\r\n    autocmd!\r\n    autocmd BufUnload <buffer> tabnext\r\naugroup END\r\n\r\nquit\r\n```\r\n\r\n落ちた時の内容\r\n\r\n```\r\nVim: Caught deadly signal SEGV\r\nVim: Finished.\r\nSegmentation fault\r\n```\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1979\r\n\r\n## OSの種類\r\n\r\n*   Linux\r\n\r\n## OSのディストリ\r\n\r\nDebian\r\n\r\n## OSのバージョン\r\n\r\n8.5\r\n","created_at":1467433068},{"id":922,"user_id":10111,"title":":help // が意図しないタグになっている","body":"`:help //` すると\r\n\r\n```\r\nPatch 7.1.178\r\nProblem:    \"%\" doesn't work on \"/* comment *//* comment */\".\r\nSolution:   Don't handle the \"//\" in \"*//*\" as a C++ comment. (Markus\r\n\t    Heidelberg)\r\nFiles:\t    src/search.c\r\n```\r\n\r\n↑の `*//*` がタグ扱いされ conceal になって `//` と表示される。問題ではないけど気持ち悪い。","created_at":1467180105},{"id":919,"user_id":3213998,"title":"jobの出力をrawモードで取得すると変な出力が混入する時がある","body":"## 質問・報告の内容\r\n\r\njobの出力を`raw`モードで取得すると出力がおかしくなることがあります。\r\n以下の再現方法ではbufferに書き出していますが、callbackで出力を取得しても同様の出力になるので、出力を取得する時点で何かおかしくなっているようです。\r\n\r\n### 再現手順\r\n\r\n以下のスクリプトを`a.vim`で保存して、`vim --noplugin -Nu a.vim`を実行すると、output バッファーに`.`以外の出力が混入します。\r\n\r\n```vim\r\nfunction! s:tm(timer) abort\r\n  \" 何か時間のかかる処理\r\n  for i in range(1000)\r\n    let a = 1\r\n  endfor\r\n  if job_status(get(s:, 'job')) !=# 'run'\r\n    call timer_stop(a:timer)\r\n  endif\r\nendfunction\r\n\r\nlet s:options = {\r\n      \\ 'out_mode': 'raw',\r\n      \\ 'out_io': 'buffer',\r\n      \\ 'out_name': 'output',\r\n      \\ }\r\n\r\nfunction! Job() abort\r\n  let s:job = job_start(['python3', '-c', 'for _ in range(10000): print(\".\", end=\"\", flush=True)'], s:options)\r\n  \" 環境によっては3msだと短すぎてVimが応答しなくなるかもしれないので調整して下さい\r\n  call timer_start(3, function('s:tm'), {'repeat': -1})\r\nendfunction\r\n\r\ncall Job()\r\nbuffer output\r\n```\r\n\r\n以下が手元での実行結果です。\r\n`^@A^B`などの全く関係ない出力が混ざってしまっています。\r\n\r\n![vim_job1](https://cloud.githubusercontent.com/assets/3213998/16155322/cfc561da-34e9-11e6-868e-6239b76a5107.png)\r\n\r\nまた、端末上で`python3 -c 'for _ in range(10000): print(\".\", end=\"\", flush=True)'`を実行した時は`.`が全て連続して出力されるのですが、vimではなぜかランダムに改行が入ってしまいます。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1942\r\n\r\n## OSの種類\r\n\r\n*   Linux\r\n\r\n## OSのディストリ\r\n\r\nKubuntu 16.04 64bit\r\n\r\n## その他\r\n\r\n上記のスクリプトで`flush=True`を削除すると再現しにくくなるので、Vimで何か処理をしている時にflushされると出力がおかしくなるようです。\r\n強制的にflushしなくても、jobのオプションで`close_cb`で何か処理をしていると（プロセスの終了時のflushとぶつかって？）出力の最後に上記のような出力が混入することがありました。\r\n","created_at":1466178086},{"id":918,"user_id":237271,"title":"Make_cyg_ming.mak で lua と luajit を分けたい","body":"## 質問・報告の内容\r\n\r\n現在、[MinGWを使ってのビルド方法](http://vim-jp.org/docs/build_windows_mingw.html)の1番下の「msys2 付属の perl/python/ruby + python3」 で Vim をビルドする に、LuaJIT を追加してビルドしようとしています。\r\n\r\nmsys2 には mingw64 向けの `mingw-w64-x86_64-luajit-git` というパッケージがあり、下記のようなパッケージ内容になってます。\r\n```\r\nmingw-w64-x86_64-luajit-git /mingw64/\r\nmingw-w64-x86_64-luajit-git /mingw64/bin/\r\nmingw-w64-x86_64-luajit-git /mingw64/bin/lua51.dll\r\nmingw-w64-x86_64-luajit-git /mingw64/bin/luajit\r\nmingw-w64-x86_64-luajit-git /mingw64/bin/luajit-2.0.4.exe\r\nmingw-w64-x86_64-luajit-git /mingw64/bin/luajit.exe\r\nmingw-w64-x86_64-luajit-git /mingw64/include/\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/lauxlib.h\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/lua.h\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/lua.hpp\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/luaconf.h\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/luajit.h\r\nmingw-w64-x86_64-luajit-git /mingw64/include/luajit-2.0/lualib.h\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/libluajit-5.1.dll.a\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/lua/\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/lua/5.1/\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/pkgconfig/\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/pkgconfig/lua5.1.pc\r\nmingw-w64-x86_64-luajit-git /mingw64/lib/pkgconfig/luajit.pc\r\nmingw-w64-x86_64-luajit-git /mingw64/share/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/lua/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/lua/5.1/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/bc.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/bcsave.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_arm.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_mips.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_mipsel.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_ppc.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_x64.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dis_x86.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/dump.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/v.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/luajit-2.0.4/jit/vmdef.lua\r\nmingw-w64-x86_64-luajit-git /mingw64/share/man/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/man/man1/\r\nmingw-w64-x86_64-luajit-git /mingw64/share/man/man1/luajit.1.gz\r\n```\r\n\r\n現状の $LUA や $LUALIB では意図通りの include ディレクトリを指定することができない状態です。\r\n修正方法は何通りかありますが、有識者さまの皆さんに、ご意見を伺いたいと思い、issue にさせていただきました。\r\n\r\nよろしくお願いいたします。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1941\r\n\r\n## OSの種類\r\n\r\nWindows\r\n\r\n## OSのバージョン\r\n\r\nWindows10","created_at":1466133502},{"id":915,"user_id":10111,"title":"端末機能、作っちゃわない？","body":"neovim にあるのは皆さんご存知ですが、後発であるはずの Visual Studio Code に端末機能が入ってしまった様です。\r\nって事で端末機能、作っちゃわない？\r\n(何も着手してません)\r\n","created_at":1465292147},{"id":909,"user_id":8745771,"title":"WindowsのgVimにおいて、グーグルIME使用時のカーソル表示がおかしくなる","body":"香り屋Windows32bit版のgVimにおいて\r\n\r\nテキストの行末にカーソルを置いたあと、カーソルを文中に移動させ、\r\nグーグルIMEに切り替えて日本語文字を入力すると、行末に入力カーソルのゴミが現れる\r\n\r\n 実行環境\r\nVimバージョン : 7.4.788\r\nOS : Windows Vista 32bit\r\n\r\n 備考\r\n* マイクロソフトIMEの場合には起こらない\r\n* gvim -u NONE -N で立ち上げた場合にも起こる\r\n* 複数行で試しても現れる\r\n* カーソルを行末に移動させると消える\r\n* ウィンドウを最小化して再び元に戻すと消える","created_at":1461729039},{"id":905,"user_id":468368,"title":"Vim 8.0 に lambda をねじ込む phase 3","body":"## TL;DR\r\n\r\nlambda パッチの応援をお願いします。\r\n\r\n## 質問・報告の内容\r\n\r\n#904 の続きです。\r\n\r\n最新のコードに対するパッチは送信されました。\r\nhttps://groups.google.com/d/msg/vim_dev/nbvI429-1EE/X84e1UvzBgAJ\r\n\r\nただ過去の経緯(2014年だった)を考えるとスルーされてしまう可能性も依然高いです。\r\nhttps://groups.google.com/d/msg/vim_dev/7rFZZXea6Gc/JpGBVIaMElcJ\r\n\r\nそこで折をみて応援演説的な投稿をしましょう。\r\n単なる :+1: 的なのだとあまり意味はなくて、\r\n\r\n* なぜ今こそ lambda が必要なのかを訴える\r\n* lambda を使うとどんな表現が可能なのか\r\n* 将来どんなことが可能になる可能性があるのか (ハードル高い)\r\n\r\nみたいなアプローチが良いと考えられます。\r\n\r\n## ゴール\r\n\r\nいかのいずれかを達成した時点\r\n\r\n* パッチが取り込まれる\r\n\r\nなおゴール達成後は、自動的にlambda を叩いて鍛えるモードが発動予定です。\r\n","created_at":1460941043},{"id":900,"user_id":3797062,"title":"不適切に called_emsg を使っているところを did_emsg に変える","body":"## 質問・報告の内容\r\n\r\nhttps://github.com/vim-jp/issues/issues/893 の statusline 内で try-catch が正しく動かない問題とほぼ同じ問題が他のオプションや関数などにも存在します．\r\nそれらを修正していきたい．\r\n\r\n僕が現在しらべたところわかってるのは以下のテーブルになります．\r\n\r\nname | write patch | write test | sent-to-vim-dev | included | link\r\n---- | ----------- | ---------- | --------------- | -------- | ----\r\n'statusline' | Yes  | Yes | Yes | Yes | https://github.com/vim/vim/pull/729\r\n'rulerformat' | Yes (statuslineと同じだったハズ) | No | No | Yes? | https://github.com/vim/vim/pull/729\r\n'tabline' | Yes  | Yes | Yes(ミスってvim/vimにPR開いてしまった...) | Yes | https://github.com/vim/vim/pull/746\r\n'titlestring' | Yes | Yes | No | No | https://github.com/haya14busa/vim/tree/fix-titlestring-error\r\n'iconstring' | Yes | Yes | No | No | https://github.com/haya14busa/vim/tree/fix-iconstring-error\r\n'guitablabel'and 'guitabtooltip' | Yes | No(なんかredraw効かなくてテスト書けない....) | No |  No | https://github.com/haya14busa/vim/tree/fix-guitablabel-and-tooltip-error\r\nexecute in channel (どこで呼ばれてるかよくわかってない) | No | No | No |\r\nassert_fail() | No | No | No |\r\n\r\n随時調査しながら修正してテストたして，一気に or 個別に vim-dev に送りたいと思っています．\r\nもしかしたら他にも修正すべき箇所がある可能性とか，そもそも実は修正すべきでない場合とかあるかもしれないので，\r\nそういうのがあれば教えていただけると幸いです... :bow:\r\n\r\n## Vimのバージョン\r\n7.4.1721 \r\n","created_at":1460349555},{"id":896,"user_id":156236,"title":"wildmodeでlistとfullを合わせた時はlist内がハイライトされて欲しい。","body":"## 質問・報告の内容\r\n\r\n`wildmode`が`list:full`や`list,full`などの際、listによる複数行候補一覧が既に出ているのに、それを無視して更にfull用の横スクロール行が出てくるのが冗長に感じます。また最初にlistの方に視線を移しているのにもう一つ一覧が出てくと一瞬自分は何を選択してるのかよく分からなくなり混乱することがあります。\r\n可能なら `list` の一覧内でハイライトが移動して補完に使えるのが感覚的に自然かなと思うのですがいかがでしょうか？\r\n\r\n### 現状のUI\r\n\r\n`list`の出力はせいぜい参考用の表示にとどまり、実際の補完選択は追加の狭い横スクロール内で行われる。\r\n\r\n<img width=\"589\" alt=\"2016-04-03 10 15 01\" src=\"https://cloud.githubusercontent.com/assets/156236/14230220/0df426b8-f989-11e5-813c-c963ae01e4dc.png\">\r\n\r\n### 期待するUI\r\n\r\n`list`表示のまま、fullの横スクロールは出さずに、矢印のようにハイライトが移動して選択できると嬉しい。\r\n\r\n![2016-04-03 10 15 01](https://cloud.githubusercontent.com/assets/156236/14230221/1f70b442-f989-11e5-85e1-9041697e9a70.png)\r\n\r\nただしこれだとlistの補完候補がページングが必要な量になった場合の動作をどうすべきか悩みますが…。listが画面に収まらない場合は今までどおりのfullの横スクロールが出るなど？\r\n\r\n## Vimのバージョン\r\n\r\n> VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Mar 21 2016 16:41:37)\r\n> MacOS X (unix) version\r\n> Included patches: 1-1589\r\n\r\nまたは\r\n\r\n> NVIM 0.1.2\r\n\r\n## OSの種類\r\n\r\n*   MacOSX\r\n*   Linux","created_at":1459648841},{"id":894,"user_id":468368,"title":"matchitでmarkdownの%が機能しない","body":"## 質問・報告の内容\r\n\r\nmatchit を 使っていると markdown での % が機能しません。\r\n正確には `[]`, `{}`, `()` のペアにマッチしなくなります。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1683 \r\n\r\n## 使用している or 関係していそうなプラグイン\r\n\r\nmatchit.vim\r\n\r\n## その他\r\n\r\n[1649](https://github.com/vim/vim/commit/aedfcbe1e6c7df6edcd6756d7601bfdec7dd2087) の vimrc_example.vim で pkgadd matchit が ON になったので、\r\nその影響で引っかかりやすくなりました。\r\n\r\nftplugin/markdown.vim が ftplugin/html.vim を使っていて、\r\nその中で matchit 有効化時にHTML用の `b:match_words` を設定しています。\r\nそれが悪さをしてこの現象がおこっています。\r\n本来であれば ftplugin/markdown.vim が `b:match_words` を追加設定してあげると良いのでしょう。\r\n\r\nなお以下を `~/.vim/after/ftplugin/markdown.vim` に設定すれば matchit が正しく動くようになります。\r\n\r\n```vim\r\nif exists(\"loaded_matchit\")\r\n  let b:match_words = '(:),{:},\\[:],' . b:match_words\r\nendif\r\n```","created_at":1459354088},{"id":891,"user_id":20474,"title":"将来 Vim 10 が出た際に has('patch-10.0.001') が動かなくなる","body":"## 質問・報告の内容\r\n\r\n`:help has-patch` で説明されている機能、`has('patch-7.4.123')` が、メジャーバージョンとマイナーバージョンが1桁である前提で実装されているため、将来バージョンが上がった時に動かなくなります。\r\n\r\nhttps://github.com/vim/vim/blob/8fdd7210479f0c486822ad8934087b4bfd8a4765/src/eval.c#L13839-L13854\r\n\r\n今はいいけど、絶対直し忘れると思う…。早いうちに直した方が良さそう。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1657\r\n","created_at":1459020044},{"id":890,"user_id":468368,"title":"テスト後にXinputとXoutputが残った","body":"## 質問・報告の内容\r\n\r\nsrc/testdir で `nmake -f Make_dos.mak win32` して、\r\nテスト終了後に `git status` したら、untracked file として\r\nXinput と Xoutput が検出されました。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1641\r\n\r\n( `:version` で確認できます)\r\n\r\n## OSの種類\r\n\r\n*   Windows\r\n\r\n## その他\r\n\r\n`nmake -f Make_dos.mak clean` すれば消えるので大したことはないですが、\r\n今までは残っていなかった気がします。\r\n残さないようにするか .gitignore に追加すべきか要調査です。\r\n","created_at":1458782277},{"id":885,"user_id":518808,"title":"timer機能を叩く","body":"Vimに導入されたばかりのtimer機能について議論しましょう。\r\n\r\n- timer APIを叩いてバグを出す。\r\n- timer APIの仕様について議論する。\r\n- その他、timer機能に関すること何でも。\r\n\r\n次のリリースが出たら、このissueは閉じます。","created_at":1458380081},{"id":884,"user_id":468368,"title":"fileformat に指定できる値を増やす","body":"## 質問・報告の内容\r\n\r\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">Vim の改行コードセット、Windows は set ff=win とか set ff=windows だと思い込んでて、なんで設定できないんだろう？　と暫く悩んでた。<br>set ff=dos が正解。</p>&mdash; 箱あんこう (@10cube) <a href=\"https://twitter.com/10cube/status/710002072637333504\">2016年3月16日</a></blockquote>\r\n\r\n優先するのは今のままの値だとしても\r\n`:set ff=win` を `:set ff=dos` に読み替えて許容するくらいはできて良さそう。\r\n\r\nまた同様の考え方で `crlf`, `lf`, `cr` の各値を受け付けてあげるのはどうか。\r\n","created_at":1458354713},{"id":883,"user_id":468368,"title":"helptags の正常動作をどう担保するか","body":"## 質問・報告の内容\r\n\r\nVim のインストール時にはヘルプの tags が `:helptags` により自動生成されています。\r\n\r\nしかしソースに含まれる tags を更新しないようにした [7.4.1556](https://github.com/vim/vim/commit/a3442cb5056ca62fc71fa03f68a9395e4391caf4) の影響で、\r\n仮に `:helptags` が tags の生成に失敗した場合には、\r\ntags ファイル自体がインストールされなくなりました。(関連 #882)\r\n\r\n対策としては2つ考えられます。\r\n\r\n* tags の生成に失敗した際には古い tags をインストールしてしまう\r\n  * もしくはエラーで止めてしまう\r\n* helptags を自動テストにみっちりとかける\r\n\r\n前者の古い tags のインストールは利用者視点では必須かもしれません。\r\nまた後者のテストも、今はpkgadd に関連してはありますが、\r\nruntime/docに対して動作していることを、しっかりとは担保できていないようです。","created_at":1458282008},{"id":882,"user_id":6215720,"title":"make installrtbase でhelp tagsの生成に失敗しても無視されてしまう","body":"## 質問・報告の内容\r\n\r\n[src/Makefile のこの部分](https://github.com/vim/vim/blob/master/src/Makefile#L2113-L2127) にあるように, `make installrtbase` などを行った際にhelp tagsの生成が行われていますが, この時 `$(DEST_BIN)/$(VIMTARGET)` が存在しないなどの特殊な状況により生成に失敗してもエラーが無視されてしまうようです.\r\n\r\n```\r\ngenerating help tags\r\ncd ../runtime/doc; mv -f tags tags.dist\r\nmake[1]: Entering directory '/home/cocoa/repo/github.com/vim/vim/runtime/doc'\r\n/tmp/bin/vim -u NONE -esX -c \"helptags ++t .\" -c quit\r\n/bin/sh: /tmp/bin/vim: No such file or directory\r\nMakefile:314: recipe for target 'vimtags' failed\r\nmake[1]: *** [vimtags] Error 127\r\nmake[1]: Leaving directory '/home/cocoa/repo/github.com/vim/vim/runtime/doc'\r\nMakefile:2112: recipe for target 'installrtbase' failed\r\nmake: [installrtbase] Error 2 (ignored)\r\ncd ../runtime/doc; \\\r\n\tfiles=`ls *.txt tags`; \\\r\n\tfiles=\"$files `ls *.??x tags-?? 2>/dev/null || true`\"; \\\r\n\tcp $files  /tmp/share/vim/vim74/doc; \\\r\n\tcd /tmp/share/vim/vim74/doc; \\\r\n\tchmod 644 $files\r\nls: cannot access 'tags': No such file or directory\r\ncp  ../runtime/doc/*.pl /tmp/share/vim/vim74/doc\r\nchmod 755 /tmp/share/vim/vim74/doc/*.pl\r\ncd ../runtime/doc; mv -f tags.dist tags\r\n```\r\n\r\n通常このようなことが起こることは無いとは思いますが, [patch 7.4.1556](https://github.com/vim/vim/commit/a3442cb5056ca62fc71fa03f68a9395e4391caf4) の変更からは生成に失敗した場合 `runtime/doc/tags` がインストールされなくなってしまうので, ちゃんとエラーとして扱うべきではないのかなと思います.\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1529 (Arch Linux 公式repo)\r\n7.4.1555, 7.4.1576 (自分でビルド) など\r\n\r\n## OSの種類\r\n\r\n*   Linux\r\n\r\n## OSのディストリ\r\n\r\nArch Linux\r\n\r\n## その他\r\n\r\nArch Linuxでは `vim` と `vim-runtime` というように別々にパッケージが提供されており,  `vim-runtime` の生成段階でこのような状況が発生しています.\r\nもちろん, このような状況を起こしているのはArch LinuxのVimパッケージ側の問題ですが, このようなエラーが無視されてしまうのはVim側の問題ではないかと思い報告しました.\r\n場違いであれば申し訳ありません.","created_at":1458279044},{"id":881,"user_id":468368,"title":"Winコンソールで、日本語の描画が乱れる","body":"## 質問・報告の内容\r\n\r\n`enc=utf-8` を指定したコンソールvimにおいて、\r\n日本語を表示した状態でスクロールをすると描画が乱れます。\r\nそれまで文字(漢字)があった場所が、スクロールによって空白になるようなケースで\r\n文字が消えずに残るように見えます。\r\n\r\n**`enc=utf-8` 時の参考動画**\r\n\r\n![ng](https://cloud.githubusercontent.com/assets/468368/13852124/290d3c60-eca4-11e5-8480-c5a87fcbd7e7.gif)\r\n\r\n`enc=cp932` の時にはそのようなことは起こらないようです。\r\n\r\n**`enc=cp932` 時の参考動画**\r\n\r\n![ok](https://cloud.githubusercontent.com/assets/468368/13852166/4c51bc46-eca4-11e5-82b6-8c96792dba74.gif)\r\n\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1490\r\n\r\n## OSの種類\r\n\r\n*   Windows 10","created_at":1458229986},{"id":880,"user_id":468368,"title":"Vim script 自体のテストを増やす","body":"## 質問・報告の内容\r\n\r\n**No more 1577!**\r\nVim script のテストを増やすことで、\r\n未来に 7.4.1577 の悲劇を繰り返さないための土台を作りましょう。\r\n\r\nテストとしては src/testdir/test_viml.vim があったりしますが\r\nどう甘めに考えても Vim script 全体には不足していると言ってよいでしょう。\r\n\r\nまずは現状でどのようなテストが不足しているか分析しましょう。\r\nその上で、プラグインで良く使われている機能から、\r\n優先的にテストを追加すれば少しは違ってくるはずです。\r\n","created_at":1458223107},{"id":879,"user_id":468368,"title":"msys2を使った後にvimを起動するとintroが表示されない","body":"## 質問・報告の内容\r\n\r\nVC10でコンパイルした vim をコマンドラインから起動すると起動時の intro が表示されます。\r\nしかし一度でもmsys2 の bash を起動すると以後は表示されなくなります。\r\n\r\n![capture](https://cloud.githubusercontent.com/assets/468368/13813677/2c1e2a9c-ebc6-11e5-9271-0bfebd371514.gif)\r\nコマンドラインから起動するとintroが出るが、bashを挟むと出なくなるデモ\r\n\r\nたぶんmsys2側でコンソールバッファいじってるせいで\r\nもしかしたら対処方法はないかもしれませんが、\r\n一旦問題共有のため起票しておきます。\r\n(おそらくcygwinのbashでも起こるので、やや使い方が異なりますがcygwinタグ付けておきます)\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1490\r\n\r\nこれ以前の版においても、この問題の存在は確認されていました。\r\n\r\n## OSの種類\r\n\r\n*   Windows + msys2 or cygwin","created_at":1458134966},{"id":878,"user_id":10111,"title":"Vim script のシンタックスハイライトが変","body":"割り算を使うとそこが文字列として扱われる。\r\n```vim\r\nfunction! foo()\r\n  let a = (4 / 2) / 2\r\n  let a += 10\r\nendfunction\r\n```\r\n\r\n![](http://go-gyazo.appspot.com/e3acc84a4687e848.png)\r\n\r\nどうやら式内で `()` を使うとユーザ関数扱いになってしまっている。かつ\r\n\r\nsytax/vim.vim:295\r\n```\r\nsyn region\tvimString\toneline\tstart=\"\\s/\\s*\\A\"lc=1 skip=\"\\\\\\\\\\|\\\\+\" end=\"/\"\tcontains=@vimStringGroup\r\n```\r\nこれのおかげで割り算以降が文字列扱いになってしまっている。\r\n","created_at":1458104095},{"id":875,"user_id":48169,"title":"Vimの<C-f>でスクロールしていくと最後一行になってしまう","body":"## 質問・報告の内容\r\n\r\n[Vimの`<C-f>`でスクロールしていくと最後一行になってしまうのを直す設定](http://itchyny.hatenablog.com/entry/2016/02/02/210000) (by @itchyny)\r\n\r\nこの設定をVim本体でサポートするようにしたいです。\r\n上記の設定に限らずマッピングするとキーリピートする動作は遅くなってしまいます。\r\nできればVimのオプション値で最終行の表示範囲を制御できると嬉しいです。\r\n\r\n## Vimのバージョン\r\n\r\n全てのバージョン\r\n\r\n## OSの種類\r\n\r\n全てのOS","created_at":1457929831},{"id":874,"user_id":468368,"title":"revenge of overthespot","body":"## 質問・報告の内容\r\n\r\n**目標設定**\r\noverthespot 機能を取り込んでもらう。\r\n\r\n**背景**\r\nGTK系におけるIMの挙動は onthespot のため、いろいろ問題を起こしている。\r\nこれらは overthespot にすることで、解決することが知られている。\r\n過去に onthespot をやめて overthespot にするようにした [パッチは拒否](https://groups.google.com/d/msg/vim_dev/SK3t_RsWMqM/K5Quc2PQftkJ) された。\r\n\r\n**方針**\r\n過去のパッチが拒否されたのは、そのパッチが単に onthespot 機能を消してしまうことが原因だったと推測される。\r\n仮にこれが configuration で選択できたり、実行時のオプションで選択が可能だったならば、\r\n結果はまた違ったのではなかろうか。\r\n\r\nよって本issueでは\r\n可能ならばオプション設定で、次善の策としてはconfigurationでの選択式による\r\noverthespot 機能の導入を目指す。\r\n\r\n\r\n## 関連 issues\r\n\r\n* https://github.com/vim-jp/issues/issues/53\r\n* https://github.com/vim-jp/issues/issues/545\r\n* https://github.com/vim-jp/issues/issues/663\r\n* https://github.com/vim-jp/issues/issues/730","created_at":1457869258},{"id":872,"user_id":468368,"title":"開発ブランチ(もしくは安定ブランチ)を導入させたい","body":"## 質問・報告の内容\r\n\r\nvim/vim ではバグ修正パッチも実験パッチも master にてリリースされています。\r\nこれは安定運用を望む人にとっては、追いかけにくい状況と言わざるをえません。\r\nすぐにとは言えませんが、次のリリース (7.5 もしくは 8.0) 以降のどこかで、\r\n少なくとも安定ブランチと開発ブランチの2つに分けさせることができたらと考えています。\r\n\r\n本 issue ではそのためのアイデアやアクションをとりまとめましょう。\r\nゴールは 7.5/8.0 リリース後、半年。それまでに導入させられるか失敗するか、です。\r\n\r\n(related #54)","created_at":1457804940},{"id":869,"user_id":10111,"title":"補完ウィンドウのチラツキ改善2016春 ～そして宇宙へ～","body":"https://gist.github.com/mattn/8af649c404ce7253398d\r\n\r\n関数の呼ばれる順番によっては無駄に描画してしまっている所や、先に描画しておかないとチラついてしまう、とった部分を直してみました。\r\nとりあえずステータス行のチラツキは直ったと思います。\r\n\r\nポップアップウィンドウのチラツキも若干ながら改善しました。\r\n\r\n誰か試してプリーズ","created_at":1457665076},{"id":865,"user_id":518808,"title":"本家helpのtypo報告スレ","body":"本家help(`runtime/doc/*.txt`)のtypoを報告するスレです。\r\nその都度vim_devに報告するとウザいのである程度溜まってから報告します。\r\n\r\ntypo発見時のVimバージョン(`7.4.xxxx`)も添えていただけると助かります。","created_at":1457428073},{"id":864,"user_id":468368,"title":"MSVCRT_NAME の値が VC14 のそれとは一見異なる","body":"## 質問・報告の内容\r\n\r\nVisualStudio 2015/VC14 でのビルド時に\r\nsrc/Make_mvc.mak 内の `MSVCRT_NAME` の値が正しくならない。\r\n\r\n期待する値: `vcruntime140` もしくは `vcruntime140.dll`\r\n実際の値: `msvcr140`\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1490\r\n\r\n## OSの種類\r\n\r\n*   Windows\r\n\r\n## その他\r\n\r\n直さなくても動くかもだけど、誤解を招く。\r\nまた他にも`DYNAMIC_MSVCRT_DLL` とか、\r\n幾つか不整合があるかもしれない。\r\n","created_at":1457366557},{"id":861,"user_id":468368,"title":"コンパイルすると src/vim.lib が作成される","body":"## 質問・報告の内容\r\n\r\nMSVC10を用いて、Active Perl 5.22.1 を使って +if_perl でコンパイルすると\r\nsrc/vim.lib が生成され clean の対象にも .gitignore の対象でもない\r\nゴミファイルとして扱われます。\r\n\r\nclean するようにし、 .gitignore にも加えたほうが良いでしょう。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1485\r\n\r\n## OSの種類\r\n\r\n*   Windows\r\n\r\n## その他\r\n\r\nvim.lib でエクスポートされているシンボルは `boot_VIM` でした。\r\n\r\nActive Perl 5.20.1 の時は発生していませんでした。\r\n5.22.1 とで if_perl.c の中身を比較して、理由を抑えておくほうが良いかもしれません。","created_at":1457095945},{"id":858,"user_id":10111,"title":"vim の python の扱いについて","body":"Ubuntu 16.04 から python3 が標準となり python2 は purge 対象となるので vim でどう扱われるべきか検討したい。\r\n\r\n## Q1. has(\"python\") の扱い\r\n\r\n```vim\r\nhas(\"python\")\r\n```\r\n\r\nは python2 or python3 にすべきか\r\n\r\n## Q2. has(\"python2\")\r\n\r\n```vim\r\nhas(\"python\")\r\n```\r\n\r\nが python3 を返す場合\r\n\r\n```vim\r\nhas(\"python2\")\r\n```\r\n\r\nが取れる様にした方がいいか。`:python2` は？など。\r\n\r\n\r\n","created_at":1456981413},{"id":857,"user_id":10111,"title":"assert_fails で最初の例外が拾えない","body":"```\r\necho [] + 1.1\r\n```\r\nで\r\n```\r\nE745: Using a List as a Number\r\nE15: Invalid expression: [] + 1.1\r\n```\r\nが発生するので\r\n```\r\ncall assert_fails('echo [] + 1.1', 'E745:')\r\n```\r\nとして E745 を拾いたいが E15 しか拾えない。\r\n","created_at":1456799383},{"id":856,"user_id":10111,"title":"\"a\" . 1.1 が \"a11\" になる","body":"want_string で右辺に文字列を期待してるけどチェックは必要ない。\r\n\r\nhttps://gist.github.com/mattn/7192570202d96e5f8539\r\n\r\nhttps://groups.google.com/forum/#!topic/vim_dev/3_RrhPyK_o8","created_at":1456798938},{"id":855,"user_id":10111,"title":"v:true == 1 なのに [v:true] != [1]","body":"```diff\r\ndiff --git a/src/eval.c b/src/eval.c\r\nindex 76860b8..a2400fa 100644\r\n--- a/src/eval.c\r\n+++ b/src/eval.c\r\n@@ -6183,7 +6183,8 @@ tv_equal(\r\n     static int  recursive_cnt = 0;\t    /* catch recursive loops */\r\n     int\t\tr;\r\n \r\n-    if (tv1->v_type != tv2->v_type)\r\n+    if (tv1->v_type != tv2->v_type &&\r\n+\t    tv1->v_type != VAR_NUMBER && tv2->v_type != VAR_NUMBER)\r\n \treturn FALSE;\r\n \r\n     /* Catch lists and dicts that have an endless loop by limiting\r\ndiff --git a/src/testdir/test_viml.vim b/src/testdir/test_viml.vim\r\nindex 0120d21..1e1c7b2 100644\r\n--- a/src/testdir/test_viml.vim\r\n+++ b/src/testdir/test_viml.vim\r\n@@ -963,6 +963,10 @@ func Test_type()\r\n     call assert_true(v:false == 0)\r\n     call assert_false(v:false != 0)\r\n     call assert_true(v:true == 1)\r\n+    call assert_true([v:true] == [1])\r\n+    call assert_true([v:false] == [0])\r\n+    call assert_true([1] == [v:true])\r\n+    call assert_true([0] == [v:false])\r\n     call assert_false(v:true != 1)\r\n     call assert_false(v:true == v:false)\r\n     call assert_true(v:true != v:false)\r\n```\r\nhttps://groups.google.com/forum/#!topic/vim_dev/deu8L9Uj3fc","created_at":1456796384},{"id":851,"user_id":468368,"title":"test 時の出力を寡黙に","body":"## 質問・報告の内容\r\n\r\ncontinue from #414 \r\n\r\ntravis-ci でのテスト実行時、画面出力が頻繁にあることで、ログが見難くなっています。\r\n加えてテストが遅くなっている可能性があります。\r\nこれを寡黙にすることで、テストにかかる時間を短縮したり、ログを見やすくできないでしょうか。\r\n\r\n## OSの種類\r\n\r\n*   Travis-Ci\r\n*   Linux","created_at":1456684298},{"id":850,"user_id":468368,"title":"役目を終えたレポジトリを削除する","body":"## 質問・報告の内容\r\n\r\n役目を終えた以下のレポジトリを削除したいです。\r\n\r\n* https://github.com/vim-jp/vim\r\n* https://github.com/vim-jp/vim-ci\r\n* https://github.com/vim-jp/vim-obsoleted\r\n\r\n反対意見がなければ 2016/03/31 を due date とします。","created_at":1456677545},{"id":847,"user_id":468368,"title":"WSAStartup() の呼び出し位置","body":"## 質問・報告の内容\r\n\r\n`WSAStartup()` を呼び出す位置が適切か、要議論。\r\n\r\n現在はソケットチャンネルの初回オープン時に `WSAStartup()` を呼び出している。\r\nしかし一部の `if_xxx` 系の言語(たしかrubyかpythonmか)は、\r\n自身が実行される時に `WSAStartup()` 済みであることを期待しているものがある\r\n(もしかしたらそっちが変わってる可能性もあり)\r\n\r\nそのため Vim としては起動時などの、より早いタイミングで `WSAStartup()` しておいたほうが良いのかも。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1444\r\n\r\n## OSの種類\r\n\r\n*   Windows","created_at":1456628222},{"id":844,"user_id":468368,"title":"src/testdir/Make_dos.mak の名前を変える","body":"## 質問・報告の内容\r\n\r\nDOSのサポートを切った今、\r\nsrc/testdir/Make_dos.mak は Make_win.mak などに\r\n名前を変えたほうが良いのではないでしょうか?\r\n\r\n## OSの種類\r\n\r\n*   Windows\r\n\r\n## その他\r\n\r\n他にもファイル名に誤解を生じやすい名前が残っているかもしれません。\r\n名前を変える際には appvayor 関連にも修正が要るかもなので、要注意です。","created_at":1456624155},{"id":839,"user_id":48169,"title":"job-options の exit-cb ハンドラーが実行されるまでに10秒以上かかる場合がある","body":"## 質問・報告の内容\r\n\r\n現在[実行した外部プログラムをバッファに表示する簡単なVimプラグイン](https://github.com/tyru/jobby.vim)を作っています。\r\nしかし例えば `sleep 2` 等を実行してみても`exit-cb`ハンドラーが実行されるまでに10秒以上かかる場合があります。\r\n\r\n![c224bce9e62f6cb0e9dae0b439606597](https://cloud.githubusercontent.com/assets/48169/13319213/7cac9c14-dc03-11e5-8422-1681a8475d8b.png)\r\n\r\n`:help job-exit-cb` には Vim はプロセスの生死を10秒毎にチェックするとあり仕様通りという事は理解したのですが、これを SIGCHLD 等で代替することはできないでしょうか？\r\n(Windows や他OSでの実装が難しい？)\r\n\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1412\r\n\r\n## OSの種類\r\n\r\n*   Linux\r\n\r\n## OSのディストリ\r\n\r\nArch Linux\r\n\r\n## 使用している or 関係していそうなプラグイン\r\n\r\nhttps://github.com/tyru/jobby.vim","created_at":1456401970},{"id":837,"user_id":375258,"title":"filetype=vim: substitute()のsyntaxがおかしい","body":"## 質問・報告の内容\r\nvimのシンタックスの問題です。\r\n```\r\nvim -u NONE\r\nsyn on\r\nset ft=vim\r\n```\r\n```vim\r\nfunction! s:test(x)\r\n  let y = substitute(substitute(a:x, 'a', '', 'g'), 'b', '', 'g')\r\nendfunction\r\n```\r\n二つ目の `substitute()` のsyntaxが `vimSubst` になります。一つ目は `vimFuncName` になります。二つ目の `substitute()` も `vimFuncName` になることを期待します。\r\n\r\n```vim\r\nfunction! s:test(x)\r\n  return substitute(substitute(a:x, 'a', '', 'g'), 'b', '', 'g')\r\nendfunction\r\n```\r\nこのコードでは、どちらの `substitute()` も `vimSubst` になってしまいます。いずれも `vimFuncName` になるのが正しいと思います。\r\n\r\n## Vimのバージョン\r\n\r\n7.4.1412\r\n\r\n## OSの種類\r\n\r\n*   MacOSX\r\n\r\n## OSのバージョン\r\n\r\nOS X El Capitan\r\n\r\n## 使用している or 関係していそうなプラグイン\r\n\r\nvim -u NONEで再現します\r\n\r\n## その他\r\nhttps://github.com/vim/vim/commit/e0fa3742ead676a3074a10edadbc955e1a89153d#diff-86da060e2153c8ce5dc317a7b4b5a29dR305\r\nこの変更な気がします。この行を元に戻したら直りました。","created_at":1456358018},{"id":835,"user_id":48169,"title":":command-complete のそれぞれの補完を Vim script から取得できるようにしたい","body":"## 質問・報告の内容\r\n\r\nタイトルの通り、:command-complete のそれぞれの補完を Vim script から取得できるようにしたいです。\r\n`complete=customlist,Func` の `Func()` の中でしばしば組み込みのExコマンド補完(`augroup,buffer,...`)を使用したい時があります。\r\nなので、それらの関数を Vim script でも扱えるようになると嬉しいです。\r\n引数は -complete=customlist に指定する関数と同じ `(ArgLead, CmdLine, CursorPos)` が良いです。\r\n\r\n## Vimのバージョン\r\n\r\n新機能の提案です。\r\n\r\n## OSの種類\r\n\r\n全ての OS で使用できると嬉しいです。\r\n","created_at":1456242548},{"id":831,"user_id":480049,"title":"ヘルプ pattern.txt にリンクを追加の提案","body":"## 質問・報告の内容\r\n\r\n[pattern.txt 1105行目](https://github.com/vim-jp/vimdoc-ja-working/blob/master/en/pattern.txt#L1105-L1108)\r\n>\t  These items only work for 8-bit characters, except [:lower:] and\r\n>\t  [:upper:] also work for multi-byte characters when using the new\r\n>\t  regexp engine.  In the future these items may work for multi-byte\r\n>\t  characters.\r\n\r\n新しい正規表現エンジンへの言及があるので `|two-engines|` などのリンクがあると親切ではないでしょうか。two-engines タグは同一ファイル内ですが、およそ800行ほど上なのでタグジャンプなどでこの記述にたどり着いた方にはわかりづらいかと思います。ほとんどの人は二つの正規表現エンジンを意識せずにVimを使っていると思うのであったほうが親切かと思います。\r\n```diff\r\ndiff --git a/runtime/doc/pattern.txt b/runtime/doc/pattern.txt\r\nindex 2a3d2c4..7a49bc1 100644\r\n--- a/runtime/doc/pattern.txt\r\n+++ b/runtime/doc/pattern.txt\r\n@@ -1104,8 +1104,8 @@ x\tA single character, with no special meaning, matches itself\r\n \t  '/', alphabetic, numeric, '_' or '~'.\r\n \t  These items only work for 8-bit characters, except [:lower:] and\r\n \t  [:upper:] also work for multi-byte characters when using the new\r\n-\t  regexp engine.  In the future these items may work for multi-byte\r\n-\t  characters.\r\n+\t  regexp engine. |two-engines| In the future these items may work for\r\n+\t  multi-byte characters.\r\n \t\t\t\t\t\t\t*/[[=* *[==]*\r\n \t- An equivalence class.  This means that characters are matched that\r\n \t  have almost the same meaning, e.g., when ignoring accents.  This\r\n```\r\n\r\n\r\n## その他\r\nhttps://github.com/vim-jp/vimdoc-ja-working/issues/5#issuecomment-185736810 から誘導されてきました。","created_at":1455813651},{"id":830,"user_id":468368,"title":"templates for vim/vim","body":"## 質問・報告の内容\r\n\r\n新たに導入された issue と PR の templates を、[vim/vim](https://github.com/vim/vim) に提案しませんか?\r\nhttps://github.com/blog/2111-issue-and-pull-request-templates\r\n\r\n## その他\r\n\r\nどんなテンプレートが良いのかは研究の余地があります。\r\n","created_at":1455753109},{"id":829,"user_id":468368,"title":"improve issue template","body":"## 質問・報告の内容\r\n\r\nさっそく [Issue tempate](https://github.com/blog/2111-issue-and-pull-request-templates) を作りました!\r\nただちょっと適当なので、よければどなたかブラッシュアップしてください。\r\n現状で良いというのであれば、それだけでも表明してもらえればと思います。\r\n\r\n## その他\r\n\r\nテンプレートは .github/ISSUE_TEMPLATE.md です。\r\nhttps://github.com/vim-jp/issues/blob/gh-pages/.github/ISSUE_TEMPLATE.md","created_at":1455752943},{"id":821,"user_id":10111,"title":".vim/vimrc(vimfiles/vimrc) がある場合 .viminfo ファイルも .vim/viminfo (vimfiles/viminfo) であるべきか","body":"vimrc は ~/.vimrc も ok だし ~/.vim/vimrc だけど .viminfo は ~/.viminfo に置くことになってる。~/.vim/vimrc の時は ~/.vim/viminfo にすべきじゃないか。という議論。\r\n","created_at":1455264058},{"id":820,"user_id":840186,"title":"job機能を叩く","body":"Vimに導入されたばかりのjob control機能について議論しましょう。(関連 #819)\r\n\r\n* job APIを叩いてバグを出す。\r\n* job APIの仕様について議論する。\r\n* その他、job機能に関すること何でも。\r\n\r\n次のリリースが出たら、このissueは閉じます。","created_at":1455146199},{"id":819,"user_id":840186,"title":"channel機能を叩く","body":"Vimに導入されたばかりのchannel機能について議論しましょう。(関連 #820)\r\n\r\n* channel APIを叩いてバグを出す。\r\n* channel APIの仕様について議論する。\r\n* その他、channel機能に関すること何でも。\r\n\r\n次のリリースが出たら、このissueは閉じます。","created_at":1455146159},{"id":816,"user_id":518808,"title":"quickfixの対象バッファの対象行で行削除→取り消しをすると :cc のジャンプ先がズレる","body":"検証用のファイルの作成\r\n```bash\r\n$ vim -Nu NONE testX.txt\r\n```\r\n```vim\r\n:%d\r\n:exec \"norm! 100o0\"\r\n:exec \"norm! \\<C-V>ggg\\<C-A>dd\"\r\n:wq\r\n```\r\n\r\n本番\r\n```bash\r\n$ vim -Nu NONE testX.txt\r\n```\r\n```vim\r\n:vimgrep 3 %\r\n:cc\r\n:echo line('.')\r\n3                   \" OK\r\n:del 9\r\n:undo\r\n:cc\r\n:echo line('.')\r\n12                  \" あれ？3じゃなくて！？\r\n:del 9\r\n:undo\r\n:cc\r\n:echo line('.')\r\n21                  \" あれ？3じゃなくて！？\r\n:cn\r\n:echo line('.')\r\n22                  \" あれ？13じゃなくて！？\r\n:cn\r\n:echo line('.')\r\n23                  \" OK\r\n```\r\n\r\nundoしたんだからジャンプ先は変わらないのがいいのでは？こういうもの？\r\n\r\n補足\r\n\\`{a-zA-Z} は行削除→undoしてもジャンプ先は変わらない。\r\n但し、行削除直後はジャンプしない。","created_at":1454636562},{"id":815,"user_id":943423,"title":"分割されたウインドウで 'set scroll&' するとエラーになる","body":"https://twitter.com/h_east/status/677152178671247360\r\n\r\n```\r\nvim -Nu NONE\r\n:split\r\n:set scroll&\r\nE49: Invalid scroll size: scroll&\r\n```\r\n\r\n条件 : `winheight(0) < Rows/2` のときエラーになります。\r\n\r\n`Rows` : (Vim 起動時の) 画面行数","created_at":1454627043},{"id":813,"user_id":10111,"title":"dict のキーと値の間に空白を入れないとシンタックスが消える。","body":"![](http://go-gyazo.appspot.com/ea348aedfed8d296.png)\r\n\r\n`:` の後に空白を入れると直る。\r\n\r\n![](http://go-gyazo.appspot.com/afc0b186d9722c93.png)\r\n\r\n期待するシンタックス\r\n\r\n![](http://go-gyazo.appspot.com/eb086e57fe591402.png)","created_at":1454377714},{"id":808,"user_id":840186,"title":"エクスプローラのコンテキストメニューの項目が日本語表示されない","body":"６４bit版Windowsに、公式のインストーラでVimをインストールすると、エクスプローラの右クリックメニューで表示される \"Edit with Vim\" などの項目が日本語表示されません。\r\n（32bit Windowsであれば問題ありません。）\r\n\r\n原因：\r\nインストーラでインストールされるVimは32bit版であり、同梱されているgettextのDLLも32bit版である。\r\n一方、64bit Windowsでは、右クリックメニューの項目表示を行うgvimext.dllは、64bit版がインストールされる。\r\ngvimext.dllは日本語表示を行うためにgettextをロードしようとするが、DLLは32bit版であるためロードできず、日本語表示できない。","created_at":1453999845},{"id":804,"user_id":22977,"title":"Windows で fnamemodify('./', ':.') が空文字列を返す","body":"Windows で `fnamemodify('./', ':.')` が空文字列を返す。\r\nUnix 等では'./' が返る。\r\n\r\n内部関数で相対パスから絶対パスへの変換時、OS依存で末尾にパスセパレータが付加されているため。\r\n\r\n### 修正方法\r\nos_mswin.c の修正。\r\n\r\nCygwin は 7.4.1014 で修正されたので #789 から分離しました。\r\nhttps://groups.google.com/d/topic/vim_dev/QEADlImLvYY/discussion","created_at":1452263399},{"id":798,"user_id":943423,"title":"長い行で 'set number' すると行数表示やカーソル位置がおかしくなることがある","body":"`set wrap` して、1行が画面内に収まらない行の行末にカーソルを置いた状態で `set number` すると\r\n\r\n* カーソル位置がずれる\r\n* `gg` 等で行頭に移動すると、行数表示が継続行の形式になっている (`--1` のように先頭に `--` が付く)\r\n\r\n`test.vim`: \r\n\r\n```vim\r\nset wrap\r\nsplit\r\nresize 3\r\nvsplit\r\nvertical resize 25\r\nnormal! 76ia\r\n```\r\n\r\n`vim -u NONE -N -S test.vim`\r\n\r\n```\r\naaaaaaaaaaaaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaa\r\na\r\n```\r\n\r\n`:set number`\r\n\r\n```\r\n--1 aaaaaaaaaaaaaaaaaaaaa\r\n    aaaaaaaaaaaaaaaaaaaaa\r\n    aaaaaaaaa   |\r\n```\r\n\r\n`|`: カーソル位置\r\n\r\n`gg`\r\n\r\n```\r\n--1 aaaaaaaaaaaaaaaaaaaaa\r\n    aaaaaaaaaaaaaaaaaaaaa\r\n    aaaaaaaaaaaaaaaaaaaaa\r\n```","created_at":1450618542},{"id":793,"user_id":10111,"title":"物理的なカーソル位置が欲しい","body":"g_coord.X, g_coord.Y 相当が欲しい。\r\n出来ればピクセル位置で欲しいけど、CUI を考えると文字数かなー。","created_at":1448876209},{"id":788,"user_id":15716829,"title":"vim.exe gvim.exe起動するとノートンセキュリティに不正と判断されて削除される","body":"タイトルの通りです。これは対策ありますか？\r\nちなみに環境は\r\nWindows10-64bit\r\nダウンロードしたファイルは、vim74-kaoriya-win64　ですね。\r\nノートンはノートンセキュリティの最新のものです。","created_at":1446997897},{"id":779,"user_id":480049,"title":"gvim を最大画面表示しているときに :vsplit すると表示行数が減る","body":"Windows 7 上で gvim を最大画面表示して使っているときに `:vsplit` して画面を縦に分割すると、表示行数が一行か二行くらい小さくなってしまいます。\r\n\r\n```\r\ngvim -u NONE -N -c \"simalt ~x\"\r\n```\r\nで gvim を起動したときの画面（１）と、そのあと\r\n```\r\n:vsplit\r\n```\r\nした後の画面（２）を比べると赤枠で示されている分表示行が小さくなります。\r\n\r\n（１）\r\n![(1)](https://cloud.githubusercontent.com/assets/480049/10367148/50c074e2-6e01-11e5-9e76-4baafd34e9bd.png)\r\n\r\n（２）\r\n![(2)](https://cloud.githubusercontent.com/assets/480049/10367160/67648580-6e01-11e5-8aed-b0806730ba2c.png)\r\n\r\nスクリーンショットは見やすいように暗いカラースキームに変えています。使っているのは Kaoriya gvim 32bit です。再現する方はいらっしゃらないでしょうか？\r\n","created_at":1444310231},{"id":776,"user_id":468368,"title":"implement unicode property","body":"implement unicode property for regexp mainly.\r\n\r\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">Vim script、正規表現でUnicodeプロパティ実装して💢</p>&mdash; tasuten (@tasuten) <a href=\"https://twitter.com/tasuten/status/650705773190774784\">2015, 10月 4</a></blockquote>\r\n\r\nIt seems very good point for me.\r\n\r\n* spec: http://www.unicode.org/Public/UNIDATA/Scripts.txt\r\n* blogs and presentations:\r\n  * http://techracho.bpsinc.jp/hachi8833/2013_09_13/13433\r\n  * http://www.slideshare.net/ShozoHatta/unicord-charproperties\r\n\r\n","created_at":1443976103},{"id":774,"user_id":480049,"title":"search()/searchpos() 関数のインサートモードでの挙動について","body":"インサートモード中での `search()`, `searchpos()` 関数の挙動がおかしいように思います。\r\n\r\n行の最末尾にマッチするような正規表現パターンを与えた場合の、例えば次のようなマッピングを定義します。\r\n\r\n```vim\r\ninoremap <Right> <C-r>=<SID>go_to_end()<CR>\r\nfunction! s:go_to_end() abort\r\n  call search('$', '')\r\n  return ''\r\nendfunction\r\n```\r\n\r\nこのとき、次のようなバッファの1行目にカーソルがある場合はインサートモードに入り `<Right>` の入力により4桁目 (`c` の後ろ) にカーソルが来ることを期待します。実際、1～2桁目 (`a` の前後) にカーソルがある場合にはそのように動きますが、3桁目 (`b` の後ろ) にカーソルが来たときは `c` の後ろにマッチせず、2行目の `f` の後ろにマッチします。\r\n\r\n```\r\nabc\r\ndef\r\n```\r\n\r\n最後から1桁前にカーソルがあるときに挙動に一貫性がないように思います。\r\n\r\nちなみにカーソルの現在位置にマッチする場合も受け入れる c フラグを与えた場合は3桁目にカーソルがある場合も1行目の末尾にマッチするので、桁の計算がノーマルモードと共通になってしまっているような気がします。\r\n\r\n```vim\r\ninoremap <S-Right> <C-r>=<SID>go_to_end_with_c_flag()<CR>\r\nfunction! s:go_to_end_with_c_flag() abort\r\n  call search('$', 'c')\r\n  return ''\r\nendfunction\r\n```","created_at":1443794621},{"id":770,"user_id":10111,"title":"perl6 で特定のコメントがあるとシンタックスハイライトが遅くなる","body":"https://github.com/vim-perl/vim-perl/issues/197\r\n\r\nperl6 で\r\n```\r\n# -------------------------------------------------------------------------\r\n```\r\nといった行があるとシンタックスハイライトが使い物にならないくらい遅くなる。\r\nvim-perl の方では既に改善されていた為、vim-perl の author に申告したところ、bram に言ってほしいといわれたので vim-dev に投稿済み。\r\n\r\nhttps://groups.google.com/forum/#!topic/vim_dev/zdRp9XEiwG0\r\n","created_at":1442834147},{"id":759,"user_id":204623,"title":"curved quotes を含む文章での as コマンドの挙動","body":"[「asコマンドが英日混合の文章で動作するのは香り屋Vimのパッチのおかげ」](https://twitter.com/kaoriya/status/618750591792099328)と以前 @koron さんに教えていただいた者です。その節はありがとうございました。\r\n\r\nこのissueでは、同パッチが適用されたVimがcurved quotesも文の区切り位置として認識してしまう事象を報告します。\r\n\r\n具体的には、\r\n\r\n- regular quotes（直線型引用符）を使った以下の1行目の文章では区切り位置が正しく認識される（想定通りの動作）\r\n- curved quotes（曲線型引用符）を使った2行目の文章では、アポストロフィやダブルクォーテーションの記号も区切り位置と認識されてしまう←**これが問題**\r\n\r\n以下の文章の「I」や「A」にカーソルを置いた状態で `vas` を実行すると違いがわかると思います。\r\n\r\n```\r\nI'm \"The Guy\". And she is \"The Queen\".\r\nI’m “The Guy”. And she is “The Queen”.\r\n```\r\n\r\n全角の記号を句読点とするパッチなのかな？と挙動から推測していますが、日本語ではそれでさほど支障はなくとも、英語にするとcurved quotesは頻出なのでこれはつらい挙動です。\r\n\r\nWordpressやMac OS Xにはregular quotesをcurved quotesに自動変換する仕組み(smart quotes)が何年も前から導入されているようです。そのせいもあってか、ブラウザからコピペした英文の処理時にこの問題によくぶつかるようになりました。\r\n\r\nなお、この挙動は香り屋Vim 7.4.798 32bit版で確認しました。","created_at":1440135990},{"id":757,"user_id":10111,"title":"Ctrl+Shift+B の様な mapping の実装可否を検証","body":"#756 より。\r\n\r\nなぜ出来ない様になっているのか、なぜ neovim は出来る(らしい)のかを調べて理由があるなら close。なければパッチを作ろう。","created_at":1440036588},{"id":749,"user_id":13287230,"title":"utf-8時に外部コマンドの出力が文字化けする","body":"たびたび申し訳ございません。utf-8時に文字化けが発生します。\r\n\r\n環境：Kaoriya版GVim 7.4 \r\nswitches/enabled フォルダに utf-8.vim を導入し utf-8化\r\n状況：cppコードをgvimのメニューからメイク（:make）した\r\n\r\n![blodg](https://cloud.githubusercontent.com/assets/13287230/8638447/7137a95c-28f6-11e5-99d9-fc0ef3f758c8.jpg)\r\n（メッセージ最終行）\r\n\r\nVimのメッセージぐらいですと何となくわかりますが、QuickRunなどのプラグイン使用時にも同様に文字化けし、困っております。\r\nどなたか解決していただけましたらうれしいです。\r\n","created_at":1436715191},{"id":748,"user_id":13287230,"title":"UTF-8 以外で DirectWrite を有効にできないか","body":"こんにちは、Kaoriya版Vim7.4を使用中ですがフォントレンタリングで要望があります\r\nWIndows付属のフォントレンタリング機能であるCleartypeを使うと、Rictyなどのフォントがつぶされてしまい、非常に見づらいです。\r\nしかし、Cleartypeを無効にすると非常にきれいに表示されます。\r\nCleartypeはUIやブラウザのメイリオに多用されていて常時OFFにするのは好ましくありません。\r\nGVim上だけでCleartypeを阻止出来たら非常にうれしいです。\r\n自分はプログラミングはできないので、申し訳ございませんが\r\n\r\nご検討よろしくお願い申し上げます。\r\n\r\n[Cleartypeあり]\r\n![blodg](https://cloud.githubusercontent.com/assets/13287230/8636067/12453dba-2888-11e5-9652-1495b6a0c957.jpg)\r\n\r\n[Cleartypeなし]\r\n![blodg](https://cloud.githubusercontent.com/assets/13287230/8636072/6f4e5d98-2888-11e5-8422-7bdc3b694aac.jpg)\r\nCleartypeをオフにしているので、タイトルバーやメニューバーの文字が見づらいです\r\n","created_at":1436667843},{"id":746,"user_id":10111,"title":"gui で :sh 時にエスケープシーケンスを除去出来ないか","body":"Linux の gui 版で :sh すると gui 上で shell が起動します。dumb 端末なのである程度の操作だけ出来ればいいとは思うんですが、エスケープシーケンスを除去しないと正直使い物にならない。","created_at":1436197620},{"id":744,"user_id":468368,"title":"dos-standard-mappings の記述不足","body":"#743 に関連して\r\n\r\n環境によって自動的に設定されるマッピングがあります。\r\nソースコードで言うと https://github.com/vim-jp/vim/blob/318083ec08ce7b586ba564deccd0a59256e632d9/src/getchar.c#L5306 このあたり。\r\n\r\nヘルプとしては [`:help dos-standard-mappings`](http://vim-jp.org/vimdoc-ja/os_dos.html#dos-standard-mappings) ([thank you @thinca!](http://lingr.com/room/vim/archives/2015/06/28#message-22091513)) に書いてありますが、\r\n記述項目が足りないように見受けられます。\r\nなので精査して足りなければ書き足しましょう。\r\n\r\n\r\nMacOS についても定義されるようですが、こっちは…いらないかな? 要検討","created_at":1435500584},{"id":741,"user_id":51972,"title":"プロポーショナルフォントを使いたい","body":"先日発表されたアドビの新フォントSource Han Code JPをVimで表示したいと思っています。\r\nhttp://www.forest.impress.co.jp/docs/news/20150612_706667.html\r\n\r\n特定フォントに特化してIssueを作りましたが、実際にはWindows版Vimのフォント設定が等幅フォントに限定されていることが原因のようです。 by Koronさん\r\nhttps://twitter.com/kaoriya/status/609914675656982529\r\n\r\n","created_at":1434325633},{"id":739,"user_id":1528093,"title":"Linux上で入力時にしかCursorIMのハイライトに変わらない","body":"```vim\r\nif has('multi_byte_ime') || has('xim')\r\n  highlight Cursor guifg=NONE guibg=Green\r\n  highlight CursorIM guifg=NONE guibg=Purple\r\nendif\r\n```\r\n\r\nWindowsではIMEをオンにすると紫色(CursorIM)に変化しますが、\r\nLinuxでは入力中(IMEをオンで)にしか紫色(CursorIM)に変わりません。\r\n\r\n## 環境\r\n* Vine6.3, Vim 7.3.206\r\n* Ubuntu 15.04, Vim 7.4.738\r\n\r\nどちらもGVim\r\n\r\n出典: 日本語入力時のカーソルの色 - Google グループ\r\n          https://groups.google.com/forum/#!topic/vim_jp/Y2LkEfaUk8k","created_at":1434243943},{"id":737,"user_id":839237,"title":"Windows で Ex モードで起動すると画面がクリアされる","body":"再現手順:\r\n\r\n```batch\r\n> vim -u NONE -i NONE -e\r\n```\r\n\r\n画面には、\r\n\r\n> Entering Ex mode. Type \"visual\" to go to Normal mode.\r\n> :\r\n\r\nと表示されるはずですが、`WINDOW_BUFFER_SIZE_EVENT` が発生して `shell_resized()` が呼ばれるために画面がクリアされてしまいます。\r\n\r\nhttps://gist.github.com/hattya/2ae256f627f86e3ecfec\r\n`shell_resized()` → `shell_resized_check()` とすることで画面がクリアされなくなりましたが、`tgetch()` の方は必要ないかもしれません。","created_at":1433064658},{"id":736,"user_id":839237,"title":"Windows で vim -N -e -s で起動後、挿入モードに入ると表示が乱れる","body":"再現手順:\r\n```batch\r\n> type test.vim\r\nexecute \"normal! ihi\\<CR>\\<Esc>\"\r\nfor i in range(10)\r\n  verbose echo i\r\nendfor\r\nqall!\r\n> vim -u NONE -i NONE -N -e -s --cmd \"source test.vim\"\r\n```\r\n\r\n`echo` がウインドウの 1 行目から始まり、実行後 Vim が画面を復元してさらに表示がおかしなことになります。\r\n`normal!` の行をコメントアウトして、挿入モードに入らないようにすると期待通りの表示になります。\r\n\r\n原因は `src/os_win32.c` の `g_coord` が `(0, 0)` のまま `mch_set_cursor_shape()` が呼ばれるためです。\r\n\r\nhttps://gist.github.com/hattya/f1895ef7a85546a13b00\r\nこれで直るみたいですが、Vim よくわかりません。","created_at":1432809726},{"id":731,"user_id":3096934,"title":"diff 後 matchadd() しても思うようにハイライトされない","body":"最近の 7.4.725 で気付いたことです。\r\n例えば\r\naaa xxx aaa xxx aaa\r\naaa yyy aaa yyy aaa\r\nの 2 つのテキストを diff すると、中央の xxx aaa xxx と yyy aaa yyy が DiffText (gui=bold guibg=Red) でハイライトされますが、この後、matchadd(\"MatchParen\", \"aaa\") を行うと、どの aaa も MatchParen で同じようにハイライトされていました。ところが、7.4.725 では、DiffText でハイライトされた中央の aaa はボールドのまま残ります。\r\n入手できるバイナリで調べてみたら、7.4.648 以降、7.4.688 以前で動きが変わったようです。\r\n該当しそうなパッチとなると、\r\n7.4.682 search and match highlighting replace cursorline highlighting\r\nあたりなのでしょうか。\r\nこの動作変更は仕様なのでしょうか？","created_at":1430981308},{"id":730,"user_id":10111,"title":"fcitx の未変換状態が gvim で表示されない","body":"これは前から知ってたけど、僕の所だけかなーと思ってたら他でも起きてたって事案。\r\n\r\nhttps://twitter.com/EzoeRyou/status/592574230228697088\r\n\r\n> Ubuntu 15.04でfcitxをGVimで使うと、未返還状態の入力が表示されないのだけれど（タブ補完ウインドウには表示される）、どうすればいいんだろ。 \r\n\r\n以前僕が調べた限りだと、`vim -gf` だと再現しない。\r\nおそらく fcitx が gtk を初期化したプロセスに対して IM を割り当てている為、fork した子供側では表示されなくなるという物らしい。\r\n","created_at":1430122056},{"id":728,"user_id":518808,"title":"windowタイトルの表示幅の計算がおかしい？","body":"確認環境: GVim 7.4.648 kaoriya 32bit on Windows 7 sp1 32bit\r\n```dos\r\n> gvim -N -u NONE -c \"lang C\"\r\n```\r\n`set guifont=Osaka－等幅:h9:cSHIFTJIS` だとwindowタイトルには `[No Name] + - GVIM` と表示されている。\r\nしかし、`set guifont=Osaka－等幅:h496:cSHIFTJIS` とフォントサイズを大きくするとwindowタイトルが`[N... GVIM`と表示されており、明らかに(Obviously)表示幅がおかしい。\r\n![default](https://cloud.githubusercontent.com/assets/518808/7289194/77e92c78-e9a7-11e4-9b9a-be34709c0e5f.png)\r\n(背景色やツールバーが`gvim -N -u NONE -c \"lang C\"` の結果と違うのはご容赦下さい)\r\n\r\nwindowタイトルのフォントサイズはシステムから取得するものですよね？その情報がおかしい？\r\n\r\n出でよ！Win32担当！","created_at":1429754837},{"id":723,"user_id":468368,"title":"vimdiffを提供する良い方法","body":"vimdiffをバンドルしてくれというリクエストが(英語で)来てました。\r\n\r\n> Just one request. If you could kindly include gvimdiff and vimdiff as well, it will be great.\r\n\r\nvimdiff それ自身は vim からのリネームに過ぎませんが、\r\n実際に機能させるには ed スタイルの diff を生成するプログラムが必要です。\r\nとはいえそのためにcygwinやmsys/mingwをインストールさせるのも\r\nあまりに大げさかなと。\r\n\r\nそこで [ynkdir/vim-diff](https://github.com/ynkdir/vim-diff) をバンドルすることを思いつきました。\r\nvim-diff をバンドルして起動時に diff.exe が見つからなかったら自動的に diffexpr を設定する\r\nというアイデアです。\r\n\r\nなにかこうしたら良いとか、アドバイスがあったらお願いします。","created_at":1428754445},{"id":722,"user_id":10111,"title":"syntax/css.vim のハイライトがあまい","body":"https://github.com/ysugimoto/gssp/tree/master/test/cases\r\n\r\nここにあるテストケースの css を開くといくらか期待通りのシンタックスにならない。\r\n見つけたのは以下4つ。\r\n\r\n![](http://go-gyazo.appspot.com/d090494c50a46ff6.png)\r\n\r\n","created_at":1428370709},{"id":721,"user_id":10111,"title":"vim.exe が良く分からないけど落ちる","body":"えーっと... 纏まってないけど原因追究に疲れてきたので聞いて下さい。<del>最後の曲です。</del>\r\n\r\nhttps://twitter.com/mattn_jp/status/580966579044659200\r\n>誰にも言って無かったんだけど、実を言うと vim で数年前から再現不可なバグがあって稀に落ちるのを確認してた。どうしても再現しなくてしかも落ちるという最悪の動作で報告しようもなくてだいぶ苦しんでたけど、今さっき100%再現する方法を見つけた。絶対直してやる！ \r\n\r\n色々試してたら100%でも無いっぽい。でもかなり高確率。\r\n\r\n```\r\n2015年2月28日(土)　(日)　10:00\r\n```\r\n\r\nこういうテキストファイルを開いて、`土` の部分で `cw` をタイプ、IME を On にします。(ALT+半角全角)\r\nそして1文字(例えば`き`)を入力すると\r\n\r\n![](http://go-gyazo.appspot.com/524ae30db3ac03de.png)\r\n\r\nこうなってキー操作何も効かないまま時には CPU 張り付いて死ぬ。\r\nこのバグ、数年前から時折起きてて、原因分からず再現方法も分からずだったのが今日ようやく上のパターンまで縮める事が出来た。\r\n<del>追ってみたところ、`os_win32.c` の`WaitForChar`の中のループ中にこの現象が起きる様です。</del>\r\n<del>なんとなーく cmd.exe のバグの様な気もしなくない。</del>","created_at":1427363431},{"id":716,"user_id":480049,"title":"'breakindent'オプションを使用時に長い行でカーソルの位置がずれる","body":"およそタイトルの通りですが、`breakindent`オプションをオンにしてウィンドウに表示可能な文字量よりも長い行を表示させた際にカーソルがずれます。表示が絡むのでうまくいくかわかりませんが、私の環境では次のスクリプトを読み込むことで再現します。\r\n```vim\r\nset wrap\r\nset breakindent\r\nset breakindentopt=shift:4\r\n\r\nsplit\r\nvsplit\r\nresize 3\r\nvertical resize 25\r\n\r\nnormal! 67ia\r\nstartinsert!\r\n```\r\n実行するとカーソルのあるウィンドウが67文字のaでちょうど埋まるだけのはずなのですが、実際にはカーソルは行末を越えて次の行へ移っています。さらに何文字か打ち込んでみてもらえると、カーソルの表示位置と編集位置がずれているのがわかりやすいかと思います。どうも、`breakindentopt`の`shift`の値だけずれているように思います。","created_at":1426850695},{"id":714,"user_id":480049,"title":"set shiftwidth=0 の場合に対応していないインデントファイルが存在する","body":"`:help 'shiftwidth'`には\r\n\r\n>When zero the 'ts' value will be used.  Use the |shiftwidth()|\r\n>function to get the effective shiftwidth value.\r\n\r\nとありますが、実際には`shiftwidth()`が使われていないものがindent/以下に存在するため`set shiftwidth=0`という設定は事実上機能していないように思います。ひとまず`indent/vim.vim`のパッチを書いてみました、これを手本に作られているものもあるようなので。`:help shiftwidth()`の項に例のある`s:sw()`を使っています。もし問題があれば教えていただけると幸いです。\r\n```diff\r\ndiff -r 3bd553b9e4bf runtime/indent/vim.vim\r\n--- a/runtime/indent/vim.vim\tSat Mar 14 15:35:52 2015 +0100\r\n+++ b/runtime/indent/vim.vim\tSun Mar 15 14:16:29 2015 +0800\r\n@@ -58,19 +58,19 @@\r\n     if exists(\"g:vim_indent_cont\")\r\n       let ind = ind + g:vim_indent_cont\r\n     else\r\n-      let ind = ind + &sw * 3\r\n+      let ind = ind + s:sw() * 3\r\n     endif\r\n   elseif prev_text =~ '^\\s*aug\\%[roup]' && prev_text !~ '^\\s*aug\\%[roup]\\s*!\\=\\s\\+END'\r\n-    let ind = ind + &sw\r\n+    let ind = ind + s:sw()\r\n   else\r\n     \" A line starting with :au does not increment/decrement indent.\r\n     if prev_text !~ '^\\s*au\\%[tocmd]'\r\n       let i = match(prev_text, '\\(^\\||\\)\\s*\\(if\\|wh\\%[ile]\\|for\\|try\\|cat\\%[ch]\\|fina\\%[lly]\\|fu\\%[nction]\\|el\\%[seif]\\)\\>')\r\n       if i >= 0\r\n-\tlet ind += &sw\r\n+\tlet ind += s:sw()\r\n \tif strpart(prev_text, i, 1) == '|' && has('syntax_items')\r\n \t      \\ && synIDattr(synID(lnum, i, 1), \"name\") =~ '\\(Comment\\|String\\)$'\r\n-\t  let ind -= &sw\r\n+\t  let ind -= s:sw()\r\n \tendif\r\n       endif\r\n     endif\r\n@@ -82,7 +82,7 @@\r\n   let i = match(prev_text, '[^\\\\]|\\s*\\(ene\\@!\\)')\r\n   if i > 0 && prev_text !~ '^\\s*au\\%[tocmd]'\r\n     if !has('syntax_items') || synIDattr(synID(lnum, i + 2, 1), \"name\") !~ '\\(Comment\\|String\\)$'\r\n-      let ind = ind - &sw\r\n+      let ind = ind - s:sw()\r\n     endif\r\n   endif\r\n \r\n@@ -90,12 +90,22 @@\r\n   \" Subtract a 'shiftwidth' on a :endif, :endwhile, :catch, :finally, :endtry,\r\n   \" :endfun, :else and :augroup END.\r\n   if cur_text =~ '^\\s*\\(ene\\@!\\|cat\\|fina\\|el\\|aug\\%[roup]\\s*!\\=\\s\\+[eE][nN][dD]\\)'\r\n-    let ind = ind - &sw\r\n+    let ind = ind - s:sw()\r\n   endif\r\n \r\n   return ind\r\n endfunction\r\n \r\n+if exists('*shiftwidth')\r\n+  func s:sw()\r\n+    return shiftwidth()\r\n+  endfunc\r\n+else\r\n+  func s:sw()\r\n+    return &sw\r\n+  endfunc\r\n+endif\r\n+\r\n let &cpo = s:keepcpo\r\n unlet s:keepcpo\r\n \r\n```","created_at":1426401273},{"id":710,"user_id":518808,"title":"search.c findmatchlimit()でflagsがFM_SKIPCOMMの場合の処理が未実装になっている","body":"See #701 ","created_at":1425627695},{"id":709,"user_id":10111,"title":"Patch 7.4.651 のテストが無い","body":"See #704","created_at":1425607707},{"id":707,"user_id":1162739,"title":"unix端末版vimで、シェルの呼び出しのタイミングでtcap-queryの応答が返るとエコーバックする","body":"DA2応答のバージョンパラメータ(`:echo split(v:termresponse, ';')[1]`)が141以上になる端末の場合、vimは[tcap-queryシーケンス](http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Device-Control-functions)を送出します。\r\nターミナルは、これに対する応答を、vimから見た標準入力に送ります。\r\n\r\nしかしこの応答と、vimからのシェル呼び出しなどがタイミング的にかぶってしまう場合があります(プラグインのautoloadなどで)。\r\nかぶるとどうなってしまうかというと、応答のエコーバックを引き起こします。\r\n\r\n![screenshot1](https://cloud.githubusercontent.com/assets/1162739/6369447/d0fba520-bd29-11e4-9e9f-49b850953db3.png)\r\n\r\nこれは、シェル呼び出しが行われた処理の際に、vimが端末をcookedモードにし、terminosの`c_lflag`フラグの`ECHO`のビットを立ててしまうからです。([ここ](https://github.com/vim-jp/vim/blob/master/src/os_unix.c#L4183))\r\n\r\nXTermを除くほとんどの端末は、冒頭のDA2応答の条件を満たしてこなかったため、いままであまり問題にならなかったのだと思いますが、最近のバージョンのTeraTermなどでもこの問題がおこるようになってしまいました。\r\n\r\nこの問題に対して、どのような方針で対処するのが最良でしょうか？\r\n\r\n再現方法(OSX 10.10 / Debin sid)：\r\n- ターミナルはXTermを使う。\r\n- [spf13/spf13-vim](https://github.com/spf13/spf13-vim)をcloneして、bootstrap.shを叩く。\r\n- いろいろな処理が走って`.vim`とか`.vimrc`が勝手に置き替わってしまうが、そのままデフォルトの状態でvimを立ち上げる。\r\n- .vimrcを下記に置き替えても再現する(ただし一瞬でredrawが走ってエコーバックのゴミが消えてしまう)\r\n\r\n```\r\nset rtp+=~/.vim/bundle/vundle\r\ncall vundle#rc()\r\n\r\nBundle 'gmarik/vundle'\r\nBundle 'bling/vim-airline'\r\nBundle 'majutsushi/tagbar'\r\n\r\nset laststatus=2\r\nsyntax on\r\n```\r\n\r\n参考(発端となったIssue)：\r\nhttps://github.com/saitoha/mouseterm-plus/issues/3","created_at":1425222825},{"id":706,"user_id":943423,"title":"'cursorlinenr' オプションの追加","body":"http://lingr.com/room/vim/archives/2014/12/10#message-20810130\r\n\r\n現状、行番号をハイライトするために 'cursorline' か 'relativenumber' の設定が必要だが、\r\n単独で設定するオプションが欲しいという話。\r\n\r\nhttps://gist.github.com/ichizok/8d016c1e4c791499d092\r\n\r\n```\r\n'cursorlinenr' 'culn'  boolean (default: 未設定 (-1) )\r\n                       local to window\r\n\r\n現在行のハイライトの設定。\r\n未設定の場合は従来通り ( 'cursorline' or 'relativenumber' による ) 。\r\noff の場合は  'cursorline' , 'relativenumber' の値によらずハイライト無効。\r\non の場合は  'cursorline' , 'relativenumber' の値によらずハイライト有効。\r\n```\r\n\r\nという感じです。","created_at":1425112654},{"id":705,"user_id":468368,"title":"vimrun.exe がないと system() を実行できない","body":"<blockquote class=\"twitter-tweet\" lang=\"ja\"><p><a href=\"https://twitter.com/kaoriya\">@kaoriya</a> 先生！前から気になってたんですが、winのvimで、gitとかpythonとか使ったプラグインが何か外部コマンド的なものを呼び出すときにタスクバーに一瞬アイコンが出るんですが、これ消せないっすかね。実害は全くなく気分的な問題なんですが、、、</p>&mdash; Kohichi Aoki (@drikin) <a href=\"https://twitter.com/drikin/status/570385010546450432\">2015, 2月 25</a></blockquote>\r\n\r\nこんな質問を受けて、そういえばDOS窓が開くのはWin9x絡みのslowdown対策で、今は必要ないんじゃないか&たしか vimrun.exe を消せば出なかったような(←これは自体はただの勘違い、たぶん)…と思い、実験してみたところ「テンポラリファイルが見つかりませんでした」みたいなエラーがでて、そもそも実行できませんでした。\r\n\r\n推測ですが、実行そのものはできているけど結果を格納すべきテンポラリファイルを取得できなかったんじゃないかと。実行したコマンドは以下のような単純なもの。\r\n\r\n    :echo system('go version')\r\n\r\nドキュメントには vimrun が無くても実行できるよと書いてあるので、ドキュメントか本体を修正する必要があるでしょう。\r\n\r\n> If \"vimrun\" cannot be found, the command is executed directly, but then the DOS window closes immediately after the external command has finished.","created_at":1424827699},{"id":703,"user_id":10111,"title":"mintty 上でも native vim.exe を動かせる様にしたい","body":"#702\r\n\r\n`vim -T ansi` が出来るのでもう少し頑張ればちゃんと動くだろうし、`MSYSTEM` 等の環境変数を見て自動でフォールバック出来るんじゃなかろうか。","created_at":1424236645},{"id":691,"user_id":142094,"title":"`set breakindent` 時にインデントのある行とない行を矩形選択するとハイライトがおかしい","body":"関連: #689\r\n\r\n```\r\n$ vim -u NONE\r\n:set breakindent\r\n:30vnew\r\n:call setline(1, '  0123456789 0123456789 0123456789 0123456789')\r\n:call setline(2, '0123456789 0123456789 0123456789 0123456789')\r\n<C-V>jgj   (1行目が全部ハイライトされてる)\r\n```\r\n\r\nこれは表示だけで編集は問題ないみたいです。\r\nむずかしそうなのでとりあえずたてるだけ……。","created_at":1422351391},{"id":677,"user_id":10111,"title":"mapgroup 欲しい？","body":"augroup の map 版が欲しいなーと思ったので試しに実装。\r\n\r\nhttps://gist.github.com/mattn/ca264155959f476bc8dd\r\n\r\n```vim\r\nnnoremap <leader>foo :<c-u>echo \"foo\"<cr>\r\n\r\nfunction! s:StartMapGroup()\r\n  mapgroup SuperMomonga\r\n    mapclear\r\n    nnoremap <leader>bar :<c-u>echo \"bar\"<cr>\r\n  mapgroup END\r\nendfunction\r\n\r\nfunction! s:EndMapGroup()\r\n  mapgroup SuperMomonga\r\n    mapclear\r\n  mapgroup END\r\nendfunction\r\n\r\ncommand StartMapGroup :call <SID>StartMapGroup()\r\ncommand EndMapGroup :call <SID>EndMapGroup()\r\n\r\n```\r\n\r\n```vim\r\n:StartMapGroup\r\n```\r\n\r\nこれを呼び出すと `<leader>bar` が使える\r\n\r\n```vim\r\n:EndMapGroup\r\n```\r\n\r\nこれを呼び出すと `<leader>bar` が消える。\r\nでも `<leader>foo` は消えない。\r\n\r\nmapgroup 外で mapclear するといままでの動作。mapgroup 内で mapclear すると、mapgroup 内で map した物だけ mapclear。\r\n\r\nあくまで提案用なのでドキュメントとかいろいろ足りてないですが、こんなのあったら便利ですかね？\r\n\r\n残課題\r\n* [ ] ドキュメント\r\n* [ ] syntax highlight","created_at":1418125345},{"id":665,"user_id":3213998,"title":"折り返し時、textwidthの計算にインデントやshowbreakの文字数が含まれる","body":"仕様なのかバグなのか判断できませんでしたが、直感と異なる動作のように感じたので報告させていただきます。長文で失礼いたします。。。\r\n\r\n##### 概要\r\n\r\n`textwidth`や`colorcolumn`がウィンドウの表示桁数より大きく、かつ`breakindent`や`showbreak`が表示されている時、折り返し後のインデントの文字数や`showbreak`の文字数も`textwidth`に含まれてカウントされているようです。\r\n\r\n少なくとも`textwidth`や`colorcolumn`, `breakindent`, `showbreak`のヘルプにはこの動作についての記述はないようでした。\r\n\r\nこの動作で問題だと感じたのは以下の４点です。\r\n\r\n- 問題点\r\n    1. `colorcolumn`が設定されている時、実際の文字数と異なる位置がハイライトされる\r\n    2. テキストの整形のされ方が、折り返しの有無や`breakindent`, `showbreak`の設定によって変わる\r\n    3. 整形後、文字の存在しない位置がハイライトされ続ける（**※少なくともこれはバグ？**）\r\n    4. `colorcolumn`がちょうど折り返し後のインデントや`showbreak`表示と重なると表示されない\r\n\r\nそもそも折り返されている状態で`colorcolumn`を表示したり整形したりすることに問題があるような気もしますが、仕様であればヘルプに一言記載があってもいいような気がします。\r\n\r\n##### 再現用vimrc\r\n\r\n```vim\r\nset nocompatible\r\nset number\r\nvertical new\r\nvertical resize 44\r\nset wrap\r\nset textwidth=59\r\nset colorcolumn=+1\r\ninsert\r\n123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789\r\n.\r\n\r\n```\r\n\r\n##### 再現手順とスクリーンショット\r\n\r\n1. 上記再現用vimrcをtext.vimとして `vim -N --noplugin -u test.vim`で起動\r\n    - この時点では60列目がハイライトされる\r\n![1](https://cloud.githubusercontent.com/assets/3213998/5056542/56fc5730-6ccd-11e4-85a0-4b2b9db3998c.png)\r\n2. `set showbreak=++++`を実行\r\n    - 表示上のハイライトの位置変わらず (問題点 i)\r\n![2](https://cloud.githubusercontent.com/assets/3213998/5056545/69343684-6ccd-11e4-8e8e-a5daa3b5d736.png)\r\n3. `set showbreak=`、`set breakindent`を実行し、`>>`でインデントする\r\n    - 表示上のハイライト位置変わらず (問題点i)\r\n![3](https://cloud.githubusercontent.com/assets/3213998/5056547/737621c0-6ccd-11e4-8706-501910e54066.png)\r\n4. 再度`set showbreak=++++`を実行\r\n    - 表示上のハイライト位置変わらず (問題点i)\r\n![4](https://cloud.githubusercontent.com/assets/3213998/5056549/99cb1ea2-6ccd-11e4-9777-1f850a1ad39f.png)\r\n5. `Vgw`とタイプして該当行を整形\r\n    - 一行目は40文字目で改行される (問題点ii)\r\n        - （折り返しがなければ50文字目で改行されるはず）\r\n    - 二行目以降は50文字目で改行される (問題点ii)\r\n        - （折り返しがなければ60文字目で改行されるはず）\r\n    - 全ての行でテキストの存在しない部分がハイライトされ続ける (問題点iii)\r\n![5](https://cloud.githubusercontent.com/assets/3213998/5056550/a7f8fe18-6ccd-11e4-92f1-2a2c521ff785.png)\r\n6. `set textwidth=49`を実行\r\n    - 一行目の`showbreak`のマークに重なる`colorcolumn`がハイライトされない (問題点iv)\r\n![6](https://cloud.githubusercontent.com/assets/3213998/5056556/cd12468c-6ccd-11e4-866e-8ca1a9f0f59d.png)\r\n7. `set textwidth=45`を実行\r\n    - 一行目の折り返し後インデントと重なる`colorcolumn`がハイライトされない (問題点iv)\r\n![8](https://cloud.githubusercontent.com/assets/3213998/5056557/d933767a-6ccd-11e4-9aaa-dbec2684cac5.png)\r\n\r\n##### 環境\r\n\r\nOS: Ubuntu 14.04 (64bit)\r\nVim: 7.4.516 (GVimと端末Vim両方で確認)\r\nOSデフォルトのVim (7.4.052) でも`showbreak`で同じ現象が起きることを確認\r\n\r\n以上です。長文失礼いたしました。","created_at":1416029503},{"id":663,"user_id":348382,"title":"GVim で <Left> にマッピングを定義すると日本語入力がおかしくなる","body":"Linux 環境 (Ubuntu 12.04 で確認) の GVim で日本語入力に mozc を利用している時に、下記のようなマッピングを定義すると、予測変換からの入力が2重に入力されてしまいます。\r\n```vim\r\ninoremap <Left> <Nop>\r\n```\r\n![1](http://i.gyazo.com/0f6ac6038e134723bec44b73ff240fe5.png)\r\n![2](http://i.gyazo.com/00028c8b76402126f75c86f75c30a1d3.png)\r\n\r\n#545 とも関連するのかはよく分かっていませんが、送られてくる `<Left>` 等のキーシーケンスを再マップしないようにできれば良いのかなぁと思いました。","created_at":1415809252},{"id":660,"user_id":3797062,"title":":unmap が {rhs} に設定されているものを消去してしまう","body":"#### 再現手順\r\n1. `vim -n -u NONE`\r\n2. `:noremap m n`\r\n3. `:echo maparg('m', 'n') ==# 'n' | \" => 1 `\r\n  - mapできてることを確認\r\n4. `:unmap n`\r\n  - ここで `E31: No such mapping` が出るべき(?)だけどでない\r\n  - (もとは`{rhs}`に設定されている`:noremap m n`が削除されてる)\r\n5. `:echo maparg('m', 'n') ==# 'n' | \" => 0 `\r\n  - Expect: 1, Result: 0\r\n6. `:echo maparg('m', 'n') ==# '' | \" => 1`\r\n  - Expect: 0, Result: 1 (m のマッピングがそもそも消えてる)\r\n7. `:unmap m`\r\n  - `E31: No such mapping` m のマッピングが消えてるのでエラー\r\n\r\nなお, 2 を`:map`にしても結果は同じでした。\r\n\r\n##### :h :unmap\r\n\r\n> ```\r\n> :unm[ap]  {lhs}\t\t\t|mapmode-nvo|\t\t*:unm*  *:unmap*\r\n> \t\t\tRemove the mapping of {lhs} for the modes where the\r\n> \t\t\tmap command applies.  The mapping may remain defined\r\n> \t\t\tfor other modes where it applies.\r\n> \t\t\tNote: Trailing spaces are included in the {lhs}.  This\r\n> \t\t\tunmap does NOT work: >\r\n> ```\r\n\r\n##### :h :unmap@ja\r\n\r\n> ```\r\n> :unm[ap]  {lhs}\t\t\t|mapmode-nvo|\t\t*:unm*  *:unmap*\r\n> \t\t\tマップコマンドに対応したモードの {lhs} というマップを\r\n> \t\t\t削除します。他のモードのマップは残ります。\r\n> \t\t\tNote: 末尾の空白は {lhs} に含まれます。次の unmap コマ\r\n> \t\t\tンドは機能しません: >\r\n> ```\r\n\r\n\r\n### NOTE\r\n`:unmap` の \"`{lhs}` というマップを削除します\" という文言が, コマンド使用時の `:unmap {lhs}` における `{lhs}`という意味でしかなく, そもそものマップで`{lhs}`だろうが`{rhs}`で使われていようが関係ないという意味であれば仕様どおりなのかも知れません。\r\n\r\nその場合は `{lhs}` だけを消すコマンドが欲しいなーと思います。\r\n","created_at":1414920765},{"id":653,"user_id":20474,"title":"辞書関数内で remove(l: 'self') でクラッシュ","body":"test.vim\r\n```vim\r\nlet obj = {}\r\nfunction! obj.rm()\r\n  call remove(l:, 'self')\r\nendfunction\r\n\r\ncall obj.rm()\r\n```\r\n\r\n```\r\n$ vim -u NONE -i NONE -N -S test.vim\r\nVim: Caught deadly signal ABRT\r\nVim: Finished.\r\n```\r\n\r\nVim 7.4.475\r\nOS: Gentoo Linux","created_at":1413216758},{"id":636,"user_id":8836552,"title":"vi ftp://サーバー名/  コマンドを実行すると\"netrw.vimの処理中にエラーが検出されました”のメッセージ","body":"下記の手順で行うとエラーが発生し、対象のFTPサーバーにアクセスできない。\r\n\r\n１．vi ftp://サーバー名/  コマンドを実行。\r\n２．ユーザー名、パスワードを入力。\r\n３．下記のメッセージが出る。\r\nnetrw.vimの処理中にエラーが検出されました\r\n行　27:\r\nE401:パターン区切りがみつかりません。\r\n、\r\n、\r\n、\r\n\r\n環境：Windows8\r\nインストールバージョン：vim74-kaoriya-win64","created_at":1411155241},{"id":634,"user_id":10111,"title":"ヒアドキュメント作ろうぜ！","body":"「ぶっヒアドキュメントする」…そんな言葉は使う必要がねーんだ。\r\nなぜなら、オレや、オレたちの仲間は、\r\nその言葉を頭の中に思い浮かべた時には！\r\n実際に相手をヒアドキュメントっちまって、もうすでに終わってるからだッ！\r\nだから使った事がねェーッ。\r\nmattn、オマエもそうなるよなァ～～～、オレたちの仲間なら…\r\nわかるか？オレの言ってる事…え？\r\n『ぶっヒアドキュメントした』なら、使ってもいいッ！\r\n\r\nオレらの思いはただこれだけだ。これを動かしたいッ！\r\n\r\n```vim\r\nlet F = lambda(`\r\n  let x = shougo#kisamamasaka(a:1)\r\n  let y = shougo#sonomasakada(a:1)\r\n  return shougo#fuhahahahaha(x, y)\r\n`)\r\n```\r\n\r\nパッチはまだない。\r\n\r\n* [ ] 実装\r\n* [ ] ドキュメント\r\n* [ ] テスト\r\n","created_at":1410487868},{"id":632,"user_id":10111,"title":"lambda 関数作ろうぜ！","body":"「ぶっラムダ関数する」…そんな言葉は使う必要がねーんだ。\r\nなぜなら、オレや、オレたちの仲間は、\r\nその言葉を頭の中に思い浮かべた時には！\r\n実際に相手をラムダ関数っちまって、もうすでに終わってるからだッ！\r\nだから使った事がねェーッ。\r\nmattn、オマエもそうなるよなァ～～～、オレたちの仲間なら…\r\nわかるか？オレの言ってる事…え？\r\n『ぶっラムダ関数した』なら、使ってもいいッ！\r\n\r\nオレらの思いはただこれだけだ。これを動かしたいッ！\r\n```vim\r\necho map([1, 2, 3], lambda('return a:1 + 1')) \" [2,3,4]\r\necho sort([3,7,2,1,4], lambda('return a:1 - a:2')) \" [1,2,3,4,7]\r\nlet s:x = 2\r\necho filter([1, 2, 3], lambda('return a:1 >= s:x')) \" [2,3]\r\n```\r\nシンタックス等はこれから検討しましょう。\r\n\r\nひとまず上記の例が動くパッチは書いた。\r\n\r\nhttps://gist.github.com/mattn/50fa1dc854911d5cb797\r\n\r\n---\r\n\r\n#### 残課題\r\n\r\n* [x] シンボルが見えなかった場合のフォールバック(ローカルスコープ？もしくは親)\r\n* [x] ドキュメント\r\n* [x] テスト\r\n* [x] lambda 内から変数の unlet\r\n* [x] メモリリーク/過GC検証\r\n* [x] 再起呼び出し時の検証\r\n* [x] シンタックスの決定\r\n* [x] sandbox対応\r\n* [x] syntax/vim.vim に lambda を追加\r\n\r\n#### 重要ではない課題(nice to have)\r\n\r\n* [ ] `function('<LAMBDA>1')` がE129になる\r\n* [ ] より客観的かつ機械的なメモリリーク検証","created_at":1410321780},{"id":631,"user_id":468368,"title":"公式パッチのクローンが欲しい","body":"vim-jp/patchesプロジェクトを作って、\r\nftp://ftp.vim.org/pub/vim/patches\r\nでリリースされたパッチをひたすらクローンしておくってのはどうか?","created_at":1409792695},{"id":630,"user_id":1130799,"title":"ビジュアルモードでの複数行選択後に入ったインサートモードでのカーソルキーを用いた編集が意図しない結果となる","body":"説明し難いので手順と結果を見て頂きたいのですが、ビジュアルモードで複数行を選択して、\r\n`I`や`A`でインサートモードに入った後、カーソルキーで移動しつつ文字を入力し、\r\nノーマルモードに抜けると、実際に編集した行以外への編集結果がおかしくなります。\r\n\r\nこのような場合ではカーソルキーは利用できない、という仕様なのであればそれはそれで良いのですが(ヘルプで見つけられませんでした)、\r\nvimとMacVimで異なる結果となったのが気になります。\r\n\r\n\r\n-\t手順\r\n\t1.\tカーソルキーが利用できる状態で起動  \r\n\t\t\r\n\t\t\t$ vim -u NONE --cmd \"set nocompatible\"\r\n\t\t\t$ mvim -u NONE --cmd \"set nocompatible\"\r\n\t\t\r\n\t2.\t以下を入力  \r\n\t\t\r\n\t\t\tabc\r\n\t\t\tdef\r\n\t\t\r\n\t3.\t`b`の位置にカーソルを移動\r\n\t4.\t`<C-v>jI`で、句形ビジュアルモードでの選択後、インサートモードに入る\r\n\t5.\t`1<Right>2<Esc>`と入力する\r\n\r\n-\t結果(vim-7.4.426, vim-7.3)\r\n\t\r\n\t\ta1b2c\r\n\t\td1bef\r\n\t\r\n-\t結果(MacVim-7.4.383)\r\n\t\r\n\t\ta1b2c\r\n\t\tdef2c\r\n\t\r\n-\t期待する結果\r\n\t\r\n\t\ta1b2c\r\n\t\td1e2f\r\n\t\r\n-\t確認環境\r\n\t-\tMacVim-7.4.383/vim-7.4.426/vim-7.3 Mac OSX 10.9\r\n\r\nマルチバイト(UTF-8)だと、以下のようになります(`<81><8f>`はバイト列)。\r\n\r\n\t\tあいう\r\n\t\tかきく\r\n\r\n↓\r\n\r\n\t\tあ1い2う\r\n\t\tかき 2 <81><8f>\r\n","created_at":1409761438},{"id":627,"user_id":10111,"title":"Windows で encoding を変更すると swap が残る","body":"See\r\nhttps://github.com/vim-jp/issues/issues/625#issuecomment-54100433\r\nhttps://github.com/vim-jp/issues/issues/625#issuecomment-54099971\r\n\r\nencoding=utf-8 にするとバッファ名のエンコーディングを変更するが swap のエンコーディングと不一致した為消せてない物と思われる。\r\n\r\n関連 #625","created_at":1409620985},{"id":626,"user_id":468368,"title":"signを操作するVim script関数がほしい","body":"対象となりうる操作\r\n\r\n*  place\r\n*  unplace\r\n*  list\r\n*  jump\r\n*  define\r\n*  undefine\r\n\r\n---\r\n\r\n現在は **仕様検討フェーズ** なので any ideas are welcome","created_at":1409545129},{"id":623,"user_id":480049,"title":"NFAエンジンでは '[  のマーク位置を示す正規表現パターンが使えない？","body":"Vim では正規表現でVimのマーク位置を扱えますが、`\\%'[.*` という検索パターンが `set re=1` だと動くのに対し `set re=2` だとエラー(E486)になってしまいます。 `\\%'].*` はどちらのエンジンでも動くようです。ほかの方の環境でも再現するでしょうか？\r\n\r\n| pattern | old | NFA |\r\n|:-------:|:---:|:---:|\r\n|`\\%'[.*`|○|×|\r\n|`\\%'].*`|○|○|\r\n\r\n環境\r\nwindows 7 64bit, kaoriya版　32bit gvim 7.4.389","created_at":1409377295},{"id":619,"user_id":303372,"title":"text-objectの ci) がシングルクォート内で動作しない(text-objectsのi)の挙動が理解できない)","body":"こんにちは\r\n\r\ntext-objectsの`i)`の挙動がよくわからなかったので質問させてください。\r\n\r\ntext-objectsの`i)`の挙動が、`cpoptions`の`M`の指定有無で変わり、\r\nこの挙動が仕様なのかどうかがhelpを見た限りではわかりませんでした。\r\n\r\n試したサンプルを以下に記載します。\r\n\r\n```vim\r\n\" いずれもhogeのhの位置でvi)した。^^^は選択された部分。\r\n\r\n\" cpo-Mによらず同じケース\r\n\" ケース1\r\n((hoge))\r\n  ^^^^\r\n\" ケース2\r\n(\\(hoge\\))\r\n ^^^^^^^^\r\n\r\n\" cpo-Mによって異なるケース\r\n\" ケース3\r\n\" Mなしの場合\r\n(hoge\\))\r\n ^^^^^^\r\n\" Mありの場合\r\n(hoge\\))\r\n ^^^^^\r\n\r\n\" ケース4\r\n\" Mなしの場合\r\n(\\(hoge))\r\n ^^^^^^\r\n\" Mありの場合\r\n(\\(hoge))\r\n ^^^^^^^\r\n```\r\n\r\nケース1と3の動きはまぁ納得できるものなのですが、\r\nケース2とケース4の動きがよくわかりませんでした。\r\n`cpo-M`ありでバックスラッシュが無視されるのであれば、\r\nケース2、ケース4はhogeの部分が選択されるのが正しいように思えました。\r\n\r\n質問を整理すると、以下3点を確認したいです。\r\n\r\n1. text-objectsの`i)`の挙動が`cpo-M`に依存するのは仕様か？\r\n2. 1.が仕様なのであれば、現状の動作は意図したものなのか？\r\n3. 1.が仕様でないのであれば、どのような動作になるべきなのか？\r\n\r\nよろしくお願いします。\r\n\r\nP.S.\r\n補足ですが、上記疑問は以下のようなコードでci)したときに\r\n意図しない挙動だったため、調査したものです。\r\n```vim\r\n\" Mなし\r\n\" hogeのhでci)\r\ncall hoge_func('\\%(hoge\\)')\r\n                   ^^^^^^^\r\n```\r\n\r\n関数の引数部分を選択したかったのですが、エスケープが考慮されて\r\n上記のような挙動になっていました。\r\n現状動作を考えると、仕様のような気がしますがちょっと不便です。。。","created_at":1409056595},{"id":616,"user_id":142094,"title":"ユーザー定義コマンドで -complete=file を使うとスペースが受け取れない","body":"```vim\r\n:command! -nargs=? Test1 echo [<q-args>]\r\n:Test1 a b c\r\n['a b c']\r\n:Test1 a\\ b\\ c\r\n['a\\ b\\ c']\r\n\r\n:command! -nargs=? -complete=file Test2 echo [<q-args>]\r\n:Test2 a b c\r\nE172: ファイル名は 1 つにしてください\r\n:Test2 a\\ b\\ c\r\n['a b c']\r\n```\r\n\r\n`netrw-:MT` が空白を含んだディレクトリ名でエラーになる。","created_at":1408888041},{"id":615,"user_id":1130799,"title":"プロセス置換ファイルオープン時のfileencodingsの振る舞いについて","body":"初めまして。\r\n\r\nbash/zshのプロセス置換を利用してファイルを開くとき、\r\nfileencodingsの先頭の文字コードでiconvによる判定・変換エラーとなった場合？、\r\n2個目以降に妥当な文字コードを指定していても再判定は行われず、空のバッファが開きます。\r\n\r\n-\t手順  \r\n\t\r\n\t\t$ export LANG=ja_JP.utf8\r\n\t\t$ vim -u NONE --cmd \"set fileencodings=cp932,utf-8\" <(echo \"テスト\")\r\n-\t結果  \r\n\tバッファに文字列が何も表示されない状態でvimが起動する(ファイル自体は`/dev/fd/`配下のものを開いている)。\r\n-\t期待する結果  \r\n\tutf-8で開かれ、バッファに`テスト`と表示される。  \r\n-\t期待する結果が得られる例  \r\n\t-\t明示的にutf-8と指定  \r\n\t\t\r\n\t\t\t$ vim -u NONE --cmd \"e ++enc=utf-8\" --cmd \"set fileencodings=cp932,utf-8\" <(echo \"テスト\")\r\n\t-\t=()での一時ファイルを使った場合(zsh限定)  \r\n\t\t\r\n\t\t\t$ vim -u NONE --cmd \"set fileencodings=cp932,utf-8\" =(echo \"テスト\")\r\n\t-\t標準入力リダイレクト  \r\n\t\t\r\n\t\t\t$ echo \"テスト\" | vim -u NONE --cmd \"set fileencodings=cp932,utf-8\" -\r\n-\t確認環境  \r\n\t-\tvim 7.4.415 +iconv +multi_byte\r\n\t-\tCentOS6.5/bash, Mac OSX 10.9/zsh\r\n\r\nプロセス置換の仕組み上、妥当な振る舞いのようには思うのですが、\r\n直感的な挙動では無かったので、何か回避策など無いかと思い、チケットを起こしました。\r\n(`$ vimdiff -R <(grep foo fileA) <(grep foo fileB)`のような使い方が出来なかったので…)","created_at":1408850341},{"id":613,"user_id":3096934,"title":"cursorline と cursorcolumn の動きが違う","body":"```vim\r\nhi clear CursorLine\r\nhi clear CursorColumn\r\nhi CursorLine guibg=grey\r\nhi CursorColumn guibg=grey\r\nset cursorline\r\nset cursorcolumn\r\ncall setline(1, repeat(['ab12cd34ef'], 10))\r\ncall matchadd(\"DiffText\", '\\d\\+', 0)\r\n```\r\n\r\nのように、cursorline と cursorcolumn を同じにして、いずれかの行の数字の位置にカーソルを置くと、\r\n列は数字の部分が coursorcolumn でハイライトされるのに、行は数字の部分が赤のまま残ります。\r\nこの現象は 7.3.1314 でも 7.4.410 でも発生するので、今に始まったことではありませんが、\r\n7.4.391  no 'cul' highlight with cursor on a line with diff highlight\r\nで diff モードでは cursorline を優先するように修正されたことから、cursorcolumn だけでなく、\r\nnon-diff モードとの間にも違いが出てきたようです。\r\ncursorcolumn はあまり使わないので、cursorline と動きが違ってもさほど支障はありませんが、\r\ndiff と  non-diff の違いは気になります。統一するのはいかがでしょうか。","created_at":1408504227},{"id":611,"user_id":142094,"title":"vim を終了しても端末のハイライトが消えない","body":"https://github.com/vim-jp/issues/issues/603#issuecomment-52153259\r\n\r\nubuntu の gnome-terminal, mlterm, xterm で発生。\r\n\r\n最小手順\r\n\r\n```sh\r\n# 1\r\n$ vim -u NONE --cmd \"redraw\" --cmd \"quit\"\r\n\r\n# 2 (1 はカーソルの色が変わりますがちょっとわかりにくいので)\r\n$ vim -u NONE --cmd \"redraw\"\r\n:quit\r\n```\r\n\r\nvimrc の中とか起動中に redraw を実行すると発生するもよう。\r\n\r\n端末の復帰ポイントがずれるような感じ?\r\n\r\nとりあえず立てるだけ。","created_at":1408236871},{"id":610,"user_id":468368,"title":"VimからPython 3.xを使うと落ちることがある","body":"py2exe などで加工された python3x.dll が path 上にあると、\r\nPythonの必須モジュールが読み込めないために初期化に失敗し、\r\nPython側で `exit()` を呼ばれてVimが終了してしまう。\r\n\r\n#594 からの継続で、向こうでは2.xについて対応した。\r\nこれは Python 2.7/3.2 からの仕様で\r\n\r\n> 必須モジュールが読み込めなかったら `exit()` したほうが便利じゃね?\r\n\r\nという残念な提案が通ったことによる。\r\n\r\n基本的には [2.7 用のパッチ](https://gist.github.com/koron/aa53ddf11510e9d8942d/52662223b31cd5f27fb8362dd1c8b6ed96b372e4) をポートすれば良いのだが、\r\n以下の2点に注意する必要がありそう。\r\n\r\n*   必須モジュールが増えており、2.x だけでは対応しきれない可能性がある\r\n*   テストが面倒。一回、方式を確立してしまえば良いはずだが、ちょっと面倒","created_at":1408041906}]